var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/injectables/B3PropagatorService.html",[0,0.312,1,1.702]],["body/injectables/B3PropagatorService.html",[0,0.487,1,3.049,2,1.264,3,0.499,4,0.499,5,0.388,6,0.422,7,4.221,8,1.766,9,0.499,10,0.388,11,1.236,12,2.78,13,0.903,14,3.36,15,1.301,16,2.457,17,0.984,18,0.033,19,2.865,20,0.637,21,0.558,22,2.037,23,2.116,24,1.766,25,2.595,26,1.264,27,1.264,28,0.499,29,0.984,30,1.264,31,0.62,32,0.02,33,0.025,34,0.02]],["title/interfaces/CommonCollectorConfig.html",[35,0.606,36,1.305]],["body/interfaces/CommonCollectorConfig.html",[3,0.307,4,0.307,5,0.239,6,0.207,9,0.307,10,0.239,16,0.998,18,0.033,20,0.272,21,0.343,28,0.706,31,0.381,32,0.012,33,0.018,34,0.012,35,0.986,36,1.732,37,0.917,38,0.998,39,0.998,40,1.593,41,1.523,42,1.463,43,1.415,44,1.864,45,2.068,46,2.311,47,2.311,48,1.697,49,1.951,50,1.401,51,2.541,52,1.369,53,2.06,54,1.463,55,1.908,56,1.908,57,2.499,58,0.814,59,1.14,60,1.302,61,1.74,62,1.062,63,1.466,64,1.463,65,0.917,66,1.087,67,0.716,68,0.844,69,1.087,70,1.087,71,1.087,72,1.463,73,1.907,74,1.05,75,1.463,76,1.187,77,1.74,78,1.74,79,1.187,80,1.463,81,1.593,82,1.187,83,1.463,84,1.187,85,2.03,86,0.998,87,1.087,88,0.68,89,1.74,90,1.74,91,1.593,92,1.593,93,0.814,94,0.508,95,1.187,96,1.187,97,1.187]],["title/injectables/CompositePropagatorService.html",[0,0.312,98,1.877]],["body/injectables/CompositePropagatorService.html",[0,0.426,1,3.03,2,1.027,3,0.405,4,0.405,5,0.315,6,0.417,8,1.436,9,0.405,10,0.315,11,1.08,12,2.567,13,0.991,15,1.201,16,1.318,17,0.8,18,0.033,19,2.681,20,0.658,21,0.453,22,1.78,23,1.719,24,1.436,25,2.109,26,1.027,27,1.027,28,0.405,29,0.8,30,1.027,31,0.504,32,0.016,33,0.022,34,0.016,43,0.8,50,0.87,52,1.277,58,0.734,62,0.991,65,1.212,67,0.946,69,2.529,88,0.612,94,0.671,98,3.105,99,4.175,100,2.567,101,3.271,102,3.097,103,3.097,104,3.271,105,1.436,106,3.271,107,1.719,108,2.731,109,2.109,110,3.631,111,2.561,112,1.436,113,1.436,114,3.271,115,2.629,116,3.271,117,3.271,118,3.271,119,3.271,120,3.271,121,3.271]],["title/injectables/ConsoleSpanExporterService.html",[0,0.312,122,2.087]],["body/injectables/ConsoleSpanExporterService.html",[0,0.485,2,1.254,3,0.495,4,0.495,5,0.385,6,0.42,9,0.495,10,0.385,11,1.23,13,0.895,15,1.297,17,0.976,18,0.033,20,0.605,21,0.553,26,1.254,27,1.254,28,0.495,29,0.976,30,1.254,31,0.615,32,0.02,33,0.025,34,0.02,74,1.455,122,3.728,123,4.2,124,3.352,125,1.914,126,2.916,127,3.04,128,3.992,129,3.04,130,2.858,131,2.208,132,2.314,133,1.914]],["title/injectables/HttpTextPropagatorService.html",[0,0.312,134,2.087]],["body/injectables/HttpTextPropagatorService.html",[0,0.388,1,2.908,2,0.899,3,0.355,4,0.355,5,0.276,6,0.336,8,1.256,9,0.355,10,0.276,11,0.985,12,2.426,13,0.642,15,0.904,17,0.7,18,0.033,19,2.235,20,0.648,21,0.397,22,1.878,23,1.505,24,1.256,26,0.899,27,0.899,28,0.499,29,0.7,30,0.899,32,0.014,33,0.02,34,0.014,41,1.165,48,1.764,52,1.165,59,1.464,62,0.642,65,1.061,67,0.828,68,1.374,74,0.828,88,0.754,93,0.904,94,1.038,98,3.207,102,2.908,103,2.803,110,3.871,111,2.703,112,1.256,113,2.34,134,3.262,135,2.597,136,2.451,137,3.363,138,4.016,139,2.863,140,2.925,141,2.925,142,1.256,143,3.207,144,3.363,145,2.39,146,3.385,147,2.39,148,2.39,149,2.078,150,1.845,151,2.078,152,2.39,153,2.39,154,2.863,155,4.224,156,2.863,157,4.452,158,2.863,159,2.39,160,2.863]],["title/injectables/HttpTraceContextPropagatorService.html",[0,0.312,102,1.702]],["body/injectables/HttpTraceContextPropagatorService.html",[0,0.484,2,1.25,3,0.493,4,0.493,5,0.384,6,0.419,8,1.747,9,0.493,10,0.384,11,1.228,12,2.769,13,0.893,14,3.324,15,1.296,17,0.973,18,0.033,19,2.855,20,0.635,21,0.552,22,2.023,23,2.093,24,1.747,25,2.566,26,1.25,27,1.25,28,0.493,29,0.973,30,1.25,31,0.613,32,0.02,33,0.025,34,0.02,52,1.452,67,1.759,102,3.037,112,2.204,135,3.237]],["title/interfaces/IExporter.html",[35,0.606,131,1.421]],["body/interfaces/IExporter.html",[3,0.528,4,0.528,5,0.41,6,0.437,9,0.528,10,0.41,11,1.28,13,0.955,15,0.955,17,1.041,18,0.032,20,0.468,28,0.528,32,0.021,33,0.026,34,0.021,35,1.062,37,1.578,74,1.515,126,3.43,127,3.11,130,3.004,131,2.298,133,2.041,161,3.555,162,3.802,163,4.259,164,3.802,165,5.238]],["title/interfaces/IPropagator.html",[22,1.305,35,0.606]],["body/interfaces/IPropagator.html",[3,0.534,4,0.534,5,0.415,6,0.44,9,0.534,10,0.415,11,1.29,12,2.848,13,0.966,15,0.966,17,1.053,18,0.032,19,2.922,20,0.473,22,2.125,24,1.891,28,0.534,32,0.021,33,0.026,34,0.021,35,1.068,37,1.596,48,1.718,162,3.829,164,3.829,166,3.597,167,4.309,168,4.404]],["title/interfaces/JaegerCollectorConfig.html",[35,0.606,80,1.305]],["body/interfaces/JaegerCollectorConfig.html",[3,0.341,4,0.341,5,0.265,6,0.229,9,0.341,10,0.265,16,1.108,18,0.033,20,0.302,21,0.381,28,0.724,31,0.424,32,0.014,33,0.019,34,0.014,35,1.022,36,1.578,37,1.019,38,1.108,39,1.108,40,1.207,41,1.579,42,1.578,43,0.957,44,1.764,45,1.69,46,1.719,47,1.719,48,1.519,49,1.451,50,0.732,51,2.181,52,1.132,53,1.318,54,1.108,55,1.445,56,1.445,57,2.565,58,0.617,59,0.864,60,1.445,61,1.877,62,1.178,63,1.556,64,1.578,65,1.019,66,1.207,67,0.795,68,0.938,69,1.207,70,1.207,71,1.207,72,1.578,73,2.002,74,1.132,75,1.578,76,1.318,77,1.877,78,1.877,79,1.318,80,1.837,81,2.396,82,1.877,83,1.578,84,1.318,85,2.116,86,1.108,87,1.207,88,0.733,89,1.877,90,1.877,91,1.719,92,1.719,93,0.878,94,0.564,95,1.318,96,1.318,97,1.318]],["title/injectables/JaegerExporterService.html",[0,0.312,169,1.877]],["body/injectables/JaegerExporterService.html",[0,0.43,2,1.044,3,0.412,4,0.412,5,0.32,6,0.421,9,0.553,10,0.32,11,1.091,13,1.001,15,1.327,17,0.812,18,0.033,20,0.592,21,0.461,26,1.044,27,1.044,28,0.412,29,1.233,30,1.044,31,0.688,32,0.016,33,0.022,34,0.016,43,0.812,49,1.231,50,0.884,58,0.745,81,1.458,88,1.084,93,0.745,94,1.106,100,2.417,105,1.458,107,1.747,113,1.458,115,1.747,125,1.593,127,2.833,129,2.833,130,2.695,131,1.959,132,1.926,133,1.593,142,1.458,169,3.125,170,4.209,171,5.39,172,3.727,173,3.727,174,4.5,175,3.727,176,3.241,177,2.588,178,3.727,179,3.241,180,3.727,181,1.926,182,3.323,183,3.323,184,3.323,185,2.774,186,2.142,187,3.323,188,2.412,189,3.323,190,3.323]],["title/injectables/JaegerHttpTracePropagatorService.html",[0,0.312,103,1.702]],["body/injectables/JaegerHttpTracePropagatorService.html",[0,0.434,2,1.058,3,0.417,4,0.417,5,0.325,6,0.452,8,1.478,9,0.558,10,0.325,11,1.102,12,2.598,13,1.138,15,1.215,17,0.824,18,0.033,19,2.708,20,0.639,21,0.467,22,1.815,23,1.771,24,1.478,26,1.058,27,1.058,28,0.417,29,0.824,30,1.058,31,0.519,32,0.017,33,0.022,34,0.017,42,1.815,43,0.824,50,1.199,52,1.567,57,1.977,58,0.755,62,0.755,67,1.567,87,2.228,88,1.088,93,0.755,94,1.112,100,2.433,103,2.849,105,1.478,107,1.771,108,2.812,109,2.172,111,3.142,113,1.478,115,2.668,142,1.478,181,1.953,186,2.172,191,4.524,192,4.506,193,3.369,194,2.812,195,2.812,196,3.369,197,3.369,198,3.369]],["title/interfaces/JaegerPropagatorConfig.html",[35,0.606,85,1.305]],["body/interfaces/JaegerPropagatorConfig.html",[3,0.341,4,0.341,5,0.265,6,0.229,9,0.341,10,0.265,16,1.108,18,0.033,20,0.302,21,0.381,28,0.724,31,0.424,32,0.014,33,0.019,34,0.014,35,1.022,36,1.578,37,1.019,38,1.108,39,1.108,40,1.207,41,1.579,42,1.578,43,0.957,44,1.715,45,1.69,46,1.719,47,1.719,48,1.579,49,1.451,50,0.732,51,2.181,52,1.132,53,1.318,54,1.108,55,1.445,56,1.445,57,2.565,58,0.617,59,0.864,60,1.445,61,1.877,62,1.115,63,1.556,64,1.578,65,1.019,66,1.207,67,0.795,68,0.938,69,1.207,70,1.207,71,1.207,72,1.578,73,2.002,74,1.132,75,1.578,76,1.318,77,2.186,78,1.877,79,1.318,80,1.578,81,1.719,82,1.318,83,1.578,84,1.318,85,2.263,86,1.578,87,2.181,88,0.733,89,1.877,90,1.877,91,1.719,92,1.719,93,0.878,94,0.564,95,1.318,96,1.318,97,1.318]],["title/injectables/NoopHttpTextPropagatorService.html",[0,0.312,143,1.877]],["body/injectables/NoopHttpTextPropagatorService.html",[0,0.487,2,1.264,3,0.499,4,0.499,5,0.388,6,0.422,8,1.766,9,0.499,10,0.388,11,1.236,12,2.78,13,0.903,15,1.301,17,0.984,18,0.033,19,2.865,20,0.607,21,0.558,22,2.037,23,2.116,24,1.766,26,1.264,27,1.264,28,0.499,29,0.984,30,1.264,31,0.62,32,0.02,33,0.025,34,0.02,111,2.931,136,2.658,143,3.362,199,4.221,200,4.025,201,6.099]],["title/interfaces/OpenTelemetryConfig.html",[35,0.606,88,0.606]],["body/interfaces/OpenTelemetryConfig.html",[3,0.32,4,0.32,5,0.249,6,0.215,9,0.32,10,0.249,16,1.04,18,0.033,20,0.283,21,0.358,28,0.713,31,0.397,32,0.013,33,0.018,34,0.013,35,1.001,36,1.945,37,0.956,38,1.04,39,1.04,40,1.133,41,1.482,42,1.507,43,1.38,44,1.678,45,1.631,46,1.642,47,1.642,48,1.482,49,1.386,50,1.363,51,2.118,52,1.082,53,1.237,54,1.04,55,1.356,56,1.356,57,2.419,58,0.579,59,0.811,60,1.356,61,1.793,62,1.082,63,1.501,64,1.507,65,0.956,66,1.133,67,0.746,68,0.88,69,1.133,70,1.133,71,1.133,72,1.945,73,1.945,74,1.082,75,1.507,76,1.237,77,1.793,78,1.793,79,1.237,80,1.945,81,1.642,82,1.237,83,1.945,84,1.237,85,2.385,86,1.04,87,1.133,88,0.904,89,2.562,90,2.562,91,2.345,92,2.345,93,0.839,94,0.53,95,1.237,96,1.237,97,1.237]],["title/interceptors/OpenTelemetryHttpInterceptor.html",[202,1.877,203,2.087]],["body/interceptors/OpenTelemetryHttpInterceptor.html",[0,0.238,3,0.187,4,0.187,5,0.145,6,0.42,9,0.585,10,0.145,11,0.603,13,1.096,15,0.895,17,1.048,18,0.033,20,0.578,21,0.209,24,0.661,25,1.589,26,0.473,27,0.473,28,0.187,29,0.765,30,0.473,31,0.66,32,0.007,33,0.012,34,0.007,41,1.046,42,0.993,43,1.107,45,1.677,46,1.374,47,1.881,48,1.154,50,1.301,51,1.881,53,1.5,58,1.015,59,0.774,74,0.713,79,0.722,86,1.458,88,0.678,93,0.338,94,0.969,96,1.914,100,1.734,105,1.986,107,0.791,110,1.093,112,1.082,113,2.308,115,2.99,124,3.193,126,2.098,129,1.296,130,2.264,133,0.722,134,3.045,136,0.791,137,2.058,142,0.661,149,1.093,162,1.789,177,1.429,181,0.873,195,1.257,202,1.815,203,1.589,204,1.505,205,4.2,206,1.257,207,2.058,208,3.13,209,3.778,210,2.465,211,2.465,212,3.13,213,2.465,214,3.13,215,2.613,216,3.045,217,2.465,218,2.465,219,1.505,220,2.465,221,2.613,222,2.465,223,1.815,224,3.619,225,2.465,226,2.465,227,5.031,228,1.505,229,2.058,230,5.783,231,2.465,232,4.287,233,1.505,234,1.505,235,1.429,236,2.465,237,2.058,238,2.465,239,1.505,240,3.579,241,1.789,242,2.465,243,1.505,244,1.505,245,2.613,246,3.619,247,2.613,248,2.058,249,1.505,250,4.287,251,3.619,252,1.505,253,2.465,254,2.058,255,3.021,256,1.429,257,2.058,258,3.13,259,3.619,260,2.465,261,3.021,262,1.505,263,2.465,264,2.465,265,3.13,266,1.093,267,1.257,268,1.093,269,2.465,270,2.465,271,2.465,272,2.465,273,1.505,274,1.505,275,1.257,276,1.505,277,1.505,278,1.505,279,1.505,280,1.505,281,2.465,282,1.505,283,1.505,284,1.505,285,1.505,286,1.505,287,1.505,288,1.505,289,1.505,290,1.505,291,1.505,292,1.505,293,1.505,294,2.627,295,2.465,296,2.465,297,2.465,298,1.505,299,1.789,300,1.505,301,1.505,302,1.505,303,1.505,304,1.505,305,1.505,306,1.505,307,1.505,308,1.505,309,1.505,310,1.505,311,1.505,312,1.505,313,3.13,314,1.505,315,3.13,316,1.505,317,1.505,318,1.505,319,1.505,320,1.505,321,1.505,322,1.505,323,2.465,324,1.505,325,1.505,326,1.505,327,1.505]],["title/modules/OpenTelemetryInterceptorModule.html",[328,2.351,329,2.087]],["body/modules/OpenTelemetryInterceptorModule.html",[3,0.452,4,0.452,5,0.351,6,0.396,11,0.891,13,0.817,15,0.817,17,0.891,18,0.033,20,0.637,21,0.505,28,0.452,29,0.891,31,0.561,32,0.018,33,0.023,34,0.018,43,1.29,50,0.97,58,0.817,88,1.047,93,1.064,94,1.083,100,1.747,105,1.6,142,1.6,150,3.059,194,3.043,203,3.059,241,2.646,266,2.646,329,3.737,330,2.646,331,4.746,332,3.645,333,4.746,334,3.645,335,4.746,336,3.645,337,5.278,338,4.405,339,4.746,340,3.962,341,3.962,342,3.645,343,3.645,344,2.646,345,3.043,346,3.043,347,4.746,348,3.645,349,3.043,350,3.645,351,3.645,352,3.043,353,2.646,354,3.645,355,3.645,356,3.645]],["title/interfaces/OtelCollectorConfig.html",[35,0.606,72,1.305]],["body/interfaces/OtelCollectorConfig.html",[3,0.331,4,0.331,5,0.258,6,0.223,9,0.331,10,0.258,16,1.078,18,0.033,20,0.294,21,0.371,28,0.719,31,0.412,32,0.013,33,0.019,34,0.013,35,1.013,36,1.547,37,0.991,38,1.078,39,1.078,40,1.174,41,1.564,42,1.547,43,1.2,44,1.75,45,1.664,46,1.685,47,1.685,48,1.503,49,1.422,50,1.306,51,2.154,52,1.11,53,1.282,54,1.078,55,1.406,56,1.406,57,2.548,58,0.6,59,0.84,60,1.406,61,1.84,62,1.101,63,1.532,64,1.547,65,0.991,66,1.174,67,0.773,68,0.912,69,1.174,70,1.174,71,1.685,72,1.809,73,2.297,74,1.299,75,1.809,76,1.84,77,2.153,78,2.593,79,1.282,80,1.547,81,1.685,82,1.282,83,1.547,84,1.282,85,2.094,86,1.078,87,1.174,88,0.719,89,1.84,90,1.84,91,1.685,92,1.685,93,0.861,94,0.549,95,1.282,96,1.282,97,1.282,357,3.839]],["title/injectables/OtelcolExporterService.html",[0,0.312,358,1.877]],["body/injectables/OtelcolExporterService.html",[0,0.43,2,1.041,3,0.411,4,0.411,5,0.319,6,0.449,9,0.552,10,0.319,11,1.09,13,1.129,15,1.208,17,0.811,18,0.033,20,0.636,21,0.46,26,1.041,27,1.041,28,0.411,29,1.231,30,1.041,31,0.511,32,0.016,33,0.022,34,0.016,41,1.289,42,1.796,43,0.811,44,1.041,49,1.228,50,1.186,58,0.744,73,1.336,78,1.589,88,1.083,92,2.21,93,0.744,94,1.105,100,2.414,105,1.455,107,1.743,113,1.455,115,2.647,125,1.589,127,2.831,130,2.414,131,1.956,132,1.922,133,1.589,142,1.455,181,1.922,186,2.137,188,2.407,358,3.122,359,4.495,360,4.458,361,3.316,362,5.619,363,5.619,364,3.236,365,3.316,366,3.316,367,3.316,368,3.316,369,3.316]],["title/injectables/SpanExporterService.html",[0,0.312,216,2.087]],["body/injectables/SpanExporterService.html",[0,0.405,2,0.955,3,0.377,4,0.377,5,0.293,6,0.351,9,0.377,10,0.293,11,1.027,13,0.682,15,1.08,17,0.743,18,0.033,20,0.647,21,0.421,26,0.955,27,0.955,28,0.521,29,0.743,30,0.955,32,0.015,33,0.021,34,0.015,44,1.512,45,1.557,59,0.955,62,0.942,63,1.433,64,1.693,74,0.879,88,0.787,93,0.942,94,1.066,113,2.393,122,3.104,124,1.763,125,1.458,126,3.268,127,2.73,129,2.531,130,2.308,131,2.113,132,1.763,133,1.458,138,4.093,140,3.05,141,3.05,142,1.334,145,2.538,147,2.538,148,2.538,149,2.207,151,2.207,152,2.538,153,2.538,155,4.02,157,4.336,169,3.268,216,2.709,256,2.436,275,4.336,358,3.268,370,3.05,371,4.02,372,3.041,373,3.268,374,3.05,375,3.041,376,3.041,377,2.538,378,3.041]],["title/interfaces/ZipkinCollectorConfig.html",[35,0.606,83,1.305]],["body/interfaces/ZipkinCollectorConfig.html",[3,0.34,4,0.34,5,0.264,6,0.229,9,0.34,10,0.264,16,1.106,18,0.033,20,0.301,21,0.38,28,0.724,31,0.423,32,0.014,33,0.019,34,0.014,35,1.022,36,1.576,37,1.017,38,1.106,39,1.106,40,1.205,41,1.578,42,1.576,43,0.956,44,1.714,45,1.688,46,1.716,47,1.716,48,1.518,49,1.449,50,0.73,51,2.179,52,1.131,53,1.316,54,1.106,55,1.443,56,1.443,57,2.563,58,0.616,59,0.862,60,1.443,61,1.875,62,1.114,63,1.694,64,1.576,65,1.017,66,1.205,67,0.794,68,0.936,69,1.205,70,1.205,71,1.205,72,1.576,73,2.312,74,1.318,75,1.836,76,1.316,77,1.875,78,1.875,79,1.316,80,1.576,81,1.716,82,1.316,83,1.836,84,1.875,85,2.115,86,1.106,87,1.205,88,0.732,89,1.875,90,1.875,91,1.716,92,1.716,93,0.877,94,0.563,95,1.316,96,1.316,97,1.316]],["title/injectables/ZipkinExporterService.html",[0,0.312,373,1.877]],["body/injectables/ZipkinExporterService.html",[0,0.438,2,1.073,3,0.423,4,0.423,5,0.329,6,0.426,9,0.563,10,0.329,11,1.112,13,1.02,15,1.222,17,0.835,18,0.033,20,0.599,21,0.474,26,1.073,27,1.073,28,0.423,29,0.835,30,1.073,31,0.526,32,0.017,33,0.022,34,0.017,43,0.835,49,1.266,50,0.909,58,0.766,73,1.376,88,1.093,91,1.499,93,0.766,94,1.118,100,2.45,105,1.499,107,1.796,113,1.499,115,1.796,125,1.637,127,2.865,129,2.865,130,2.721,131,1.996,132,1.98,133,1.637,142,1.499,172,3.796,173,3.796,174,4.55,175,3.796,176,3.301,177,2.636,178,3.796,179,3.301,180,3.796,181,1.98,185,2.852,186,2.202,188,2.48,373,2.636,379,4.267,380,4.548,381,3.416,382,3.416,383,3.416,384,3.416]],["title/changelog.html",[385,1.577,386,1.577,387,2.271]],["body/changelog.html",[5,0.49,18,0.022,31,0.52,32,0.017,33,0.022,34,0.017,41,0.976,48,0.976,52,0.976,54,1.36,62,0.757,68,1.733,70,1.482,86,1.36,112,1.98,223,1.957,235,3.443,256,2.616,387,3.767,388,3.377,389,3.377,390,2.451,391,3.377,392,2.177,393,3.377,394,3.767,395,3.377,396,3.377,397,4.243,398,3.377,399,5.425,400,4.513,401,3.377,402,5.083,403,5.083,404,3.377,405,4.513,406,3.377,407,3.377,408,3.377,409,3.377,410,5.083,411,5.083,412,3.377,413,3.377,414,3.377,415,3.377,416,3.377,417,4.513,418,3.377,419,3.377,420,3.377,421,3.377,422,3.377,423,3.377,424,3.377,425,3.377,426,3.377,427,2.451,428,5.94,429,3.377,430,3.377,431,3.377,432,3.377,433,2.819,434,3.377,435,3.377,436,3.377,437,3.377,438,3.377,439,3.377,440,3.377,441,3.377,442,2.451,443,3.377,444,2.819,445,3.377,446,3.377,447,3.377,448,2.819,449,3.377,450,3.377,451,4.513,452,3.377,453,3.377,454,4.513,455,4.513,456,3.377,457,3.377,458,2.819,459,3.377,460,3.767,461,4.513,462,4.513,463,3.377,464,3.377,465,3.377,466,5.425,467,3.377,468,3.377,469,3.377,470,3.377,471,3.377,472,4.513,473,3.377,474,3.377]],["title/coverage.html",[475,3.662]],["body/coverage.html",[0,0.588,1,1.585,5,0.291,6,0.538,7,2.517,8,2.531,18,0.032,22,1.215,31,0.464,32,0.015,33,0.021,34,0.015,35,1.101,36,1.215,38,2.323,39,2.323,50,0.802,52,1.208,72,1.215,80,1.215,83,1.215,85,1.215,88,0.565,93,0.676,98,1.748,99,2.517,102,1.585,103,1.585,111,2.422,112,1.323,122,1.944,123,2.517,124,1.748,125,2.696,131,1.323,134,1.944,135,3.091,136,2.52,143,1.748,146,2.189,151,3.033,161,2.517,166,2.517,169,1.748,170,2.517,191,2.517,199,2.517,202,1.748,203,1.944,205,2.517,206,2.517,216,1.944,358,1.748,359,2.517,370,3.033,373,1.748,374,2.189,379,2.517,475,2.517,476,2.517,477,3.016,478,3.016,479,6.433,480,3.016,481,6.104,482,3.016,483,5.176,484,3.016,485,4.795,486,3.016,487,3.016,488,3.016,489,3.016,490,3.016,491,2.517]],["title/dependencies.html",[492,2.271,493,2.821]],["body/dependencies.html",[18,0.033,21,0.577,32,0.021,33,0.026,34,0.021,44,1.307,62,0.933,109,2.683,267,3.475,268,3.021,299,3.021,364,3.021,397,3.475,493,3.021,494,4.162,495,6.301,496,4.162,497,5.164,498,4.162,499,4.162,500,4.162,501,4.162,502,5.164,503,4.311,504,4.162,505,4.162,506,4.162,507,4.162,508,4.162,509,4.162,510,4.162,511,4.162,512,4.162,513,4.162,514,3.475,515,3.475,516,4.162,517,4.162,518,4.162,519,4.162,520,4.162]],["title/miscellaneous/enumerations.html",[521,1.43,522,3.244]],["body/miscellaneous/enumerations.html",[6,0.373,10,0.43,16,1.799,18,0.032,32,0.022,33,0.027,34,0.022,38,1.799,39,2.333,44,1.693,48,1.559,62,1.299,63,1.839,64,2.172,65,1.655,66,1.96,67,1.292,68,1.523,69,1.96,70,1.96,75,2.549,521,2.348,522,3.728,523,4.501]],["title/miscellaneous/functions.html",[521,1.43,524,3.244]],["body/miscellaneous/functions.html",[1,2.695,6,0.428,8,2.25,9,0.635,10,0.397,15,0.923,18,0.029,32,0.02,33,0.025,34,0.02,43,1.254,45,1.525,48,1.483,58,1.15,59,1.61,62,0.923,63,1.404,64,1.658,67,1.19,68,1.404,94,1.2,98,2.972,102,2.695,103,2.695,105,2.25,125,2.458,129,2.695,135,2.653,136,2.695,138,3.722,143,2.972,144,3.436,146,4.055,150,2.653,169,2.972,358,2.972,370,2.988,371,3.436,373,2.972,374,3.722,521,2.163,524,3.436,525,4.116,526,4.116,527,4.116,528,4.116]],["title/index.html",[10,0.262,385,1.577,386,1.577]],["body/index.html",[3,0.453,18,0.032,20,0.493,21,0.263,28,0.368,29,0.464,32,0.022,33,0.015,34,0.009,35,0.556,36,0.765,40,1.303,41,1.66,43,0.726,44,1.92,45,1.531,46,0.833,47,1.604,48,1.437,49,1.1,51,1.604,52,1.437,54,1.665,57,1.968,58,0.666,59,0.932,61,2.279,62,1.255,63,1.622,65,1.354,66,1.303,67,0.549,68,1.013,71,2.372,72,0.765,73,2.178,74,0.859,75,0.765,76,0.91,77,1.423,80,0.765,81,1.303,82,0.91,83,0.765,84,1.423,85,0.765,86,1.473,87,1.303,88,0.684,89,1.423,90,1.423,91,1.303,92,1.303,109,1.224,112,0.833,124,1.721,140,1.379,159,1.585,168,1.585,176,3.607,177,1.101,202,2.98,207,1.585,209,1.585,215,1.585,223,1.101,229,1.585,235,1.721,240,3.052,241,2.654,245,3.052,247,2.478,254,1.585,255,1.585,256,3.289,257,1.585,261,1.585,266,1.379,268,1.379,294,1.379,299,1.379,328,3.256,329,2.356,338,2.478,340,1.585,341,3.45,344,1.379,345,1.585,349,3.45,352,1.585,353,1.379,364,1.379,377,1.585,385,1.721,386,1.721,390,2.155,392,2.664,427,3.998,442,2.654,444,1.585,448,1.585,491,2.478,492,1.585,503,1.585,514,1.585,515,1.585,529,3.656,530,3.656,531,1.899,532,1.899,533,2.654,534,1.899,535,2.478,536,2.969,537,2.969,538,4.134,539,2.969,540,2.969,541,3.656,542,1.899,543,1.899,544,2.969,545,4.134,546,2.478,547,2.969,548,2.969,549,2.969,550,2.969,551,1.899,552,1.899,553,1.899,554,1.899,555,1.585,556,1.899,557,1.899,558,1.899,559,1.899,560,1.899,561,1.899,562,1.899,563,1.899,564,2.969,565,2.969,566,1.899,567,1.899,568,1.899,569,1.585,570,1.899,571,1.899,572,1.899,573,1.899,574,3.656,575,1.899,576,1.899,577,1.899,578,1.899,579,1.585,580,1.585,581,1.899,582,1.899,583,1.899,584,1.899,585,1.899,586,1.899,587,2.969,588,1.899,589,2.969,590,2.969,591,1.899,592,1.899,593,1.899,594,1.899,595,1.899,596,1.899,597,2.969,598,2.969,599,1.224,600,1.899,601,1.899,602,1.899,603,1.899,604,1.899,605,1.899,606,1.585,607,1.585,608,1.899,609,1.899,610,1.899,611,1.899,612,1.899,613,1.899,614,1.899,615,1.899,616,1.899,617,2.969,618,2.969,619,1.899,620,1.899,621,1.899,622,1.899,623,1.899,624,1.899,625,1.899]],["title/license.html",[385,1.577,386,1.577,626,2.271]],["body/license.html",[4,0.613,5,0.42,9,0.154,13,0.278,18,0.013,20,0.136,29,0.303,32,0.01,33,0.01,34,0.006,37,0.459,40,0.544,41,0.358,54,1.891,58,0.611,59,0.389,136,1.685,141,1.522,150,0.799,164,0.9,179,0.9,223,0.719,235,1.216,237,1.75,248,3.248,294,0.9,392,0.799,394,2.275,427,0.9,442,3.993,458,2.275,460,1.75,476,2.275,533,0.9,535,1.035,546,1.75,555,2.275,569,1.035,580,1.035,599,0.799,607,2.992,626,4.997,627,3.205,628,2.725,629,1.24,630,1.24,631,1.24,632,4.538,633,5.056,634,3.205,635,3.584,636,1.24,637,5.235,638,4.694,639,1.24,640,1.24,641,1.24,642,1.24,643,4.694,644,5.056,645,3.891,646,4.694,647,2.097,648,1.24,649,3.584,650,1.24,651,1.24,652,1.24,653,3.205,654,1.24,655,4.538,656,3.205,657,2.097,658,1.24,659,2.725,660,2.097,661,2.097,662,1.24,663,1.24,664,5.444,665,3.205,666,2.097,667,1.24,668,2.097,669,1.24,670,1.24,671,1.24,672,1.24,673,1.24,674,1.24,675,1.24,676,2.725,677,1.24,678,2.725,679,2.097,680,5.056,681,1.24,682,1.24,683,3.891,684,4.538,685,3.205,686,2.097,687,2.725,688,3.891,689,1.24,690,1.24,691,1.24,692,1.24,693,1.24,694,2.097,695,1.24,696,1.24,697,1.24,698,6.008,699,2.725,700,2.097,701,1.24,702,4.538,703,2.097,704,1.24,705,3.584,706,2.097,707,1.24,708,5.444,709,1.24,710,1.24,711,1.24,712,1.24,713,1.24,714,1.24,715,2.097,716,1.24,717,1.24,718,1.24,719,1.24,720,1.24,721,3.205,722,3.584,723,1.24,724,2.097,725,3.205,726,2.097,727,1.24,728,3.584,729,2.097,730,1.24,731,1.24,732,2.725,733,1.24,734,1.24,735,1.24,736,1.24,737,2.097,738,1.035,739,1.24,740,1.24,741,2.725,742,1.24,743,1.24,744,2.725,745,1.24,746,1.24,747,1.24,748,3.205,749,4.694,750,1.24,751,1.24,752,2.097,753,4.357,754,2.725,755,3.205,756,2.097,757,2.097,758,2.097,759,2.097,760,2.725,761,2.097,762,2.725,763,2.097,764,2.097,765,2.097,766,2.097,767,1.035,768,2.097,769,1.24,770,1.24,771,3.584,772,4.144,773,2.725,774,2.097,775,1.24,776,1.24,777,2.097,778,2.097,779,1.24,780,1.24,781,2.725,782,2.097,783,1.24,784,1.24,785,1.24,786,2.725,787,1.24,788,1.24,789,1.24,790,2.097,791,2.097,792,1.24,793,1.24,794,1.24,795,1.24,796,1.24,797,1.24,798,1.24,799,2.097,800,1.24,801,1.24,802,1.24,803,1.24,804,1.24,805,1.24,806,1.24,807,1.24,808,2.725,809,1.24,810,2.725,811,1.24,812,1.24,813,1.24,814,1.24,815,4.357,816,1.24,817,1.24,818,1.24,819,1.24,820,1.24,821,3.205,822,2.097,823,3.205,824,1.24,825,1.24,826,1.24,827,1.24,828,1.24,829,2.725,830,1.24,831,1.24,832,2.097,833,2.097,834,1.24,835,1.24,836,1.24,837,2.097,838,1.24,839,1.24,840,3.584,841,1.24,842,1.24,843,1.24,844,1.24,845,1.24,846,1.24,847,1.24,848,2.725,849,3.205,850,1.24,851,1.24,852,1.24,853,1.24,854,1.24,855,1.24,856,1.24,857,1.24,858,1.24,859,1.24,860,1.24,861,2.097,862,1.24,863,1.24,864,2.097,865,1.24,866,1.24,867,3.205,868,1.24,869,1.24,870,1.24,871,1.24,872,1.24,873,1.24,874,1.24,875,3.205,876,2.725,877,2.725,878,2.725,879,2.097,880,2.097,881,2.725,882,2.097,883,2.097,884,2.097,885,2.097,886,1.24,887,1.24,888,1.24,889,1.24,890,1.24,891,1.24,892,1.24,893,1.24,894,1.24,895,2.097,896,1.24,897,1.24,898,1.24,899,1.24,900,3.584,901,1.24,902,1.24,903,1.24,904,1.24,905,1.24,906,1.24,907,1.24,908,1.24,909,3.584,910,1.24,911,1.24,912,1.24,913,1.24,914,1.24,915,1.035,916,1.24,917,1.24,918,1.24,919,1.24,920,1.24,921,1.24,922,1.24,923,1.24,924,1.24,925,1.24,926,1.24,927,1.24,928,2.725,929,1.24,930,1.24,931,1.24,932,1.24,933,1.24,934,2.097,935,1.24,936,1.24,937,1.24,938,1.24,939,1.24,940,1.24,941,1.24,942,1.24,943,1.24,944,1.24,945,1.24,946,1.24,947,1.24,948,1.24,949,1.24,950,2.097,951,1.24,952,1.24,953,1.24,954,2.097,955,2.097,956,1.24,957,1.24,958,1.24,959,1.24,960,1.24,961,1.24,962,1.24,963,1.24,964,1.24,965,1.24,966,1.24,967,1.24,968,1.24,969,1.24,970,1.24,971,1.24,972,1.24,973,1.24,974,1.24,975,1.24,976,1.24,977,1.24,978,1.24]],["title/modules.html",[330,3.185]],["body/modules.html",[18,0.029,32,0.025,33,0.029,34,0.025,329,3.245,330,3.654,599,3.245,979,5.034,980,5.034]],["title/overview.html",[981,3.662]],["body/overview.html",[2,1.513,18,0.028,32,0.024,33,0.028,34,0.024,37,1.785,223,2.793,328,4.094,344,3.498,346,4.022,353,3.498,493,3.498,579,4.022,915,4.022,981,4.022,982,4.819,983,5.64,984,4.819,985,4.819,986,4.819]],["title/todo.html",[385,1.577,386,1.577,987,2.271]],["body/todo.html",[18,0.031,32,0.021,33,0.026,34,0.021,41,1.715,44,1.345,62,1.275,63,1.939,71,2.307,112,1.88,126,3.047,177,3.047,202,2.483,221,3.576,235,3.637,256,2.483,390,3.11,392,2.761,433,3.576,533,4.128,599,3.388,606,5.08,738,3.576,767,3.576,987,4.747,988,4.284,989,4.284,990,4.284,991,4.284,992,4.284]],["title/miscellaneous/variables.html",[521,1.43,993,3.244]],["body/miscellaneous/variables.html",[6,0.401,10,0.463,18,0.03,31,0.74,32,0.024,33,0.028,34,0.024,38,1.935,39,2.268,74,1.389,75,1.935,93,1.339,94,0.986,95,2.302,97,2.302,521,2.524,523,4.009,993,4.009]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":562,"title":{},"body":{"index.html":{}}}],["0.0.1",{"_index":305,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["0.10.2",{"_index":520,"title":{},"body":{"dependencies.html":{}}}],["0.7",{"_index":556,"title":{},"body":{"index.html":{}}}],["0.8.0",{"_index":507,"title":{},"body":{"dependencies.html":{}}}],["0.8.2",{"_index":424,"title":{},"body":{"changelog.html":{}}}],["0.8.3",{"_index":397,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["0.9.0",{"_index":506,"title":{},"body":{"dependencies.html":{}}}],["05",{"_index":410,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":400,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":401,"title":{},"body":{"changelog.html":{}}}],["0885b40",{"_index":437,"title":{},"body":{"changelog.html":{}}}],["0f35b5c",{"_index":445,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":223,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["1.13.0",{"_index":518,"title":{},"body":{"dependencies.html":{}}}],["1.19.0",{"_index":509,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":485,"title":{},"body":{"coverage.html":{}}}],["10/10",{"_index":486,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":479,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":985,"title":{},"body":{"overview.html":{}}}],["12.0.2",{"_index":620,"title":{},"body":{"index.html":{}}}],["12/typescript",{"_index":447,"title":{},"body":{"changelog.html":{}}}],["1229a9d",{"_index":423,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":398,"title":{},"body":{"changelog.html":{}}}],["2.0",{"_index":628,"title":{},"body":{"license.html":{}}}],["2/2",{"_index":481,"title":{},"body":{"coverage.html":{}}}],["2004",{"_index":630,"title":{},"body":{"license.html":{}}}],["2020",{"_index":399,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":415,"title":{},"body":{"changelog.html":{}}}],["3.6.0",{"_index":448,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["3/3",{"_index":483,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":489,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":417,"title":{},"body":{"changelog.html":{}}}],["3516488",{"_index":439,"title":{},"body":{"changelog.html":{}}}],["371886a",{"_index":465,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":408,"title":{},"body":{"changelog.html":{}}}],["4/4",{"_index":487,"title":{},"body":{"coverage.html":{}}}],["412d2fd",{"_index":471,"title":{},"body":{"changelog.html":{}}}],["47aba25",{"_index":464,"title":{},"body":{"changelog.html":{}}}],["47c249b",{"_index":468,"title":{},"body":{"changelog.html":{}}}],["4a000b9",{"_index":459,"title":{},"body":{"changelog.html":{}}}],["5.2.0",{"_index":511,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":671,"title":{},"body":{"license.html":{}}}],["563071d",{"_index":449,"title":{},"body":{"changelog.html":{}}}],["6.5.4",{"_index":516,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":482,"title":{},"body":{"coverage.html":{}}}],["613c16d",{"_index":467,"title":{},"body":{"changelog.html":{}}}],["7/7",{"_index":480,"title":{},"body":{"coverage.html":{}}}],["735b05d",{"_index":474,"title":{},"body":{"changelog.html":{}}}],["75",{"_index":488,"title":{},"body":{"coverage.html":{}}}],["7a5b07e",{"_index":425,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":986,"title":{},"body":{"overview.html":{}}}],["80f7bf8",{"_index":473,"title":{},"body":{"changelog.html":{}}}],["83fc1f3",{"_index":426,"title":{},"body":{"changelog.html":{}}}],["8d45a2c",{"_index":404,"title":{},"body":{"changelog.html":{}}}],["8e268a9",{"_index":413,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":641,"title":{},"body":{"license.html":{}}}],["9.0.0",{"_index":515,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["9.1.11",{"_index":495,"title":{},"body":{"dependencies.html":{}}}],["9.2.4",{"_index":497,"title":{},"body":{"dependencies.html":{}}}],["9/node",{"_index":446,"title":{},"body":{"changelog.html":{}}}],["92330f9",{"_index":434,"title":{},"body":{"changelog.html":{}}}],["95167b9",{"_index":463,"title":{},"body":{"changelog.html":{}}}],["96da55f",{"_index":453,"title":{},"body":{"changelog.html":{}}}],["a1746bf",{"_index":457,"title":{},"body":{"changelog.html":{}}}],["a517094",{"_index":469,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":853,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":931,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":928,"title":{},"body":{"license.html":{}}}],["accessor",{"_index":622,"title":{},"body":{"index.html":{}}}],["act",{"_index":938,"title":{},"body":{"license.html":{}}}],["acting",{"_index":651,"title":{},"body":{"license.html":{}}}],["acts",{"_index":907,"title":{},"body":{"license.html":{}}}],["ad03334",{"_index":431,"title":{},"body":{"changelog.html":{}}}],["add",{"_index":235,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["addendum",{"_index":839,"title":{},"body":{"license.html":{}}}],["adding",{"_index":586,"title":{},"body":{"index.html":{}}}],["additional",{"_index":840,"title":{},"body":{"license.html":{}}}],["additions",{"_index":723,"title":{},"body":{"license.html":{}}}],["advised",{"_index":926,"title":{},"body":{"license.html":{}}}],["against",{"_index":791,"title":{},"body":{"license.html":{}}}],["agent",{"_index":608,"title":{},"body":{"index.html":{}}}],["agree",{"_index":941,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":878,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":858,"title":{},"body":{"license.html":{}}}],["alleging",{"_index":796,"title":{},"body":{"license.html":{}}}],["alone",{"_index":787,"title":{},"body":{"license.html":{}}}],["along",{"_index":830,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":838,"title":{},"body":{"license.html":{}}}],["already",{"_index":350,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["althought",{"_index":588,"title":{},"body":{"index.html":{}}}],["always",{"_index":222,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["always_sampler",{"_index":269,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["ambient",{"_index":624,"title":{},"body":{"index.html":{}}}],["and(b",{"_index":811,"title":{},"body":{"license.html":{}}}],["and(c",{"_index":818,"title":{},"body":{"license.html":{}}}],["and(d",{"_index":824,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":935,"title":{},"body":{"license.html":{}}}],["angular",{"_index":256,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/SpanExporterService.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["angular/animations",{"_index":494,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":496,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":498,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":266,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["angular/compiler",{"_index":499,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":21,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"dependencies.html":{},"index.html":{}}}],["angular/forms",{"_index":500,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":501,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":502,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":505,"title":{},"body":{"dependencies.html":{}}}],["annotations",{"_index":712,"title":{},"body":{"license.html":{}}}],["apache",{"_index":627,"title":{},"body":{"license.html":{}}}],["api",{"_index":195,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api#tracing",{"_index":552,"title":{},"body":{"index.html":{}}}],["api.defaultsetter",{"_index":317,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api.propagation.inject",{"_index":316,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api.span",{"_index":232,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["app",{"_index":545,"title":{},"body":{"index.html":{}}}],["app.component",{"_index":575,"title":{},"body":{"index.html":{}}}],["app.module.ts",{"_index":573,"title":{},"body":{"index.html":{}}}],["app/collector/docker",{"_index":601,"title":{},"body":{"index.html":{}}}],["appand",{"_index":592,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":574,"title":{},"body":{"index.html":{}}}],["appear",{"_index":835,"title":{},"body":{"license.html":{}}}],["appendix",{"_index":706,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":876,"title":{},"body":{"license.html":{}}}],["application",{"_index":176,"title":{},"body":{"injectables/JaegerExporterService.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["applies",{"_index":780,"title":{},"body":{"license.html":{}}}],["apply",{"_index":950,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":352,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["appropriate",{"_index":960,"title":{},"body":{"license.html":{}}}],["appropriateness",{"_index":893,"title":{},"body":{"license.html":{}}}],["archives",{"_index":969,"title":{},"body":{"license.html":{}}}],["arising",{"_index":914,"title":{},"body":{"license.html":{}}}],["asserted",{"_index":947,"title":{},"body":{"license.html":{}}}],["associated",{"_index":898,"title":{},"body":{"license.html":{}}}],["assume",{"_index":896,"title":{},"body":{"license.html":{}}}],["async",{"_index":567,"title":{},"body":{"index.html":{}}}],["attach",{"_index":951,"title":{},"body":{"license.html":{}}}],["attached",{"_index":704,"title":{},"body":{"license.html":{}}}],["attributes",{"_index":308,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["attribution",{"_index":821,"title":{},"body":{"license.html":{}}}],["authorized",{"_index":647,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":699,"title":{},"body":{"license.html":{}}}],["available",{"_index":599,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{},"todo.html":{}}}],["b3",{"_index":65,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["b3,httptrace,composite,jaeger",{"_index":571,"title":{},"body":{"index.html":{}}}],["b3propagator",{"_index":16,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/enumerations.html":{}}}],["b3propagatorservice",{"_index":1,"title":{"injectables/B3PropagatorService.html":{}},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["b63afc1",{"_index":440,"title":{},"body":{"changelog.html":{}}}],["b679883",{"_index":441,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":580,"title":{},"body":{"index.html":{},"license.html":{}}}],["basis",{"_index":880,"title":{},"body":{"license.html":{}}}],["batchspanexporter(async",{"_index":55,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["batchspanprocessor",{"_index":245,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["batchspanprocessor(spanexporter",{"_index":325,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["bd69598",{"_index":419,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":421,"title":{},"body":{"changelog.html":{}}}],["behalf",{"_index":728,"title":{},"body":{"license.html":{}}}],["below",{"_index":707,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":675,"title":{},"body":{"license.html":{}}}],["between",{"_index":561,"title":{},"body":{"index.html":{}}}],["bind",{"_index":720,"title":{},"body":{"license.html":{}}}],["body",{"_index":299,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"dependencies.html":{},"index.html":{}}}],["boilerplate",{"_index":952,"title":{},"body":{"license.html":{}}}],["boolean",{"_index":51,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["boolean)send",{"_index":566,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":579,"title":{},"body":{"index.html":{},"overview.html":{}}}],["brackets",{"_index":955,"title":{},"body":{"license.html":{}}}],["break",{"_index":157,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/SpanExporterService.html":{}}}],["browse",{"_index":980,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":503,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["bug",{"_index":402,"title":{},"body":{"changelog.html":{}}}],["c6368c9",{"_index":416,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":584,"title":{},"body":{"index.html":{}}}],["carrier",{"_index":315,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["carrier[key",{"_index":319,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["carry",{"_index":813,"title":{},"body":{"license.html":{}}}],["case",{"_index":155,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/SpanExporterService.html":{}}}],["cause",{"_index":661,"title":{},"body":{"license.html":{}}}],["changed",{"_index":817,"title":{},"body":{"license.html":{}}}],["changelog",{"_index":387,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":389,"title":{},"body":{"changelog.html":{}}}],["character",{"_index":913,"title":{},"body":{"license.html":{}}}],["charge",{"_index":762,"title":{},"body":{"license.html":{}}}],["choose",{"_index":929,"title":{},"body":{"license.html":{}}}],["claim",{"_index":793,"title":{},"body":{"license.html":{}}}],["claims",{"_index":782,"title":{},"body":{"license.html":{}}}],["class",{"_index":29,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{},"license.html":{}}}],["code",{"_index":458,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["collector",{"_index":44,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"todo.html":{}}}],["collector(otelcol",{"_index":554,"title":{},"body":{"index.html":{}}}],["collector.jaeger",{"_index":376,"title":{},"body":{"injectables/SpanExporterService.html":{}}}],["collector.otelcol",{"_index":377,"title":{},"body":{"injectables/SpanExporterService.html":{},"index.html":{}}}],["collector.zipkin",{"_index":378,"title":{},"body":{"injectables/SpanExporterService.html":{}}}],["collector/build/src/platform/browser",{"_index":365,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectorexporter",{"_index":362,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectorexporter(this.otelcolconfig",{"_index":369,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectorexporterconfig",{"_index":363,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["combination",{"_index":788,"title":{},"body":{"license.html":{}}}],["command",{"_index":590,"title":{},"body":{"index.html":{}}}],["comment",{"_index":961,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":923,"title":{},"body":{"license.html":{}}}],["commit",{"_index":395,"title":{},"body":{"changelog.html":{}}}],["common",{"_index":40,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{},"license.html":{}}}],["commoncollectorconfig",{"_index":36,"title":{"interfaces/CommonCollectorConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["commonconfig",{"_index":89,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["communication",{"_index":732,"title":{},"body":{"license.html":{}}}],["compiled",{"_index":693,"title":{},"body":{"license.html":{}}}],["compliance",{"_index":972,"title":{},"body":{"license.html":{}}}],["complies",{"_index":846,"title":{},"body":{"license.html":{}}}],["compose",{"_index":598,"title":{},"body":{"index.html":{}}}],["compose.yaml",{"_index":602,"title":{},"body":{"index.html":{}}}],["composite",{"_index":68,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/HttpTextPropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["compositepropagator",{"_index":69,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/enumerations.html":{}}}],["compositepropagatorservice",{"_index":98,"title":{"injectables/CompositePropagatorService.html":{}},"body":{"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["computer",{"_index":920,"title":{},"body":{"license.html":{}}}],["concurrently",{"_index":510,"title":{},"body":{"dependencies.html":{}}}],["conditions",{"_index":633,"title":{},"body":{"license.html":{}}}],["config",{"_index":94,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["config.commonconfig.collector",{"_index":375,"title":{},"body":{"injectables/SpanExporterService.html":{}}}],["config.commonconfig.propagator",{"_index":154,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{}}}],["config.commonconfig.servicename",{"_index":188,"title":{},"body":{"injectables/JaegerExporterService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["config.jaegerconfig?.endpoint",{"_index":189,"title":{},"body":{"injectables/JaegerExporterService.html":{}}}],["config.jaegerpropagatorconfig?.customheader",{"_index":197,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["config.otelcolconfig?.headers",{"_index":368,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.otelcolconfig?.url",{"_index":367,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.ts",{"_index":39,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["config.zipkinconfig.url",{"_index":384,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["configjaeger",{"_index":184,"title":{},"body":{"injectables/JaegerExporterService.html":{}}}],["configurable",{"_index":558,"title":{},"body":{"index.html":{}}}],["configuration",{"_index":41,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/HttpTextPropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["configuration/opentelemetry",{"_index":142,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["configure",{"_index":544,"title":{},"body":{"index.html":{}}}],["configured",{"_index":371,"title":{},"body":{"injectables/SpanExporterService.html":{},"miscellaneous/functions.html":{}}}],["consequential",{"_index":912,"title":{},"body":{"license.html":{}}}],["conserve",{"_index":236,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["consistent",{"_index":937,"title":{},"body":{"license.html":{}}}],["console",{"_index":45,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["console.error('error",{"_index":148,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/SpanExporterService.html":{}}}],["consolespanexporter",{"_index":129,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"injectables/JaegerExporterService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{},"miscellaneous/functions.html":{}}}],["consolespanexporterservice",{"_index":122,"title":{"injectables/ConsoleSpanExporterService.html":{}},"body":{"injectables/ConsoleSpanExporterService.html":{},"injectables/SpanExporterService.html":{},"coverage.html":{}}}],["conspicuously",{"_index":745,"title":{},"body":{"license.html":{}}}],["const",{"_index":96,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["constitutes",{"_index":797,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":100,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["constructor(@inject(opentelemetryinjectconfig",{"_index":186,"title":{},"body":{"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["constructor(b3propagatorservice",{"_index":101,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["constructor(config",{"_index":181,"title":{},"body":{"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["construed",{"_index":841,"title":{},"body":{"license.html":{}}}],["contained",{"_index":827,"title":{},"body":{"license.html":{}}}],["content",{"_index":873,"title":{},"body":{"license.html":{}}}],["contents",{"_index":535,"title":{},"body":{"index.html":{},"license.html":{}}}],["context",{"_index":112,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{}}}],["contextmanager",{"_index":208,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["contract",{"_index":666,"title":{},"body":{"license.html":{}}}],["contribution",{"_index":722,"title":{},"body":{"license.html":{}}}],["contribution(s",{"_index":786,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":848,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":749,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":798,"title":{},"body":{"license.html":{}}}],["control",{"_index":653,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":654,"title":{},"body":{"license.html":{}}}],["conversions",{"_index":695,"title":{},"body":{"license.html":{}}}],["copies",{"_index":805,"title":{},"body":{"license.html":{}}}],["copy",{"_index":810,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":644,"title":{},"body":{"license.html":{}}}],["correlation",{"_index":991,"title":{},"body":{"todo.html":{}}}],["counterclaim",{"_index":794,"title":{},"body":{"license.html":{}}}],["cours",{"_index":436,"title":{},"body":{"changelog.html":{}}}],["coverage",{"_index":475,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":582,"title":{},"body":{"index.html":{}}}],["cross",{"_index":792,"title":{},"body":{"license.html":{}}}],["current",{"_index":257,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["custom",{"_index":77,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["customary",{"_index":869,"title":{},"body":{"license.html":{}}}],["customheader",{"_index":87,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["damages",{"_index":909,"title":{},"body":{"license.html":{}}}],["date",{"_index":802,"title":{},"body":{"license.html":{}}}],["day",{"_index":180,"title":{},"body":{"injectables/JaegerExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["dd7a0e5",{"_index":438,"title":{},"body":{"changelog.html":{}}}],["dda5d54",{"_index":456,"title":{},"body":{"changelog.html":{}}}],["declarations",{"_index":344,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{},"overview.html":{}}}],["declared",{"_index":623,"title":{},"body":{"index.html":{}}}],["default",{"_index":74,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defend",{"_index":943,"title":{},"body":{"license.html":{}}}],["define",{"_index":162,"title":{},"body":{"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["defined",{"_index":13,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{},"license.html":{}}}],["defineprobabilitysampler",{"_index":210,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["defineprobabilitysampler(sampleconfig",{"_index":218,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["definition",{"_index":141,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/SpanExporterService.html":{},"license.html":{}}}],["definitions",{"_index":636,"title":{},"body":{"license.html":{}}}],["del",{"_index":450,"title":{},"body":{"changelog.html":{}}}],["delete",{"_index":454,"title":{},"body":{"changelog.html":{}}}],["deliberate",{"_index":904,"title":{},"body":{"license.html":{}}}],["dependence",{"_index":618,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":493,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":531,"title":{},"body":{"index.html":{}}}],["deps",{"_index":147,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/SpanExporterService.html":{}}}],["derivative",{"_index":708,"title":{},"body":{"license.html":{}}}],["derived",{"_index":709,"title":{},"body":{"license.html":{}}}],["describing",{"_index":870,"title":{},"body":{"license.html":{}}}],["description",{"_index":9,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["designated",{"_index":747,"title":{},"body":{"license.html":{}}}],["determining",{"_index":892,"title":{},"body":{"license.html":{}}}],["dgo",{"_index":604,"title":{},"body":{"index.html":{}}}],["different",{"_index":845,"title":{},"body":{"license.html":{}}}],["dir",{"_index":452,"title":{},"body":{"changelog.html":{}}}],["direct",{"_index":659,"title":{},"body":{"license.html":{}}}],["direction",{"_index":662,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":874,"title":{},"body":{"license.html":{}}}],["discussing",{"_index":742,"title":{},"body":{"license.html":{}}}],["display",{"_index":546,"title":{},"body":{"index.html":{},"license.html":{}}}],["distribute",{"_index":771,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":829,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":635,"title":{},"body":{"license.html":{}}}],["doc",{"_index":451,"title":{},"body":{"changelog.html":{}}}],["docker",{"_index":597,"title":{},"body":{"index.html":{}}}],["docs",{"_index":418,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":642,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":476,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["documented",{"_index":391,"title":{},"body":{"changelog.html":{}}}],["don't",{"_index":959,"title":{},"body":{"license.html":{}}}],["done",{"_index":992,"title":{},"body":{"todo.html":{}}}],["downgrade",{"_index":432,"title":{},"body":{"changelog.html":{}}}],["dynamic",{"_index":504,"title":{},"body":{"dependencies.html":{}}}],["e5eb09e",{"_index":429,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":755,"title":{},"body":{"license.html":{}}}],["easier",{"_index":967,"title":{},"body":{"license.html":{}}}],["ec28651",{"_index":443,"title":{},"body":{"changelog.html":{}}}],["editorial",{"_index":710,"title":{},"body":{"license.html":{}}}],["elaborations",{"_index":713,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":729,"title":{},"body":{"license.html":{}}}],["en",{"_index":435,"title":{},"body":{"changelog.html":{}}}],["enclosed",{"_index":954,"title":{},"body":{"license.html":{}}}],["end",{"_index":949,"title":{},"body":{"license.html":{}}}],["endpoint",{"_index":81,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["entities",{"_index":652,"title":{},"body":{"license.html":{}}}],["entity",{"_index":646,"title":{},"body":{"license.html":{}}}],["enum",{"_index":61,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["enumerations",{"_index":522,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":576,"title":{},"body":{"index.html":{}}}],["environments/environment",{"_index":577,"title":{},"body":{"index.html":{}}}],["error",{"_index":349,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["even",{"_index":925,"title":{},"body":{"license.html":{}}}],["event",{"_index":294,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{},"license.html":{}}}],["event.status",{"_index":297,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["example",{"_index":427,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["except",{"_index":773,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":744,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":761,"title":{},"body":{"license.html":{}}}],["executed",{"_index":859,"title":{},"body":{"license.html":{}}}],["exercise",{"_index":899,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":677,"title":{},"body":{"license.html":{}}}],["explicitly",{"_index":850,"title":{},"body":{"license.html":{}}}],["export",{"_index":28,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["exported",{"_index":614,"title":{},"body":{"index.html":{}}}],["exporter",{"_index":126,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/SpanExporterService.html":{},"todo.html":{}}}],["exporter.interface",{"_index":132,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"injectables/JaegerExporterService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["exporter.service",{"_index":275,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/SpanExporterService.html":{}}}],["exporter.service.ts",{"_index":125,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"injectables/JaegerExporterService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["exporter.service.ts:16",{"_index":381,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["exporter.service.ts:17",{"_index":128,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{}}}],["exporter.service.ts:18",{"_index":182,"title":{},"body":{"injectables/JaegerExporterService.html":{}}}],["exporter.service.ts:25",{"_index":360,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["exporter.service.ts:32",{"_index":372,"title":{},"body":{"injectables/SpanExporterService.html":{}}}],["exporter.service.ts:34",{"_index":382,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["exporter.service.ts:36",{"_index":183,"title":{},"body":{"injectables/JaegerExporterService.html":{}}}],["exporter.service.ts:43",{"_index":361,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["exporterconfig",{"_index":185,"title":{},"body":{"injectables/JaegerExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["exports",{"_index":346,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"overview.html":{}}}],["express",{"_index":883,"title":{},"body":{"license.html":{}}}],["f",{"_index":600,"title":{},"body":{"index.html":{}}}],["f195a50",{"_index":409,"title":{},"body":{"changelog.html":{}}}],["factory",{"_index":138,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/SpanExporterService.html":{},"miscellaneous/functions.html":{}}}],["fad044a",{"_index":412,"title":{},"body":{"changelog.html":{}}}],["failure",{"_index":921,"title":{},"body":{"license.html":{}}}],["false",{"_index":547,"title":{},"body":{"index.html":{}}}],["features",{"_index":411,"title":{},"body":{"changelog.html":{}}}],["fee",{"_index":930,"title":{},"body":{"license.html":{}}}],["fields",{"_index":953,"title":{},"body":{"license.html":{}}}],["fifty",{"_index":669,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"license.html":{}}}],["filed",{"_index":803,"title":{},"body":{"license.html":{}}}],["files",{"_index":687,"title":{},"body":{"license.html":{}}}],["finalize",{"_index":272,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["fitness",{"_index":888,"title":{},"body":{"license.html":{}}}],["fix",{"_index":610,"title":{},"body":{"index.html":{}}}],["fixes",{"_index":403,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":808,"title":{},"body":{"license.html":{}}}],["form",{"_index":680,"title":{},"body":{"license.html":{}}}],["format",{"_index":963,"title":{},"body":{"license.html":{}}}],["forroot",{"_index":334,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["forroot(config",{"_index":335,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["free",{"_index":764,"title":{},"body":{"license.html":{}}}],["function",{"_index":151,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/SpanExporterService.html":{},"coverage.html":{}}}],["functions",{"_index":524,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generally",{"_index":572,"title":{},"body":{"index.html":{}}}],["generated",{"_index":694,"title":{},"body":{"license.html":{}}}],["getexporter",{"_index":127,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/JaegerExporterService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["getpropagator",{"_index":12,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{}}}],["getting",{"_index":385,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["gettracer('angular",{"_index":304,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["github",{"_index":989,"title":{},"body":{"todo.html":{}}}],["give",{"_index":164,"title":{},"body":{"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"license.html":{}}}],["global",{"_index":537,"title":{},"body":{"index.html":{}}}],["goodwill",{"_index":918,"title":{},"body":{"license.html":{}}}],["governing",{"_index":977,"title":{},"body":{"license.html":{}}}],["grant",{"_index":754,"title":{},"body":{"license.html":{}}}],["granted",{"_index":679,"title":{},"body":{"license.html":{}}}],["granting",{"_index":648,"title":{},"body":{"license.html":{}}}],["grants",{"_index":757,"title":{},"body":{"license.html":{}}}],["graph",{"_index":979,"title":{},"body":{"modules.html":{}}}],["grossly",{"_index":905,"title":{},"body":{"license.html":{}}}],["guidelines",{"_index":396,"title":{},"body":{"changelog.html":{}}}],["harmless",{"_index":945,"title":{},"body":{"license.html":{}}}],["header",{"_index":86,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["headers",{"_index":78,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["here",{"_index":606,"title":{},"body":{"index.html":{},"todo.html":{}}}],["hereby",{"_index":756,"title":{},"body":{"license.html":{}}}],["herein",{"_index":855,"title":{},"body":{"license.html":{}}}],["highlight",{"_index":513,"title":{},"body":{"dependencies.html":{}}}],["hold",{"_index":944,"title":{},"body":{"license.html":{}}}],["http",{"_index":111,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"coverage.html":{}}}],["http.interceptor",{"_index":343,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["http.interceptor.ts",{"_index":206,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{}}}],["http.interceptor.ts:113",{"_index":228,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:138",{"_index":234,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:160",{"_index":239,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:174",{"_index":244,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:190",{"_index":219,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:43",{"_index":262,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:47",{"_index":217,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:81",{"_index":252,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.method",{"_index":309,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.url",{"_index":311,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http://localhost:14268/api/traces",{"_index":564,"title":{},"body":{"index.html":{}}}],["http://localhost:16686",{"_index":605,"title":{},"body":{"index.html":{}}}],["http://localhost:4200",{"_index":594,"title":{},"body":{"index.html":{}}}],["http://localhost:55678/v1/trace",{"_index":76,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["http://localhost:9090/v1/trace",{"_index":563,"title":{},"body":{"index.html":{}}}],["http://localhost:9411/api/v2/spans",{"_index":84,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["http://www.apache.org/licenses",{"_index":631,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":974,"title":{},"body":{"license.html":{}}}],["http_interceptors",{"_index":340,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["httpclientmodule",{"_index":341,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["httperrorresponse",{"_index":265,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httpevent",{"_index":263,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httphandler",{"_index":251,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httpinterceptor",{"_index":255,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["httprequest",{"_index":227,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httpresponse",{"_index":264,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["https://github.com/open",{"_index":549,"title":{},"body":{"index.html":{}}}],["https://jufab.github.io/opentelemetry",{"_index":534,"title":{},"body":{"index.html":{}}}],["httpsender",{"_index":82,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["httptextpropagator",{"_index":19,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{}}}],["httptextpropagatorservice",{"_index":134,"title":{"injectables/HttpTextPropagatorService.html":{}},"body":{"injectables/HttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{}}}],["httptextpropagatorservicefactory",{"_index":146,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["httptextpropagatorservicefactory(config",{"_index":527,"title":{},"body":{"miscellaneous/functions.html":{}}}],["httptrace",{"_index":66,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["httptracecontext",{"_index":67,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["httptracecontextpropagatorservice",{"_index":102,"title":{"injectables/HttpTraceContextPropagatorService.html":{}},"body":{"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["id",{"_index":407,"title":{},"body":{"changelog.html":{}}}],["identification",{"_index":968,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":477,"title":{},"body":{"coverage.html":{}}}],["identifying",{"_index":957,"title":{},"body":{"license.html":{}}}],["iexporter",{"_index":131,"title":{"interfaces/IExporter.html":{}},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/JaegerExporterService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["ii",{"_index":667,"title":{},"body":{"license.html":{}}}],["iii",{"_index":674,"title":{},"body":{"license.html":{}}}],["implement",{"_index":581,"title":{},"body":{"index.html":{}}}],["implementation",{"_index":168,"title":{},"body":{"interfaces/IPropagator.html":{},"index.html":{}}}],["implements",{"_index":30,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["implied",{"_index":884,"title":{},"body":{"license.html":{}}}],["import",{"_index":20,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{},"license.html":{}}}],["imports",{"_index":345,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["improving",{"_index":743,"title":{},"body":{"license.html":{}}}],["inability",{"_index":916,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":911,"title":{},"body":{"license.html":{}}}],["include",{"_index":555,"title":{},"body":{"index.html":{},"license.html":{}}}],["included",{"_index":703,"title":{},"body":{"license.html":{}}}],["includes",{"_index":825,"title":{},"body":{"license.html":{}}}],["including",{"_index":684,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":726,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":752,"title":{},"body":{"license.html":{}}}],["incurred",{"_index":946,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":942,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":933,"title":{},"body":{"license.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indicated",{"_index":701,"title":{},"body":{"license.html":{}}}],["indirect",{"_index":660,"title":{},"body":{"license.html":{}}}],["individual",{"_index":676,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["information",{"_index":958,"title":{},"body":{"license.html":{}}}],["informational",{"_index":836,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":785,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":799,"title":{},"body":{"license.html":{}}}],["initialise",{"_index":229,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["initspan",{"_index":211,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["initspan(request",{"_index":226,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject",{"_index":107,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["inject(b3propagatorservice",{"_index":114,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(httptextpropagatorservice",{"_index":280,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject(httptracecontextpropagatorservice",{"_index":116,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(jaegerhttptracepropagatorservice",{"_index":117,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(opentelemetryinjectconfig",{"_index":278,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject(spanexporterservice",{"_index":279,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injectable",{"_index":0,"title":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{}},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{},"overview.html":{}}}],["injectcontextandheader",{"_index":212,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injectcontextandheader(span",{"_index":233,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injected",{"_index":137,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injection",{"_index":95,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":60,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["injectiontoken('opentelemetry.config",{"_index":97,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["inmplementation",{"_index":165,"title":{},"body":{"interfaces/IExporter.html":{}}}],["insert",{"_index":240,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["insertconsolespanexporter",{"_index":213,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertconsolespanexporter(console",{"_index":238,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertspanprocessorproductionmode",{"_index":214,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertspanprocessorproductionmode(production",{"_index":243,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["install",{"_index":542,"title":{},"body":{"index.html":{}}}],["installation",{"_index":536,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":295,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["institute",{"_index":789,"title":{},"body":{"license.html":{}}}],["intentionally",{"_index":724,"title":{},"body":{"license.html":{}}}],["intercept",{"_index":215,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["intercept(request",{"_index":249,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["intercepted",{"_index":231,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["interceptor",{"_index":202,"title":{"interceptors/OpenTelemetryHttpInterceptor.html":{}},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{},"index.html":{},"todo.html":{}}}],["interceptor.module.ts",{"_index":332,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor.module.ts:30",{"_index":336,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/opentelemetry",{"_index":342,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/src/lib/configuration/opentelemetry",{"_index":38,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["interceptor/src/lib/interceptor/opentelemetry",{"_index":205,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{}}}],["interceptor/src/lib/opentelemetry",{"_index":331,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/src/lib/services/exporter/console",{"_index":123,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/exporter.interface.ts",{"_index":161,"title":{},"body":{"interfaces/IExporter.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/exporter.interface.ts:11",{"_index":163,"title":{},"body":{"interfaces/IExporter.html":{}}}],["interceptor/src/lib/services/exporter/jaeger",{"_index":170,"title":{},"body":{"injectables/JaegerExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/otelcol",{"_index":359,"title":{},"body":{"injectables/OtelcolExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/span",{"_index":370,"title":{},"body":{"injectables/SpanExporterService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["interceptor/src/lib/services/exporter/zipkin",{"_index":379,"title":{},"body":{"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/b3",{"_index":7,"title":{},"body":{"injectables/B3PropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/composite",{"_index":99,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/http",{"_index":135,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["interceptor/src/lib/services/propagator/jaeger",{"_index":191,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/noop",{"_index":199,"title":{},"body":{"injectables/NoopHttpTextPropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/propagator.interface.ts",{"_index":166,"title":{},"body":{"interfaces/IPropagator.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/propagator.interface.ts:11",{"_index":167,"title":{},"body":{"interfaces/IPropagator.html":{}}}],["interceptors",{"_index":204,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["interface",{"_index":35,"title":{"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":37,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"license.html":{},"overview.html":{}}}],["ipropagator",{"_index":22,"title":{"interfaces/IPropagator.html":{}},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"coverage.html":{}}}],["irrevocable",{"_index":765,"title":{},"body":{"license.html":{}}}],["isn't",{"_index":172,"title":{},"body":{"injectables/JaegerExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["issue",{"_index":738,"title":{},"body":{"license.html":{},"todo.html":{}}}],["it's",{"_index":177,"title":{},"body":{"injectables/JaegerExporterService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{},"todo.html":{}}}],["jaeger",{"_index":62,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{}}}],["jaegercollectorconfig",{"_index":80,"title":{"interfaces/JaegerCollectorConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["jaegerconfig",{"_index":90,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["jaegerconfiguration",{"_index":543,"title":{},"body":{"index.html":{}}}],["jaegerexporter",{"_index":171,"title":{},"body":{"injectables/JaegerExporterService.html":{}}}],["jaegerexporter(this.configjaeger",{"_index":190,"title":{},"body":{"injectables/JaegerExporterService.html":{}}}],["jaegerexporterservice",{"_index":169,"title":{"injectables/JaegerExporterService.html":{}},"body":{"injectables/JaegerExporterService.html":{},"injectables/SpanExporterService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["jaegerhttptracepropagator",{"_index":108,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{}}}],["jaegerhttptracepropagator(this.customheader",{"_index":198,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["jaegerhttptracepropagatorservice",{"_index":103,"title":{"injectables/JaegerHttpTracePropagatorService.html":{}},"body":{"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["jaegerpropagator",{"_index":70,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["jaegerpropagatorconfig",{"_index":85,"title":{"interfaces/JaegerPropagatorConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["january",{"_index":629,"title":{},"body":{"license.html":{}}}],["js",{"_index":514,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["js/tree/master/packages/opentelemetry",{"_index":551,"title":{},"body":{"index.html":{}}}],["json.stringify(event.body",{"_index":300,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["json.stringify(event.error",{"_index":302,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["jsonp",{"_index":461,"title":{},"body":{"changelog.html":{}}}],["jufab/opentelemetry",{"_index":529,"title":{},"body":{"index.html":{}}}],["key",{"_index":79,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["kind",{"_index":882,"title":{},"body":{"license.html":{}}}],["language",{"_index":976,"title":{},"body":{"license.html":{}}}],["law",{"_index":877,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":795,"title":{},"body":{"license.html":{}}}],["legal",{"_index":649,"title":{},"body":{"license.html":{}}}],["legend",{"_index":982,"title":{},"body":{"overview.html":{}}}],["liability",{"_index":900,"title":{},"body":{"license.html":{}}}],["liable",{"_index":908,"title":{},"body":{"license.html":{}}}],["library",{"_index":530,"title":{},"body":{"index.html":{}}}],["licensable",{"_index":783,"title":{},"body":{"license.html":{}}}],["license",{"_index":626,"title":{"license.html":{}},"body":{"license.html":{}}}],["license.you",{"_index":843,"title":{},"body":{"license.html":{}}}],["licensed",{"_index":971,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":800,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":643,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":885,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":978,"title":{},"body":{"license.html":{}}}],["limited",{"_index":685,"title":{},"body":{"license.html":{}}}],["link",{"_index":719,"title":{},"body":{"license.html":{}}}],["list",{"_index":990,"title":{},"body":{"todo.html":{}}}],["lists",{"_index":736,"title":{},"body":{"license.html":{}}}],["literal",{"_index":357,"title":{},"body":{"interfaces/OtelCollectorConfig.html":{}}}],["litigation",{"_index":790,"title":{},"body":{"license.html":{}}}],["loaded",{"_index":351,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["loss",{"_index":917,"title":{},"body":{"license.html":{}}}],["losses",{"_index":924,"title":{},"body":{"license.html":{}}}],["made",{"_index":700,"title":{},"body":{"license.html":{}}}],["mailing",{"_index":735,"title":{},"body":{"license.html":{}}}],["make",{"_index":776,"title":{},"body":{"license.html":{}}}],["making",{"_index":682,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":922,"title":{},"body":{"license.html":{}}}],["managed",{"_index":740,"title":{},"body":{"license.html":{}}}],["management",{"_index":663,"title":{},"body":{"license.html":{}}}],["manager",{"_index":260,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["marked",{"_index":746,"title":{},"body":{"license.html":{}}}],["marks",{"_index":865,"title":{},"body":{"license.html":{}}}],["matching",{"_index":33,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["mean",{"_index":638,"title":{},"body":{"license.html":{}}}],["means",{"_index":657,"title":{},"body":{"license.html":{}}}],["mechanical",{"_index":690,"title":{},"body":{"license.html":{}}}],["media",{"_index":696,"title":{},"body":{"license.html":{}}}],["medium",{"_index":806,"title":{},"body":{"license.html":{}}}],["meet",{"_index":807,"title":{},"body":{"license.html":{}}}],["member",{"_index":615,"title":{},"body":{"index.html":{}}}],["merchantability",{"_index":887,"title":{},"body":{"license.html":{}}}],["merely",{"_index":718,"title":{},"body":{"license.html":{}}}],["method",{"_index":254,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["methods",{"_index":11,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["miscellaneous",{"_index":521,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":246,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["modifications",{"_index":683,"title":{},"body":{"license.html":{}}}],["modified",{"_index":812,"title":{},"body":{"license.html":{}}}],["modify",{"_index":837,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":842,"title":{},"body":{"license.html":{}}}],["module",{"_index":328,"title":{"modules/OpenTelemetryInterceptorModule.html":{}},"body":{"index.html":{},"overview.html":{}}}],["modules",{"_index":330,"title":{"modules.html":{}},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":337,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["moment",{"_index":174,"title":{},"body":{"injectables/JaegerExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["more",{"_index":533,"title":{},"body":{"index.html":{},"license.html":{},"todo.html":{}}}],["multi",{"_index":356,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["name",{"_index":58,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["names",{"_index":864,"title":{},"body":{"license.html":{}}}],["namespace",{"_index":612,"title":{},"body":{"index.html":{}}}],["necessarily",{"_index":784,"title":{},"body":{"license.html":{}}}],["need",{"_index":617,"title":{},"body":{"index.html":{}}}],["negligence",{"_index":903,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":906,"title":{},"body":{"license.html":{}}}],["new",{"_index":31,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":250,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["next.handle(tracedreq).pipe",{"_index":293,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["ngmodule",{"_index":338,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["ngx",{"_index":512,"title":{},"body":{"dependencies.html":{}}}],["nodejs",{"_index":613,"title":{},"body":{"index.html":{}}}],["non",{"_index":760,"title":{},"body":{"license.html":{}}}],["noop",{"_index":144,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"miscellaneous/functions.html":{}}}],["noophttptextpropagator",{"_index":201,"title":{},"body":{"injectables/NoopHttpTextPropagatorService.html":{}}}],["noophttptextpropagatorservice",{"_index":143,"title":{"injectables/NoopHttpTextPropagatorService.html":{}},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["normally",{"_index":834,"title":{},"body":{"license.html":{}}}],["notable",{"_index":388,"title":{},"body":{"changelog.html":{}}}],["nothing",{"_index":854,"title":{},"body":{"license.html":{}}}],["notice",{"_index":702,"title":{},"body":{"license.html":{}}}],["notices",{"_index":815,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":852,"title":{},"body":{"license.html":{}}}],["npm",{"_index":541,"title":{},"body":{"index.html":{}}}],["null",{"_index":152,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/SpanExporterService.html":{}}}],["number",{"_index":53,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["object",{"_index":688,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":934,"title":{},"body":{"license.html":{}}}],["observable",{"_index":258,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["obtain",{"_index":973,"title":{},"body":{"license.html":{}}}],["offer",{"_index":777,"title":{},"body":{"license.html":{}}}],["ok",{"_index":428,"title":{},"body":{"changelog.html":{}}}],["one",{"_index":179,"title":{},"body":{"injectables/JaegerExporterService.html":{},"injectables/ZipkinExporterService.html":{},"license.html":{}}}],["open",{"_index":593,"title":{},"body":{"index.html":{}}}],["opentelemetry",{"_index":71,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{},"todo.html":{}}}],["opentelemetry/api",{"_index":24,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["opentelemetry/core",{"_index":25,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["opentelemetry/exporter",{"_index":364,"title":{},"body":{"injectables/OtelcolExporterService.html":{},"dependencies.html":{},"index.html":{}}}],["opentelemetry/propagator",{"_index":109,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"dependencies.html":{},"index.html":{}}}],["opentelemetry/tracing",{"_index":133,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/JaegerExporterService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["opentelemetry/web",{"_index":268,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"dependencies.html":{},"index.html":{}}}],["opentelemetryconfig",{"_index":88,"title":{"interfaces/OpenTelemetryConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"index.html":{}}}],["opentelemetryhttpinterceptor",{"_index":203,"title":{"interceptors/OpenTelemetryHttpInterceptor.html":{}},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"coverage.html":{}}}],["opentelemetryinjectconfig",{"_index":93,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/HttpTextPropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["opentelemetryinterceptor",{"_index":207,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["opentelemetryinterceptormodule",{"_index":329,"title":{"modules/OpenTelemetryInterceptorModule.html":{}},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{},"modules.html":{}}}],["opentelemetryinterceptormodule.forroot(environment.opentelemetryconfig",{"_index":578,"title":{},"body":{"index.html":{}}}],["opentelemtery",{"_index":539,"title":{},"body":{"index.html":{}}}],["operationnal",{"_index":173,"title":{},"body":{"injectables/JaegerExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["optional",{"_index":43,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["origin",{"_index":871,"title":{},"body":{"license.html":{}}}],["original",{"_index":237,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"license.html":{}}}],["otelcol",{"_index":64,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["otelcol,zipkin,jaeger",{"_index":570,"title":{},"body":{"index.html":{}}}],["otelcolconfig",{"_index":92,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["otelcolexporterservice",{"_index":358,"title":{"injectables/OtelcolExporterService.html":{}},"body":{"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["otelcollectorconfig",{"_index":72,"title":{"interfaces/OtelCollectorConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["otherwise",{"_index":248,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"license.html":{}}}],["out",{"_index":915,"title":{},"body":{"license.html":{},"overview.html":{}}}],["outstanding",{"_index":672,"title":{},"body":{"license.html":{}}}],["overide",{"_index":253,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["overview",{"_index":981,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":645,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":668,"title":{},"body":{"license.html":{}}}],["package",{"_index":492,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["page",{"_index":966,"title":{},"body":{"license.html":{}}}],["param",{"_index":113,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["parameters",{"_index":105,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":406,"title":{},"body":{"changelog.html":{}}}],["parentmodule",{"_index":347,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["parser",{"_index":508,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":823,"title":{},"body":{"license.html":{}}}],["particular",{"_index":889,"title":{},"body":{"license.html":{}}}],["party",{"_index":833,"title":{},"body":{"license.html":{}}}],["patent",{"_index":772,"title":{},"body":{"license.html":{}}}],["percent",{"_index":670,"title":{},"body":{"license.html":{}}}],["percentage",{"_index":559,"title":{},"body":{"index.html":{}}}],["perform",{"_index":769,"title":{},"body":{"license.html":{}}}],["permission",{"_index":862,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":678,"title":{},"body":{"license.html":{}}}],["perpetual",{"_index":758,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":822,"title":{},"body":{"license.html":{}}}],["places",{"_index":828,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":927,"title":{},"body":{"license.html":{}}}],["power",{"_index":658,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":681,"title":{},"body":{"license.html":{}}}],["prepare",{"_index":767,"title":{},"body":{"license.html":{},"todo.html":{}}}],["present",{"_index":178,"title":{},"body":{"injectables/JaegerExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["printed",{"_index":965,"title":{},"body":{"license.html":{}}}],["private",{"_index":115,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["probability",{"_index":220,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["probabilitysampler",{"_index":46,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["probabilitysampler(sampleconfig",{"_index":327,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["problem",{"_index":405,"title":{},"body":{"changelog.html":{}}}],["product",{"_index":866,"title":{},"body":{"license.html":{}}}],["production",{"_index":47,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["progress",{"_index":433,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["project",{"_index":390,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{}}}],["projects/.../http",{"_index":525,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../opentelemetry",{"_index":523,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["projects/.../span",{"_index":526,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/example",{"_index":587,"title":{},"body":{"index.html":{}}}],["projects/opentelemetry",{"_index":6,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["prominent",{"_index":814,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":583,"title":{},"body":{"index.html":{}}}],["propagator",{"_index":48,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/HttpTextPropagatorService.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["propagator.b3",{"_index":156,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{}}}],["propagator.composite",{"_index":159,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"index.html":{}}}],["propagator.httptrace",{"_index":158,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{}}}],["propagator.interface",{"_index":23,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{}}}],["propagator.jaeger",{"_index":160,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{}}}],["propagator.service",{"_index":110,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["propagator.service.ts",{"_index":8,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["propagator.service.ts:15",{"_index":192,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["propagator.service.ts:16",{"_index":200,"title":{},"body":{"injectables/NoopHttpTextPropagatorService.html":{}}}],["propagator.service.ts:17",{"_index":14,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{}}}],["propagator.service.ts:19",{"_index":104,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["propagator.service.ts:28",{"_index":193,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["propagator.service.ts:35",{"_index":139,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{}}}],["propagator.service.ts:37",{"_index":106,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["propagators",{"_index":118,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["properties",{"_index":42,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["provide",{"_index":150,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["provided",{"_index":705,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":26,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["providers",{"_index":353,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{},"overview.html":{}}}],["provides",{"_index":879,"title":{},"body":{"license.html":{}}}],["public",{"_index":194,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"modules/OpenTelemetryInterceptorModule.html":{}}}],["publicly",{"_index":768,"title":{},"body":{"license.html":{}}}],["publish",{"_index":466,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":741,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":656,"title":{},"body":{"license.html":{}}}],["randomtraceid",{"_index":277,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["readable",{"_index":826,"title":{},"body":{"license.html":{}}}],["readme",{"_index":470,"title":{},"body":{"changelog.html":{}}}],["reason",{"_index":948,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":868,"title":{},"body":{"license.html":{}}}],["received",{"_index":750,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":809,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":569,"title":{},"body":{"index.html":{},"license.html":{}}}],["redistributing",{"_index":895,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":804,"title":{},"body":{"license.html":{}}}],["regarding",{"_index":860,"title":{},"body":{"license.html":{}}}],["release",{"_index":422,"title":{},"body":{"changelog.html":{}}}],["remain",{"_index":716,"title":{},"body":{"license.html":{}}}],["replaced",{"_index":956,"title":{},"body":{"license.html":{}}}],["represent",{"_index":714,"title":{},"body":{"license.html":{}}}],["representatives",{"_index":734,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":766,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":872,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":634,"title":{},"body":{"license.html":{}}}],["request",{"_index":230,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.clone",{"_index":321,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.headers.get(key",{"_index":320,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.headers.keys",{"_index":318,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.method",{"_index":310,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.url",{"_index":307,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.urlwithparams",{"_index":312,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["required",{"_index":867,"title":{},"body":{"license.html":{}}}],["reset",{"_index":984,"title":{},"body":{"overview.html":{}}}],["response",{"_index":585,"title":{},"body":{"index.html":{}}}],["responsibility",{"_index":940,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":891,"title":{},"body":{"license.html":{}}}],["result",{"_index":32,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["resulting",{"_index":689,"title":{},"body":{"license.html":{}}}],["results",{"_index":34,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":819,"title":{},"body":{"license.html":{}}}],["return",{"_index":15,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{},"miscellaneous/functions.html":{}}}],["returns",{"_index":17,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["review",{"_index":420,"title":{},"body":{"changelog.html":{}}}],["revisions",{"_index":711,"title":{},"body":{"license.html":{}}}],["rights",{"_index":936,"title":{},"body":{"license.html":{}}}],["risks",{"_index":897,"title":{},"body":{"license.html":{}}}],["root",{"_index":27,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["royalty",{"_index":763,"title":{},"body":{"license.html":{}}}],["run",{"_index":538,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":267,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":273,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["same",{"_index":964,"title":{},"body":{"license.html":{}}}],["sample",{"_index":225,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["sampleconfig",{"_index":224,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["sampler",{"_index":221,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"todo.html":{}}}],["samples",{"_index":557,"title":{},"body":{"index.html":{}}}],["sampling",{"_index":430,"title":{},"body":{"changelog.html":{}}}],["section",{"_index":775,"title":{},"body":{"license.html":{}}}],["sections",{"_index":639,"title":{},"body":{"license.html":{}}}],["see",{"_index":392,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["sell",{"_index":778,"title":{},"body":{"license.html":{}}}],["send",{"_index":548,"title":{},"body":{"index.html":{}}}],["sending",{"_index":609,"title":{},"body":{"index.html":{}}}],["sent",{"_index":733,"title":{},"body":{"license.html":{}}}],["separable",{"_index":717,"title":{},"body":{"license.html":{}}}],["separate",{"_index":857,"title":{},"body":{"license.html":{}}}],["service",{"_index":59,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/HttpTextPropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["servicename",{"_index":49,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["services/exporter/span",{"_index":274,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["services/propagator/http",{"_index":276,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["setactivespan",{"_index":270,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["setheaders",{"_index":322,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["shall",{"_index":637,"title":{},"body":{"license.html":{}}}],["shares",{"_index":673,"title":{},"body":{"license.html":{}}}],["simplespanexporter(sync",{"_index":56,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["simplespanprocessor",{"_index":247,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["simplespanprocessor(new",{"_index":324,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["simplespanprocessor(spanexporter",{"_index":326,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["skipself",{"_index":339,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["software",{"_index":686,"title":{},"body":{"license.html":{}}}],["sole",{"_index":939,"title":{},"body":{"license.html":{}}}],["solely",{"_index":890,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"license.html":{}}}],["span",{"_index":124,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/SpanExporterService.html":{},"coverage.html":{},"index.html":{}}}],["span.addevent('error",{"_index":301,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.addevent('response",{"_index":298,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.end",{"_index":303,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.setattribute('http.status_code",{"_index":296,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["spanexporter",{"_index":130,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/JaegerExporterService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["spanexporterservice",{"_index":216,"title":{"injectables/SpanExporterService.html":{}},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/SpanExporterService.html":{},"coverage.html":{}}}],["spanexporterservicefactory",{"_index":374,"title":{},"body":{"injectables/SpanExporterService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["spanexporterservicefactory(config",{"_index":528,"title":{},"body":{"miscellaneous/functions.html":{}}}],["special",{"_index":910,"title":{},"body":{"license.html":{}}}],["specific",{"_index":975,"title":{},"body":{"license.html":{}}}],["specified",{"_index":553,"title":{},"body":{"index.html":{}}}],["stackcontextmanager",{"_index":259,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["standard",{"_index":393,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":589,"title":{},"body":{"index.html":{}}}],["start:complete",{"_index":591,"title":{},"body":{"index.html":{}}}],["started",{"_index":386,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["startspan",{"_index":306,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["state",{"_index":851,"title":{},"body":{"license.html":{}}}],["stated",{"_index":774,"title":{},"body":{"license.html":{}}}],["statement",{"_index":844,"title":{},"body":{"license.html":{}}}],["statements",{"_index":478,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":333,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["stating",{"_index":816,"title":{},"body":{"license.html":{}}}],["stoppage",{"_index":919,"title":{},"body":{"license.html":{}}}],["string",{"_index":57,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["subject",{"_index":460,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["sublicense",{"_index":770,"title":{},"body":{"license.html":{}}}],["submission",{"_index":847,"title":{},"body":{"license.html":{}}}],["submit",{"_index":727,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":725,"title":{},"body":{"license.html":{}}}],["subsequently",{"_index":751,"title":{},"body":{"license.html":{}}}],["such",{"_index":664,"title":{},"body":{"license.html":{}}}],["supersede",{"_index":856,"title":{},"body":{"license.html":{}}}],["support",{"_index":932,"title":{},"body":{"license.html":{}}}],["switch",{"_index":153,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/SpanExporterService.html":{}}}],["sync",{"_index":568,"title":{},"body":{"index.html":{}}}],["syntax",{"_index":962,"title":{},"body":{"license.html":{}}}],["systems",{"_index":737,"title":{},"body":{"license.html":{}}}],["table",{"_index":491,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":490,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":271,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["task",{"_index":988,"title":{},"body":{"todo.html":{}}}],["telemetry/opentelemetry",{"_index":550,"title":{},"body":{"index.html":{}}}],["terminate",{"_index":801,"title":{},"body":{"license.html":{}}}],["terms",{"_index":632,"title":{},"body":{"license.html":{}}}],["test",{"_index":444,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["text",{"_index":136,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["theory",{"_index":901,"title":{},"body":{"license.html":{}}}],["there's",{"_index":596,"title":{},"body":{"index.html":{}}}],["thereof",{"_index":721,"title":{},"body":{"license.html":{}}}],["third",{"_index":832,"title":{},"body":{"license.html":{}}}],["this.b3propagatorservice.getpropagator",{"_index":119,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.config.commonconfig.production",{"_index":284,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.configjaeger",{"_index":187,"title":{},"body":{"injectables/JaegerExporterService.html":{}}}],["this.contextmanager",{"_index":289,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager._currentcontext",{"_index":314,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager.active",{"_index":313,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.customheader",{"_index":196,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["this.defineprobabilitysampler(config.commonconfig.probabilitysampler",{"_index":282,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.httptextpropagatorservice.getpropagator",{"_index":288,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.httptracecontextpropagatorservice.getpropagator",{"_index":120,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.initspan(request",{"_index":290,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.injectcontextandheader(span",{"_index":292,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.insertconsolespanexporter(this.config.commonconfig.console",{"_index":286,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.insertspanprocessorproductionmode",{"_index":283,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.jaegerhttptracepropagatorservice.getpropagator",{"_index":121,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.otelcolconfig",{"_index":366,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["this.spanexporterservice.getexporter",{"_index":285,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer",{"_index":281,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer.addspanprocessor",{"_index":323,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer.register",{"_index":287,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.zipkinconfig",{"_index":383,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["those",{"_index":781,"title":{},"body":{"license.html":{}}}],["through",{"_index":640,"title":{},"body":{"license.html":{}}}],["throw",{"_index":348,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["timeout",{"_index":616,"title":{},"body":{"index.html":{}}}],["title",{"_index":886,"title":{},"body":{"license.html":{}}}],["todo",{"_index":987,"title":{"todo.html":{}},"body":{"todo.html":{}}}],["tort",{"_index":902,"title":{},"body":{"license.html":{}}}],["trace",{"_index":52,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["tracedreq",{"_index":291,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["traceid",{"_index":414,"title":{},"body":{"changelog.html":{}}}],["tracer",{"_index":209,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["traces",{"_index":560,"title":{},"body":{"index.html":{}}}],["tracking",{"_index":739,"title":{},"body":{"license.html":{}}}],["trade",{"_index":863,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":820,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":861,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":779,"title":{},"body":{"license.html":{}}}],["transformation",{"_index":691,"title":{},"body":{"license.html":{}}}],["translation",{"_index":692,"title":{},"body":{"license.html":{}}}],["troubleshoot",{"_index":540,"title":{},"body":{"index.html":{}}}],["true",{"_index":241,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["ts1086",{"_index":621,"title":{},"body":{"index.html":{}}}],["ts2694",{"_index":611,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":517,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":50,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["type/node",{"_index":619,"title":{},"body":{"index.html":{}}}],["types",{"_index":697,"title":{},"body":{"license.html":{}}}],["typescript",{"_index":625,"title":{},"body":{"index.html":{}}}],["typo",{"_index":472,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":149,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/SpanExporterService.html":{}}}],["under",{"_index":655,"title":{},"body":{"license.html":{}}}],["union",{"_index":650,"title":{},"body":{"license.html":{}}}],["unless",{"_index":849,"title":{},"body":{"license.html":{}}}],["unused",{"_index":455,"title":{},"body":{"changelog.html":{}}}],["up",{"_index":603,"title":{},"body":{"index.html":{}}}],["url",{"_index":73,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["use",{"_index":54,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["useclass",{"_index":355,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["used",{"_index":140,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/SpanExporterService.html":{},"index.html":{}}}],["usefactory",{"_index":145,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/SpanExporterService.html":{}}}],["uses",{"_index":532,"title":{},"body":{"index.html":{}}}],["usevalue",{"_index":354,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["using",{"_index":894,"title":{},"body":{"license.html":{}}}],["value",{"_index":75,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":484,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":993,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verbal",{"_index":730,"title":{},"body":{"license.html":{}}}],["version",{"_index":394,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["via",{"_index":565,"title":{},"body":{"index.html":{}}}],["void",{"_index":242,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["want",{"_index":595,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":881,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":875,"title":{},"body":{"license.html":{}}}],["web",{"_index":175,"title":{},"body":{"injectables/JaegerExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["webtracerprovider",{"_index":261,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["wherever",{"_index":831,"title":{},"body":{"license.html":{}}}],["whether",{"_index":665,"title":{},"body":{"license.html":{}}}],["whole",{"_index":715,"title":{},"body":{"license.html":{}}}],["within",{"_index":753,"title":{},"body":{"license.html":{}}}],["without",{"_index":607,"title":{},"body":{"index.html":{},"license.html":{}}}],["work",{"_index":698,"title":{},"body":{"license.html":{}}}],["works",{"_index":442,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["worldwide",{"_index":759,"title":{},"body":{"license.html":{}}}],["writing",{"_index":748,"title":{},"body":{"license.html":{}}}],["written",{"_index":731,"title":{},"body":{"license.html":{}}}],["xsrf",{"_index":462,"title":{},"body":{"changelog.html":{}}}],["yyyy",{"_index":970,"title":{},"body":{"license.html":{}}}],["zipkin",{"_index":63,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{}}}],["zipkincollectorconfig",{"_index":83,"title":{"interfaces/ZipkinCollectorConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["zipkinconfig",{"_index":91,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["zipkinexporter",{"_index":380,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["zipkinexporterservice",{"_index":373,"title":{"injectables/ZipkinExporterService.html":{}},"body":{"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["zone.js",{"_index":519,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":983,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/B3PropagatorService.html":{"url":"injectables/B3PropagatorService.html","title":"injectable - B3PropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  B3PropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                B3PropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator.service.ts:17\n                \n            \n\n\n            \n                \n                    Return an B3Propagator\n\n\n                    \n                    \n                    \n                        Returns :         HttpTextPropagator\n\n                    \n                    \n                        HttpTextPropagator as B3Propagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from './propagator.interface';\nimport { HttpTextPropagator } from '@opentelemetry/api';\nimport { B3Propagator } from '@opentelemetry/core';\n\n/**\n * B3PropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class B3PropagatorService implements IPropagator {\n  /**\n   * Return an B3Propagator\n   * @return HttpTextPropagator as B3Propagator\n   */\n  getPropagator(): HttpTextPropagator {\n    return new B3Propagator();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommonCollectorConfig.html":{"url":"interfaces/CommonCollectorConfig.html","title":"interface - CommonCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CommonCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                Common configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        collector\n                                \n                                \n                                            Optional\n                                        console\n                                \n                                \n                                            Optional\n                                        probabilitySampler\n                                \n                                \n                                            Optional\n                                        production\n                                \n                                \n                                            Optional\n                                        propagator\n                                \n                                \n                                        serviceName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        collector\n                                    \n                                \n                                \n                                    \n                                        collector:         Collector\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Collector\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    collector \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        console\n                                    \n                                \n                                \n                                    \n                                        console:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    console : boolean to trace in console \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        probabilitySampler\n                                    \n                                \n                                \n                                    \n                                        probabilitySampler:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    probabilitySampler \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        production\n                                    \n                                \n                                \n                                    \n                                        production:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        propagator\n                                    \n                                \n                                \n                                    \n                                        propagator:         Propagator\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Propagator\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    propagator \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serviceName\n                                    \n                                \n                                \n                                    \n                                        serviceName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    serviceName : Name of service in trace \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\nexport enum Collector {\n  jaeger = 'jaeger',\n  zipkin = 'zipkin',\n  otelcol = 'otelcol',\n}\n\nexport enum Propagator {\n  b3 = 'B3Propagator',\n  httpTrace = 'HttpTraceContext',\n  composite = 'CompositePropagator',\n  jaeger = 'JaegerPropagator',\n}\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** collector */\n  collector?: Collector;\n  /** propagator */\n  propagator?: Propagator;\n  /** probabilitySampler */\n  probabilitySampler?: number;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55678/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Jaeger Collector configuration\n */\nexport interface JaegerCollectorConfig {\n  /**\n   * Endpoint for the HTTPSender\n   */\n  endpoint?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** jaegerConfig */\n  jaegerConfig?: JaegerCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompositePropagatorService.html":{"url":"injectables/CompositePropagatorService.html","title":"injectable - CompositePropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CompositePropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                CompositePropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(b3PropagatorService: B3PropagatorService, httpTraceContextPropagatorService: HttpTraceContextPropagatorService, jaegerHttpTracePropagatorService: JaegerHttpTracePropagatorService)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator.service.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        b3PropagatorService\n                                                  \n                                                        \n                                                                        B3PropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpTraceContextPropagatorService\n                                                  \n                                                        \n                                                                        HttpTraceContextPropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jaegerHttpTracePropagatorService\n                                                  \n                                                        \n                                                                        JaegerHttpTracePropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator.service.ts:37\n                \n            \n\n\n            \n                \n                    Return an CompositePropagator\n\n\n                    \n                    \n                    \n                        Returns :         HttpTextPropagator\n\n                    \n                    \n                        HttpTextPropagator as CompositePropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IPropagator } from './propagator.interface';\nimport { HttpTextPropagator } from '@opentelemetry/api';\nimport {\n  CompositePropagator,\n  B3Propagator,\n  HttpTraceContext,\n} from '@opentelemetry/core';\nimport { JaegerHttpTracePropagator } from '@opentelemetry/propagator-jaeger';\nimport { B3PropagatorService } from './b3-propagator.service';\nimport { HttpTraceContextPropagatorService } from './http-trace-context-propagator.service';\nimport { JaegerHttpTracePropagatorService } from './jaeger-http-trace-propagator.service';\n/**\n * CompositePropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CompositePropagatorService implements IPropagator {\n  /**\n   * Constructor\n   * @param config OpenTelemetryConfig\n   */\n  constructor(\n    @Inject(B3PropagatorService)\n    private b3PropagatorService: B3PropagatorService,\n    @Inject(HttpTraceContextPropagatorService)\n    private httpTraceContextPropagatorService: HttpTraceContextPropagatorService,\n    @Inject(JaegerHttpTracePropagatorService)\n    private jaegerHttpTracePropagatorService: JaegerHttpTracePropagatorService\n  ) {}\n\n  /**\n   * Return an CompositePropagator\n   * @return HttpTextPropagator as CompositePropagator\n   */\n  getPropagator(): HttpTextPropagator {\n    return new CompositePropagator({\n      propagators: [\n        this.b3PropagatorService.getPropagator(),\n        this.httpTraceContextPropagatorService.getPropagator(),\n        this.jaegerHttpTracePropagatorService.getPropagator(),\n      ],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsoleSpanExporterService.html":{"url":"injectables/ConsoleSpanExporterService.html","title":"injectable - ConsoleSpanExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConsoleSpanExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/console-span-exporter.service.ts\n        \n\n            \n                Description\n            \n            \n                ConsoleSpanExporterService\nA default span exporter\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/console-span-exporter.service.ts:17\n                \n            \n\n\n            \n                \n                    Return a ConsoleSpanExporter\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IExporter } from './exporter.interface';\nimport { SpanExporter, ConsoleSpanExporter } from '@opentelemetry/tracing';\n\n/**\n * ConsoleSpanExporterService\n * A default span exporter\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConsoleSpanExporterService implements IExporter {\n  /**\n   * Return a ConsoleSpanExporter\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter {\n    return new ConsoleSpanExporter();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpTextPropagatorService.html":{"url":"injectables/HttpTextPropagatorService.html","title":"injectable - HttpTextPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpTextPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/http-text-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                HttpTextPropagatorService\nInjected service with factory to get a propagator by configuration\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/http-text-propagator.service.ts:35\n                \n            \n\n\n            \n                \n                    Not used in a factory, just a definition\n\n\n                    \n                        Returns :         HttpTextPropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { IPropagator } from './propagator.interface';\nimport { HttpTextPropagator } from '@opentelemetry/api';\nimport { Injectable } from '@angular/core';\nimport {\n  OpenTelemetryConfig,\n  Propagator,\n  OpenTelemetryInjectConfig,\n} from '../../configuration/opentelemetry-config';\nimport { HttpTraceContextPropagatorService } from './http-trace-context-propagator.service';\nimport { B3PropagatorService } from './b3-propagator.service';\nimport { CompositePropagatorService } from './composite-propagator.service';\nimport { NoopHttpTextPropagatorService } from './noop-http-text-propagator.service';\nimport { JaegerHttpTracePropagatorService } from './jaeger-http-trace-propagator.service';\n\n/**\n * HttpTextPropagatorService\n * Injected service with factory to get a propagator by configuration\n */\n@Injectable({\n  providedIn: 'root',\n  useFactory: httpTextPropagatorServiceFactory,\n  deps: [\n    OpenTelemetryInjectConfig,\n    HttpTraceContextPropagatorService,\n    B3PropagatorService,\n    CompositePropagatorService,\n    NoopHttpTextPropagatorService,\n    JaegerHttpTracePropagatorService,\n  ],\n})\nexport class HttpTextPropagatorService implements IPropagator {\n  /**\n   * Not used in a factory, just a definition\n   */\n  getPropagator(): HttpTextPropagator {\n    // factory\n    console.error('error');\n    return undefined;\n  }\n}\n\n/**\n * httpTextPropagatorServiceFactory\n * Provide a factory to have a propagator service\n * @param config config\n * @param httpTraceContextPropagatorService httpTraceContext\n * @param b3PropagatorService propagator\n * @param compositePropagatorService  composite\n * @param noopHttpTextPropagatorService noop\n *\n */\nexport function httpTextPropagatorServiceFactory(\n  config: OpenTelemetryConfig,\n  httpTraceContextPropagatorService: HttpTraceContextPropagatorService,\n  b3PropagatorService: B3PropagatorService,\n  compositePropagatorService: CompositePropagatorService,\n  noopHttpTextPropagatorService: NoopHttpTextPropagatorService,\n  jaegerHttpTracePropagatorService: JaegerHttpTracePropagatorService\n) {\n  let propagator: IPropagator = null;\n  switch (config.commonConfig.propagator) {\n    case Propagator.b3:\n      propagator = b3PropagatorService;\n      break;\n    case Propagator.httpTrace:\n      propagator = httpTraceContextPropagatorService;\n      break;\n    case Propagator.composite:\n      propagator = compositePropagatorService;\n      break;\n    case Propagator.jaeger:\n      propagator = jaegerHttpTracePropagatorService;\n      break;\n    default:\n      propagator = noopHttpTextPropagatorService;\n      break;\n  }\n  return propagator;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpTraceContextPropagatorService.html":{"url":"injectables/HttpTraceContextPropagatorService.html","title":"injectable - HttpTraceContextPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpTraceContextPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                HttpTraceContextPropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator.service.ts:17\n                \n            \n\n\n            \n                \n                    Return an HttpTraceContext\n\n\n                    \n                    \n                    \n                        Returns :         HttpTextPropagator\n\n                    \n                    \n                        HttpTextPropagator as HttpTraceContext\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from './propagator.interface';\nimport { HttpTextPropagator } from '@opentelemetry/api';\nimport { HttpTraceContext } from '@opentelemetry/core';\n\n/**\n * HttpTraceContextPropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class HttpTraceContextPropagatorService implements IPropagator {\n  /**\n   * Return an HttpTraceContext\n   * @return HttpTextPropagator as HttpTraceContext\n   */\n  getPropagator(): HttpTextPropagator {\n    return new HttpTraceContext();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IExporter.html":{"url":"interfaces/IExporter.html","title":"interface - IExporter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IExporter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n        \n\n            \n                Description\n            \n            \n                Exporter interface to define a default exporter\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getExporter\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts:11\n                \n            \n\n\n            \n                \n                    give an inmplementation of SpanExporter\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { SpanExporter } from '@opentelemetry/tracing';\n\n/**\n * Exporter interface to define a default exporter\n */\nexport interface IExporter {\n  /**\n   * give an inmplementation of SpanExporter\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPropagator.html":{"url":"interfaces/IPropagator.html","title":"interface - IPropagator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPropagator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n        \n\n            \n                Description\n            \n            \n                Interface to define propagator\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getPropagator\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts:11\n                \n            \n\n\n            \n                \n                    give an implementation of a propagator\n\n\n                    \n                    \n                    \n                        Returns :         HttpTextPropagator\n\n                    \n                    \n                        HttpTextPropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpTextPropagator } from '@opentelemetry/api';\n\n/**\n * Interface to define propagator\n */\nexport interface IPropagator {\n  /**\n   * give an implementation of a propagator\n   * @return HttpTextPropagator\n   */\n  getPropagator(): HttpTextPropagator;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JaegerCollectorConfig.html":{"url":"interfaces/JaegerCollectorConfig.html","title":"interface - JaegerCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JaegerCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                Jaeger Collector configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        endpoint\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endpoint\n                                    \n                                \n                                \n                                    \n                                        endpoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Endpoint for the HTTPSender\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\nexport enum Collector {\n  jaeger = 'jaeger',\n  zipkin = 'zipkin',\n  otelcol = 'otelcol',\n}\n\nexport enum Propagator {\n  b3 = 'B3Propagator',\n  httpTrace = 'HttpTraceContext',\n  composite = 'CompositePropagator',\n  jaeger = 'JaegerPropagator',\n}\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** collector */\n  collector?: Collector;\n  /** propagator */\n  propagator?: Propagator;\n  /** probabilitySampler */\n  probabilitySampler?: number;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55678/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Jaeger Collector configuration\n */\nexport interface JaegerCollectorConfig {\n  /**\n   * Endpoint for the HTTPSender\n   */\n  endpoint?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** jaegerConfig */\n  jaegerConfig?: JaegerCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JaegerExporterService.html":{"url":"injectables/JaegerExporterService.html","title":"injectable - JaegerExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JaegerExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/jaeger-exporter.service.ts\n        \n\n            \n                Description\n            \n            \n                JaegerExporterService class\nJaegerExporter isn't operationnal for the moment in web application.\nit's present if one day..\nFor the moment return a ConsoleSpanExporter\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/jaeger-exporter.service.ts:18\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/jaeger-exporter.service.ts:36\n                \n            \n\n\n            \n                \n                    Return a JaegerExporter\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n} from '../../configuration/opentelemetry-config';\nimport { IExporter } from './exporter.interface';\nimport { SpanExporter, ConsoleSpanExporter } from '@opentelemetry/tracing';\n\n/**\n * JaegerExporterService class\n * JaegerExporter isn't operationnal for the moment in web application.\n * it's present if one day..\n * For the moment return a ConsoleSpanExporter\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JaegerExporterService implements IExporter {\n  //private configJaeger: ExporterConfig;\n\n  /**\n   * constructor\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OpenTelemetryInjectConfig) config: OpenTelemetryConfig) {\n    /*this.configJaeger = {\n      serviceName: config.commonConfig.serviceName,\n      endpoint: config.jaegerConfig?.endpoint,\n    };*/\n  }\n\n  /**\n   * Return a JaegerExporter\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter {\n    //return new JaegerExporter(this.configJaeger);\n    return new ConsoleSpanExporter();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JaegerHttpTracePropagatorService.html":{"url":"injectables/JaegerHttpTracePropagatorService.html","title":"injectable - JaegerHttpTracePropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JaegerHttpTracePropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                JaegerHttpTracePropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                customHeader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator.service.ts:15\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator.service.ts:28\n                \n            \n\n\n            \n                \n                    Return an HttpTraceContext\n\n\n                    \n                    \n                    \n                        Returns :         HttpTextPropagator\n\n                    \n                    \n                        HttpTextPropagator as HttpTraceContext\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            customHeader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IPropagator } from './propagator.interface';\nimport { HttpTextPropagator } from '@opentelemetry/api';\nimport { JaegerHttpTracePropagator } from '@opentelemetry/propagator-jaeger';\nimport { OpenTelemetryInjectConfig } from '../../configuration/opentelemetry-config';\nimport { OpenTelemetryConfig } from '../../../public-api';\n\n/**\n * JaegerHttpTracePropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JaegerHttpTracePropagatorService implements IPropagator {\n  private customHeader: string;\n  /**\n   * Constructor\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OpenTelemetryInjectConfig) config: OpenTelemetryConfig) {\n    this.customHeader = config.jaegerPropagatorConfig?.customHeader;\n  }\n\n  /**\n   * Return an HttpTraceContext\n   * @return HttpTextPropagator as HttpTraceContext\n   */\n  getPropagator(): HttpTextPropagator {\n    return new JaegerHttpTracePropagator(this.customHeader);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JaegerPropagatorConfig.html":{"url":"interfaces/JaegerPropagatorConfig.html","title":"interface - JaegerPropagatorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JaegerPropagatorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for JaegerPropagatorConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        customHeader\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customHeader\n                                    \n                                \n                                \n                                    \n                                        customHeader:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A custom Header for the propagator\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\nexport enum Collector {\n  jaeger = 'jaeger',\n  zipkin = 'zipkin',\n  otelcol = 'otelcol',\n}\n\nexport enum Propagator {\n  b3 = 'B3Propagator',\n  httpTrace = 'HttpTraceContext',\n  composite = 'CompositePropagator',\n  jaeger = 'JaegerPropagator',\n}\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** collector */\n  collector?: Collector;\n  /** propagator */\n  propagator?: Propagator;\n  /** probabilitySampler */\n  probabilitySampler?: number;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55678/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Jaeger Collector configuration\n */\nexport interface JaegerCollectorConfig {\n  /**\n   * Endpoint for the HTTPSender\n   */\n  endpoint?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** jaegerConfig */\n  jaegerConfig?: JaegerCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NoopHttpTextPropagatorService.html":{"url":"injectables/NoopHttpTextPropagatorService.html","title":"injectable - NoopHttpTextPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NoopHttpTextPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                NoopHttpTextPropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator.service.ts:16\n                \n            \n\n\n            \n                \n                    Return an NoopHttpTextPropagator\n\n\n                    \n                    \n                    \n                        Returns :         HttpTextPropagator\n\n                    \n                    \n                        HttpTextPropagator as NoopHttpTextPropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from './propagator.interface';\nimport { HttpTextPropagator, NoopHttpTextPropagator } from '@opentelemetry/api';\n\n/**\n * NoopHttpTextPropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class NoopHttpTextPropagatorService implements IPropagator {\n  /**\n   * Return an NoopHttpTextPropagator\n   * @return HttpTextPropagator as NoopHttpTextPropagator\n   */\n  getPropagator(): HttpTextPropagator {\n    return new NoopHttpTextPropagator();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OpenTelemetryConfig.html":{"url":"interfaces/OpenTelemetryConfig.html","title":"interface - OpenTelemetryConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OpenTelemetryConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                OpenTelemetryConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        commonConfig\n                                \n                                \n                                            Optional\n                                        jaegerConfig\n                                \n                                \n                                            Optional\n                                        jaegerPropagatorConfig\n                                \n                                \n                                            Optional\n                                        otelcolConfig\n                                \n                                \n                                            Optional\n                                        zipkinConfig\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        commonConfig\n                                    \n                                \n                                \n                                    \n                                        commonConfig:         CommonCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CommonCollectorConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    commonConfig \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jaegerConfig\n                                    \n                                \n                                \n                                    \n                                        jaegerConfig:         JaegerCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         JaegerCollectorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    jaegerConfig \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jaegerPropagatorConfig\n                                    \n                                \n                                \n                                    \n                                        jaegerPropagatorConfig:         JaegerPropagatorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         JaegerPropagatorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    jaegerPropagatorConfig \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        otelcolConfig\n                                    \n                                \n                                \n                                    \n                                        otelcolConfig:         OtelCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OtelCollectorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    otelcolConfig \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zipkinConfig\n                                    \n                                \n                                \n                                    \n                                        zipkinConfig:         ZipkinCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ZipkinCollectorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    zipkinConfig \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\nexport enum Collector {\n  jaeger = 'jaeger',\n  zipkin = 'zipkin',\n  otelcol = 'otelcol',\n}\n\nexport enum Propagator {\n  b3 = 'B3Propagator',\n  httpTrace = 'HttpTraceContext',\n  composite = 'CompositePropagator',\n  jaeger = 'JaegerPropagator',\n}\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** collector */\n  collector?: Collector;\n  /** propagator */\n  propagator?: Propagator;\n  /** probabilitySampler */\n  probabilitySampler?: number;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55678/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Jaeger Collector configuration\n */\nexport interface JaegerCollectorConfig {\n  /**\n   * Endpoint for the HTTPSender\n   */\n  endpoint?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** jaegerConfig */\n  jaegerConfig?: JaegerCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/OpenTelemetryHttpInterceptor.html":{"url":"interceptors/OpenTelemetryHttpInterceptor.html","title":"interceptor - OpenTelemetryHttpInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  OpenTelemetryHttpInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                OpenTelemetryInterceptor class\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contextManager\n                            \n                            \n                                tracer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                defineProbabilitySampler\n                            \n                            \n                                    Private\n                                initSpan\n                            \n                            \n                                    Private\n                                injectContextAndHeader\n                            \n                            \n                                    Private\n                                insertConsoleSpanExporter\n                            \n                            \n                                    Private\n                                insertSpanProcessorProductionMode\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig, spanExporterService: SpanExporterService, httpTextPropagatorService: HttpTextPropagatorService)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:47\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                configuration\n\n                                                        \n                                                \n                                                \n                                                        spanExporterService\n                                                  \n                                                        \n                                                                        SpanExporterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service exporter injected\n\n                                                        \n                                                \n                                                \n                                                        httpTextPropagatorService\n                                                  \n                                                        \n                                                                        HttpTextPropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                propagator\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            defineProbabilitySampler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defineProbabilitySampler(sampleConfig: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:190\n                \n            \n\n\n            \n                \n                    define the Probability Sampler\nBy Default, it's always (or 1)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sampleConfig\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the sample configuration\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ProbabilitySampler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initSpan\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initSpan(request: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:113\n                \n            \n\n\n            \n                \n                    Initialise a span for a request intercepted\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     api.Span\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            injectContextAndHeader\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    injectContextAndHeader(span: api.Span, request: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:138\n                \n            \n\n\n            \n                \n                    Add header propagator in request and conserve original header\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    span\n                                    \n                                            api.Span\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        span\n\n                                    \n                                \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            insertConsoleSpanExporter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertConsoleSpanExporter(console: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:160\n                \n            \n\n\n            \n                \n                    Insert in tracer the console span if config is true\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    console\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        config to insert console span\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            insertSpanProcessorProductionMode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertSpanProcessorProductionMode(production: boolean, spanExporter: SpanExporter)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:174\n                \n            \n\n\n            \n                \n                    Insert BatchSpanProcessor in production mode\nSimpleSpanProcessor otherwise\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    production\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mode\n\n                                    \n                                \n                                \n                                    spanExporter\n                                    \n                                            SpanExporter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Exporter\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:81\n                \n            \n\n\n            \n                \n                    Overide method\nInterceptor from HttpInterceptor Angular\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the current request\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        next\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contextManager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     StackContextManager\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:47\n                            \n                        \n\n                \n                    \n                        context manager\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tracer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     WebTracerProvider\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:43\n                            \n                        \n\n                \n                    \n                        tracer\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpResponse,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport * as api from '@opentelemetry/api';\nimport { WebTracerProvider, StackContextManager } from '@opentelemetry/web';\nimport {\n  SimpleSpanProcessor,\n  ConsoleSpanExporter,\n  BatchSpanProcessor,\n  SpanExporter,\n} from '@opentelemetry/tracing';\nimport {\n  ALWAYS_SAMPLER,\n  setActiveSpan,\n  ProbabilitySampler,\n} from '@opentelemetry/core';\nimport { tap, finalize } from 'rxjs/operators';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n} from '../configuration/opentelemetry-config';\nimport { SpanExporterService } from '../services/exporter/span-exporter.service';\nimport { HttpTextPropagatorService } from '../services/propagator/http-text-propagator.service';\nimport { randomTraceId } from '@opentelemetry/core';\n\n/**\n * OpenTelemetryInterceptor class\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OpenTelemetryHttpInterceptor implements HttpInterceptor {\n  /**\n   * tracer\n   */\n  tracer: WebTracerProvider;\n  /**\n   * context manager\n   */\n  contextManager: StackContextManager;\n\n  /**\n   * constructor\n   * @param config configuration\n   * @param spanExporterService service exporter injected\n   * @param httpTextPropagatorService propagator\n   */\n  constructor(\n    @Inject(OpenTelemetryInjectConfig) private config: OpenTelemetryConfig,\n    @Inject(SpanExporterService)\n    private spanExporterService: SpanExporterService,\n    @Inject(HttpTextPropagatorService)\n    private httpTextPropagatorService: HttpTextPropagatorService\n  ) {\n    this.tracer = new WebTracerProvider({\n      sampler: this.defineProbabilitySampler(config.commonConfig.probabilitySampler),\n    });\n    this.insertSpanProcessorProductionMode(\n      this.config.commonConfig.production,\n      this.spanExporterService.getExporter()\n    );\n    this.insertConsoleSpanExporter(this.config.commonConfig.console);\n    this.tracer.register({\n      propagator: this.httpTextPropagatorService.getPropagator(),\n    });\n  }\n\n  /**\n   * Overide method\n   * Interceptor from HttpInterceptor Angular\n   * @param request the current request\n   * @param next next\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    this.contextManager = new StackContextManager();\n    const span: api.Span = this.initSpan(request);\n    const tracedReq = this.injectContextAndHeader(span, request);\n    return next.handle(tracedReq).pipe(\n      tap(\n        (event: HttpEvent) => {\n          if (event instanceof HttpResponse) {\n            span.setAttribute('http.status_code', event.status);\n            span.addEvent('response', { body: JSON.stringify(event.body) });\n          }\n        },\n        (event: HttpErrorResponse) => {\n          if (event instanceof HttpErrorResponse) {\n            span.setAttribute('http.status_code', event.status);\n            span.addEvent('error', { body: JSON.stringify(event.error) });\n          }\n        }\n      ),\n      finalize(() => {\n        span.end();\n      })\n    );\n  }\n\n  /**\n   * Initialise a span for a request intercepted\n   * @param request request\n   */\n  private initSpan(request: HttpRequest): api.Span {\n    const span = this.tracer\n      .getTracer('angular-interceptor', '0.0.1')\n      .startSpan(\n        request.url,\n        {\n          attributes: {\n            ['http.method']: request.method,\n            ['http.url']: request.urlWithParams,\n          },\n        },\n        this.contextManager.active()\n      );\n    this.contextManager._currentContext = setActiveSpan(\n      this.contextManager.active(),\n      span\n    );\n    return span;\n  }\n\n  /**\n   * Add header propagator in request and conserve original header\n   * @param span span\n   * @param request request\n   */\n  private injectContextAndHeader(\n    span: api.Span,\n    request: HttpRequest\n  ) {\n    const carrier = {};\n    api.propagation.inject(\n      carrier,\n      api.defaultSetter,\n      this.contextManager.active()\n    );\n    for (const key in request.headers.keys) {\n      carrier[key] = request.headers.get(key);\n    }\n    return request.clone({\n      setHeaders: carrier,\n    });\n  }\n\n  /**\n   * Insert in tracer the console span if config is true\n   * @param console config to insert console span\n   */\n  private insertConsoleSpanExporter(console: boolean) {\n    if (console) {\n      this.tracer.addSpanProcessor(\n        new SimpleSpanProcessor(new ConsoleSpanExporter())\n      );\n    }\n  }\n\n  /**\n   * Insert BatchSpanProcessor in production mode\n   * SimpleSpanProcessor otherwise\n   * @param production mode\n   * @param spanExporter Exporter\n   */\n  private insertSpanProcessorProductionMode(\n    production: boolean,\n    spanExporter: SpanExporter\n  ) {\n    this.tracer.addSpanProcessor(\n      production\n        ? new BatchSpanProcessor(spanExporter)\n        : new SimpleSpanProcessor(spanExporter)\n    );\n  }\n\n  /**\n   * define the Probability Sampler\n   * By Default, it's always (or 1)\n   * @param sampleConfig the sample configuration\n   */\n  private defineProbabilitySampler(sampleConfig: number): ProbabilitySampler {\n    if (sampleConfig === undefined || sampleConfig > 1) {\n      return ALWAYS_SAMPLER;\n    } else {\n      return new ProbabilitySampler(sampleConfig);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OpenTelemetryInterceptorModule.html":{"url":"modules/OpenTelemetryInterceptorModule.html","title":"module - OpenTelemetryInterceptorModule","body":"\n                   \n\n\n\n\n    Modules\n    OpenTelemetryInterceptorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/opentelemetry-interceptor.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: OpenTelemetryConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/opentelemetry-interceptor.module.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                OpenTelemetryConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  NgModule,\n  ModuleWithProviders,\n  Optional,\n  SkipSelf,\n} from '@angular/core';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n} from './configuration/opentelemetry-config';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { OpenTelemetryHttpInterceptor } from './interceptor/opentelemetry-http.interceptor';\n\n@NgModule({\n  declarations: [],\n  imports: [HttpClientModule],\n  exports: [],\n})\nexport class OpenTelemetryInterceptorModule {\n  constructor(\n    @Optional() @SkipSelf() parentModule?: OpenTelemetryInterceptorModule\n  ) {\n    if (parentModule) {\n      throw new Error(\n        'OpentelemetryInterceptorModule is already loaded. Import it in the AppModule only'\n      );\n    }\n  }\n\n  public static forRoot(config: OpenTelemetryConfig): ModuleWithProviders {\n    return {\n      ngModule: OpenTelemetryInterceptorModule,\n      providers: [\n        { provide: OpenTelemetryInjectConfig, useValue: config },\n        {\n          provide: HTTP_INTERCEPTORS,\n          useClass: OpenTelemetryHttpInterceptor,\n          multi: true,\n        },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OtelCollectorConfig.html":{"url":"interfaces/OtelCollectorConfig.html","title":"interface - OtelCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OtelCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                OpenTelemetry Collector configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        headers\n                                \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    custom headers\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An url (Default value: http://localhost:55678/v1/trace)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\nexport enum Collector {\n  jaeger = 'jaeger',\n  zipkin = 'zipkin',\n  otelcol = 'otelcol',\n}\n\nexport enum Propagator {\n  b3 = 'B3Propagator',\n  httpTrace = 'HttpTraceContext',\n  composite = 'CompositePropagator',\n  jaeger = 'JaegerPropagator',\n}\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** collector */\n  collector?: Collector;\n  /** propagator */\n  propagator?: Propagator;\n  /** probabilitySampler */\n  probabilitySampler?: number;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55678/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Jaeger Collector configuration\n */\nexport interface JaegerCollectorConfig {\n  /**\n   * Endpoint for the HTTPSender\n   */\n  endpoint?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** jaegerConfig */\n  jaegerConfig?: JaegerCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OtelcolExporterService.html":{"url":"injectables/OtelcolExporterService.html","title":"injectable - OtelcolExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OtelcolExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol-exporter.service.ts\n        \n\n            \n                Description\n            \n            \n                OtelcolExporterService class\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                otelcolConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol-exporter.service.ts:25\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol-exporter.service.ts:43\n                \n            \n\n\n            \n                \n                    Return a CollectorExporter with the configuration\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        a CollectorExporter\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            otelcolConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CollectorExporterConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol-exporter.service.ts:25\n                            \n                        \n\n                \n                    \n                        CollectorExporterConfig\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IExporter } from './exporter.interface';\nimport { SpanExporter } from '@opentelemetry/tracing';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n} from '../../configuration/opentelemetry-config';\nimport {\n  CollectorExporter,\n} from '@opentelemetry/exporter-collector';\nimport {\n  CollectorExporterConfig,\n} from '@opentelemetry/exporter-collector/build/src/platform/browser';\n\n/**\n * OtelcolExporterService class\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OtelcolExporterService implements IExporter {\n  /**\n   * CollectorExporterConfig\n   */\n  private otelcolConfig: CollectorExporterConfig;\n\n  /**\n   * constructor\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OpenTelemetryInjectConfig) config: OpenTelemetryConfig) {\n    this.otelcolConfig = {\n      serviceName: config.commonConfig.serviceName,\n      url: config.otelcolConfig?.url,\n      headers: config.otelcolConfig?.headers,\n    };\n  }\n\n  /**\n   * Return a CollectorExporter with the configuration\n   * @return a CollectorExporter\n   */\n  getExporter(): SpanExporter {\n    return new CollectorExporter(this.otelcolConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SpanExporterService.html":{"url":"injectables/SpanExporterService.html","title":"injectable - SpanExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SpanExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/span-exporter.service.ts\n        \n\n            \n                Description\n            \n            \n                An Angular Factory to have the configured collector\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/span-exporter.service.ts:32\n                \n            \n\n\n            \n                \n                    Not used in a factory, just a definition\n\n\n                    \n                        Returns :     SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { SpanExporter } from '@opentelemetry/tracing';\nimport { IExporter } from './exporter.interface';\nimport { Injectable } from '@angular/core';\nimport { JaegerExporterService } from './jaeger-exporter.service';\nimport { OtelcolExporterService } from './otelcol-exporter.service';\nimport { ZipkinExporterService } from './zipkin-exporter.service';\nimport {\n  OpenTelemetryConfig,\n  Collector,\n  OpenTelemetryInjectConfig,\n} from '../../configuration/opentelemetry-config';\nimport { ConsoleSpanExporterService } from './console-span-exporter.service';\n\n/**\n * An Angular Factory to have the configured collector\n */\n@Injectable({\n  providedIn: 'root',\n  useFactory: spanExporterServiceFactory,\n  deps: [\n    OpenTelemetryInjectConfig,\n    JaegerExporterService,\n    OtelcolExporterService,\n    ZipkinExporterService,\n    ConsoleSpanExporterService,\n  ],\n})\nexport class SpanExporterService implements IExporter {\n  /**\n   * Not used in a factory, just a definition\n   */\n  getExporter(): SpanExporter {\n    // factory\n    console.error('error');\n    return undefined;\n  }\n}\n\n/**\n * Factory to return Service configured\n * @param config config\n * @param jaegerExporterService jaeger\n * @param otelcolExporterService otelcol\n * @param zipkinExporterService zipkin\n * @param consoleSpanExporter console\n */\nexport function spanExporterServiceFactory(\n  config: OpenTelemetryConfig,\n  jaegerExporterService: JaegerExporterService,\n  otelcolExporterService: OtelcolExporterService,\n  zipkinExporterService: ZipkinExporterService,\n  consoleSpanExporter: ConsoleSpanExporterService\n) {\n  let exporter: IExporter = null;\n  switch (config.commonConfig.collector) {\n    case Collector.jaeger:\n      exporter = jaegerExporterService;\n      break;\n    case Collector.otelcol:\n      exporter = otelcolExporterService;\n      break;\n    case Collector.zipkin:\n      exporter = zipkinExporterService;\n      break;\n    default:\n      exporter = consoleSpanExporter;\n      break;\n  }\n  return exporter;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ZipkinCollectorConfig.html":{"url":"interfaces/ZipkinCollectorConfig.html","title":"interface - ZipkinCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ZipkinCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for Zipkin\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An url (Default value: http://localhost:9411/api/v2/spans)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\nexport enum Collector {\n  jaeger = 'jaeger',\n  zipkin = 'zipkin',\n  otelcol = 'otelcol',\n}\n\nexport enum Propagator {\n  b3 = 'B3Propagator',\n  httpTrace = 'HttpTraceContext',\n  composite = 'CompositePropagator',\n  jaeger = 'JaegerPropagator',\n}\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** collector */\n  collector?: Collector;\n  /** propagator */\n  propagator?: Propagator;\n  /** probabilitySampler */\n  probabilitySampler?: number;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55678/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Jaeger Collector configuration\n */\nexport interface JaegerCollectorConfig {\n  /**\n   * Endpoint for the HTTPSender\n   */\n  endpoint?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** jaegerConfig */\n  jaegerConfig?: JaegerCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ZipkinExporterService.html":{"url":"injectables/ZipkinExporterService.html","title":"injectable - ZipkinExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ZipkinExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin-exporter.service.ts\n        \n\n            \n                Description\n            \n            \n                ZipkinExporter isn't operationnal for the moment in web application.\nit's present if one day..\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin-exporter.service.ts:16\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin-exporter.service.ts:34\n                \n            \n\n\n            \n                \n                    Return for the moment a ConsoleSpanExporter\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IExporter } from './exporter.interface';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n} from '../../configuration/opentelemetry-config';\nimport { SpanExporter, ConsoleSpanExporter } from '@opentelemetry/tracing';\n\n/**\n * ZipkinExporter isn't operationnal for the moment in web application.\n * it's present if one day..\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ZipkinExporterService implements IExporter {\n  // private zipkinConfig: ExporterConfig;\n\n  /**\n   * constructor\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OpenTelemetryInjectConfig) config: OpenTelemetryConfig) {\n    /*this.zipkinConfig = {\n      serviceName: config.commonConfig.serviceName,\n      url: config.zipkinConfig.url,\n    };*/\n  }\n\n  /**\n   * Return for the moment a ConsoleSpanExporter\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter {\n    return new ConsoleSpanExporter();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n0.8.3-2 (2020-06-08)\nBug Fixes\n\nchangelog (8d45a2c)\nproblem with context and trace parent id (#4) (f195a50)\n\n0.8.3-1 (2020-06-05)\nFeatures\n\nadd jaeger propagator (fad044a)\nadd JaegerPropagator to composite (8e268a9)\n\nBug Fixes\n\ncontext traceId problem (#3) (c6368c9) \n\n0.8.3 (2020-05-30)\nFeatures\n\nadd docs (bd69598)\nreview before new release version (1229a9d)\n\n0.8.2 (2020-05-30)\nFeatures\n\nadd composite (7a5b07e)\nadd composite header (83fc1f3)\nadd example ok (e5eb09e)\nadd sampling configuration (ad03334)\nangular downgrade in progress (92330f9)\nen cours (0885b40)\nok (dd7a0e5)\nok (3516488)\nok (b63afc1)\nok (b679883)\nOK it works (ec28651)\ntest (0f35b5c)\n\nBug Fixes\n\ncan be use in angular 9/node 12/Typescript 3.6.0 (563071d)\ndel doc dir (96da55f)\ndelete unused file (dda5d54)\ndelete unused file (a1746bf)\ndoc and code (4a000b9)\nno subject with JSONP and XSRF (95167b9)\nno subject with JSONP and XSRF (47aba25)\nok (371886a)\npublish (613c16d)\npublish (47c249b)\npublish (a517094)\npublish and readme (412d2fd)\nsome typo (80f7bf8)\nsome typo (735b05d)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            CommonCollectorConfig\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            JaegerCollectorConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            JaegerPropagatorConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            OpenTelemetryConfig\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            OtelCollectorConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            ZipkinCollectorConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            variable\n            OpenTelemetryInjectConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts\n            \n            interceptor\n            OpenTelemetryHttpInterceptor\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/console-span-exporter.service.ts\n            \n            injectable\n            ConsoleSpanExporterService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n            \n            interface\n            IExporter\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/jaeger-exporter.service.ts\n            \n            injectable\n            JaegerExporterService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol-exporter.service.ts\n            \n            injectable\n            OtelcolExporterService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/span-exporter.service.ts\n            \n            injectable\n            SpanExporterService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/span-exporter.service.ts\n            \n            function\n            spanExporterServiceFactory\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin-exporter.service.ts\n            \n            injectable\n            ZipkinExporterService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator.service.ts\n            \n            injectable\n            B3PropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator.service.ts\n            \n            injectable\n            CompositePropagatorService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/http-text-propagator.service.ts\n            \n            injectable\n            HttpTextPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/http-text-propagator.service.ts\n            \n            function\n            httpTextPropagatorServiceFactory\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator.service.ts\n            \n            injectable\n            HttpTraceContextPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator.service.ts\n            \n            injectable\n            JaegerHttpTracePropagatorService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator.service.ts\n            \n            injectable\n            NoopHttpTextPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n            \n            interface\n            IPropagator\n            \n                100 %\n                (2/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^9.1.11\n        \n            @angular/cdk : ^9.2.4\n        \n            @angular/common : ^9.1.11\n        \n            @angular/compiler : ^9.1.11\n        \n            @angular/core : ^9.1.11\n        \n            @angular/forms : ^9.1.11\n        \n            @angular/material : ^9.2.4\n        \n            @angular/platform-browser : ^9.1.11\n        \n            @angular/platform-browser-dynamic : ^9.1.11\n        \n            @angular/router : ^9.1.11\n        \n            @opentelemetry/exporter-collector : ^0.9.0\n        \n            @opentelemetry/propagator-jaeger : ^0.8.0\n        \n            @opentelemetry/web : ^0.8.3\n        \n            body-parser : ^1.19.0\n        \n            concurrently : ^5.2.0\n        \n            ngx-highlight-js : ^9.0.0\n        \n            rxjs : ~6.5.4\n        \n            tslib : ^1.13.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Collector   (projects/.../opentelemetry-config.ts)\n                        \n                        \n                            Propagator   (projects/.../opentelemetry-config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n    \n        \n            \n                \n                    \n                        \n                        Collector\n                    \n                \n                        \n                            \n                                 jaeger\n                            \n                        \n                        \n                            \n                                Value : jaeger\n                            \n                        \n                        \n                            \n                                 zipkin\n                            \n                        \n                        \n                            \n                                Value : zipkin\n                            \n                        \n                        \n                            \n                                 otelcol\n                            \n                        \n                        \n                            \n                                Value : otelcol\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Propagator\n                    \n                \n                        \n                            \n                                 b3\n                            \n                        \n                        \n                            \n                                Value : B3Propagator\n                            \n                        \n                        \n                            \n                                 httpTrace\n                            \n                        \n                        \n                            \n                                Value : HttpTraceContext\n                            \n                        \n                        \n                            \n                                 composite\n                            \n                        \n                        \n                            \n                                Value : CompositePropagator\n                            \n                        \n                        \n                            \n                                 jaeger\n                            \n                        \n                        \n                            \n                                Value : JaegerPropagator\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            httpTextPropagatorServiceFactory   (projects/.../http-text-propagator.service.ts)\n                        \n                        \n                            spanExporterServiceFactory   (projects/.../span-exporter.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/opentelemetry-interceptor/src/lib/services/propagator/http-text-propagator.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            httpTextPropagatorServiceFactory\n                        \n                        \n                    \n                \n            \n            \n                \nhttpTextPropagatorServiceFactory(config, httpTraceContextPropagatorService, b3PropagatorService, compositePropagatorService, noopHttpTextPropagatorService, jaegerHttpTracePropagatorService)\n                \n            \n\n\n\n\n            \n                \n                    httpTextPropagatorServiceFactory\nProvide a factory to have a propagator service\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        config\n\n                                    \n                                \n                                \n                                    httpTraceContextPropagatorService\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        httpTraceContext\n\n                                    \n                                \n                                \n                                    b3PropagatorService\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        propagator\n\n                                    \n                                \n                                \n                                    compositePropagatorService\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        composite\n\n                                    \n                                \n                                \n                                    noopHttpTextPropagatorService\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        noop\n\n                                    \n                                \n                                \n                                    jaegerHttpTracePropagatorService\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/opentelemetry-interceptor/src/lib/services/exporter/span-exporter.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            spanExporterServiceFactory\n                        \n                        \n                    \n                \n            \n            \n                \nspanExporterServiceFactory(config, jaegerExporterService, otelcolExporterService, zipkinExporterService, consoleSpanExporter)\n                \n            \n\n\n\n\n            \n                \n                    Factory to return Service configured\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        config\n\n                                    \n                                \n                                \n                                    jaegerExporterService\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        jaeger\n\n                                    \n                                \n                                \n                                    otelcolExporterService\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        otelcol\n\n                                    \n                                \n                                \n                                    zipkinExporterService\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        zipkin\n\n                                    \n                                \n                                \n                                    consoleSpanExporter\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        console\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nOpenTelemetry Angular Interceptor\n@jufab/opentelemetry-angular-interceptor is an Angular Library to deploy OpenTelemetry in your Angular application\nThis library uses opentelemetry-js package\nOnly works for Angular >= 9.0.0\nMore info : https://jufab.github.io/opentelemetry-angular-interceptor/\n\n\nTable of contents\n\nOpenTelemetry Angular Interceptor\nTable of contents\nGetting started\nInstallation\nConfiguration\nExample global Configuration\nCommon Configuration\nOpenTelemetry-collector Configuration\nZipkin Collector Configuration\nJaeger Collector Configuration\nJaeger Propagator Configuration\n\n\nAngular Module\n\n\nHow it works\nExample\nRun\n[Optional] Result in OpenTelemtery-collector\n\n\nTroubleshoot\n\n\n\nGetting started\nInstallation\nWith npm :\nnpm install @jufab/opentelemetry-angular-interceptor @opentelemetry/web @opentelemetry/exporter-collector @opentelemetry/propagator-jaegerConfiguration\nUse the \"OpentelemetryConfig\" interface to configure the Tracer\nexport interface OpentelemetryConfig {\n  commonConfig: CommonCollectorConfig;\n  jaegerConfig?: JaegerCollectorConfig;\n  zipkinConfig?: ZipkinCollectorConfig;\n  otelcolConfig?: OtelCollectorConfig;\n}Example global Configuration\nFrom the example-app\nopentelemetryConfig: {\n    commonConfig: {\n      console: true, //(boolean) Display trace on console\n      production: false, //(boolean) Send trace with BatchSpanProcessor (true) or SimpleSpanProcessor (false) more info : https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-api#tracing\n      serviceName: 'example-app', //Service name send in trace\n      collector: Collector.otelcol, //Enum to specified the collector : OpenTelemetry Collector(otelcol), Zipkin (zipkin), Jaeger (jaeger)\n      propagator: Propagator.composite, // Enum to propagator : B3 (b3), HttpTraceContext (httpTrace), Jaeger Propagator (jaeger) and Composite that include b3, httpTrace and Jaeger (composite)\n      probabilitySampler: 0.7, //Samples a configurable percentage of traces, value between 0 to 1\n    },\n    otelcolConfig: {\n      url: 'http://localhost:9090/v1/trace', //URL of opentelemetry collector\n    },\n    zipkinConfig: {\n      url: 'http://localhost:9411/api/v2/spans', //url of zipkin collector\n    },\n    jaegerConfig: {\n      endpoint: 'http://localhost:14268/api/traces', // Url of Jaeger collector via HTTPSender\n    },\n    jaegerPropagatorConfig: {\n      customHeader: 'custom-header',\n    }\n  }\nCommon Configuration\n\nconsole: (boolean) Display trace on console if true\nproduction: (boolean)Send trace via BatchSpanProcessor (Async) or SimpleSpanProcessor (Sync) : It's recommend to use BatchSpanProcessor on Production.\nserviceName: (string) Service name in your trace\ncollector: (Enum) use Enum Collector (otelcol,zipkin,jaeger)\npropagator: (Enum) use Propagator Enum (b3,httpTrace,composite,jaeger)\n\nOpenTelemetry-collector Configuration\n\nurl: (string) url of opentelemetry collector (default : http://localhost:55678/v1/trace)\n\nZipkin Collector Configuration\n\nurl: (string) url of zipkin collector (default : http://localhost:9411/api/v2/spans)\n\nJaeger Collector Configuration\n\nendpoint: (string) url of jaeger collector (example : http://localhost:14268/api/traces)\n\nJaeger Propagator Configuration\n\ncustomHeader: (string) custom header\n\nAngular Module\nTo insert OpenTelemetryInterceptorModule, you can add in your application module (generally app.module.ts)\nimport { NgModule } from '@angular/core';\n...\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { OpenTelemetryInterceptorModule } from '@jufab/opentelemetry-angular-interceptor';\nimport { environment } from '../environments/environment';\n...\n\n@NgModule({\n  declarations: [AppComponent, ...],\n  imports: [\n    ...\n    HttpClientModule,\n    //Insert module OpenTelemetryInterceptorModule with configuration, HttpClientModule is used for interceptor\n    OpenTelemetryInterceptorModule.forRoot(environment.opentelemetryConfig),\n    ...\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}How it works\nThis library is based on HttpClientModule and the HTTP_INTERCEPTORS\nOpenTelemetryInterceptor implement an HttpInterceptor and the intercept method.\nThis implementation initialise a WebTracerProvider, create a Span and add header propagation in the current call.\n\nThe response body is adding by an event in span.\n\nExample\nThis project have an \"example-app\" as Angular application example.\nprojects/example-app\nYou can see how configure and insert this module.\nYou can althought test opentelemetry-angular-interceptor with this application.\nRun\nTo start this Example application, run command :\nnpm run start:complete-example-appand open the application at http://localhost:4200\n[Optional] Result in OpenTelemtery-collector\nIf you want to see the result in a collector *, there's a docker-compose available in this project.\nYou can start it with this command :\ndocker-compose -f projects/example-app/collector/docker-compose.yaml up -dGo to the jaeger application (http://localhost:16686) to see result.\nMore info about the collector here : https://github.com/open-telemetry/opentelemetry-collector\n\n* without an Agent or a Collector you can see an error in your browser about sending a \"trace\".\n\nTroubleshoot\n\n\n\nError\nFix\n\n\n\n\nerror TS2694: Namespace 'NodeJS' has no exported member 'Timeout'.\nNeed dependence @type/node >= 12.0.2\n\n\nerror TS1086: An accessor cannot be declared in an ambient context.\nNeed dependence typescript >= 3.6.0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.You may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\nEND OF TERMS AND CONDITIONS\nAPPENDIX: How to apply the Apache License to your work.\nTo apply the Apache License to your work, attach the following\nboilerplate notice, with the fields enclosed by brackets \"[]\"\nreplaced with your own identifying information. (Don't include\nthe brackets!)  The text should be enclosed in the appropriate\ncomment syntax for the file format. We also recommend that a\nfile or class name and description of purpose be included on the\nsame \"printed page\" as the copyright notice for easier\nidentification within third-party archives.\nCopyright [yyyy] [name of copyright owner]\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        OpenTelemetryInterceptorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTask for opentelemetry-angular-interceptor\nTodo in project...\nTodo\n\n Add in issue Github this todo list  \n Add more configuration for OpenTelemetry-collector : See here  \n Zipkin  \n Add Zipkin exporter (when it's available)  \n Add more configuration for Zipkin : here  \n\n\n Jaeger  \n Add Jaeger exporter (when it's available)  \n Add more configuration for Jaeger : here  \n\n\n Prepare correlation-context here  \n\nIn Progress\nDone ✓\n\n Add sampler in configuration => here  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            OpenTelemetryInjectConfig   (projects/.../opentelemetry-config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            OpenTelemetryInjectConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('opentelemetry.config')\n                        \n                    \n\n                \n                    \n                        OpenTelemetryInjectConfig : Config injection \n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
