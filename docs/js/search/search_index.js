var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/B3PropagatorConfig.html",[0,0.554,1,1.247]],["body/interfaces/B3PropagatorConfig.html",[0,0.976,1,2.142,2,0.92,3,0.183,4,0.183,5,0.136,6,0.136,7,1.123,8,1.123,9,0.471,10,1.806,11,0.437,12,1.26,13,0.85,14,2.289,15,2.375,16,0.543,17,0.026,18,1.995,19,2.074,20,1.589,21,1.534,22,1.638,23,1.748,24,1.761,25,1.26,26,0.275,27,1.123,28,0.183,29,1.123,30,1.892,31,1.761,32,0.664,33,0.92,34,1.295,35,1.205,36,1.123,37,0.44,38,1.534,39,1.534,40,0.506,41,0.982,42,1.107,43,1.697,44,2.512,45,1.534,46,1.05,47,1.295,48,1.295,49,1.761,50,1.534,51,0.982,52,1.05,53,1.226,54,1.123,55,1.205,56,1.534,57,1.205,58,0.982,59,1.866,60,1.761,61,1.395,62,1.295,63,1.761,64,1.205,65,1.534,66,1.205,67,1.295,68,1.866,69,1.761,70,1.205,71,2.081,72,1.205,73,1.205,74,1.205,75,1.642,76,1.205,77,1.205,78,1.205,79,1.123,80,1.205,81,1.205,82,1.205,83,1.205,84,0.982,85,1.123,86,1.205,87,1.205,88,1.123,89,1.205,90,1.123,91,0.92,92,1.534,93,1.995,94,1.205,95,1.985,96,1.995,97,1.205,98,1.697,99,0.92,100,0.92,101,1.534,102,1.205,103,1.295,104,2.122,105,0.862,106,1.123,107,0.909,108,1.761,109,1.642,110,1.642,111,0.971,112,0.709,113,1.436,114,1.697,115,0.699,116,1.205,117,1.436,118,1.205,119,0.982,120,1.205,121,0.982,122,1.205,123,0.01,124,0.014,125,0.01]],["title/modules/B3PropagatorModule.html",[126,1.168,127,2.298]],["body/modules/B3PropagatorModule.html",[3,0.33,4,0.33,5,0.245,6,0.245,17,0.026,26,0.384,28,0.33,37,0.33,123,0.017,124,0.021,125,0.017,127,3.918,128,1.551,129,3.625,130,3.258,131,2.965,132,2.272,133,2.803,134,2.022,135,3.566,136,2.965,137,2.722,138,2.432,139,2.022,140,1.768,141,2.022,142,1.768,143,1.768,144,2.022,145,0.847]],["title/injectables/B3PropagatorService.html",[135,2.091,146,0.738]],["body/injectables/B3PropagatorService.html",[1,2.315,3,0.225,4,0.225,5,0.167,6,0.298,9,0.91,10,1.366,11,0.536,12,1.457,13,0.983,15,2.146,16,1.049,17,0.026,18,2.371,19,2.218,20,2.168,21,2.294,23,1.916,25,1.457,26,0.348,28,0.225,32,0.815,37,0.225,40,0.855,99,1.555,107,1.404,111,0.815,112,1.478,115,0.496,123,0.012,124,0.016,125,0.012,129,4.4,130,3.955,135,3.432,136,2.022,139,1.379,145,0.578,146,0.983,147,1.379,148,1.856,149,2.785,150,3.06,151,3.865,152,3.153,153,1.28,154,3.894,155,4.565,156,3.15,157,2.172,158,1.856,159,1.478,160,4.565,161,1.774,162,4.565,163,3.314,164,3.06,165,4.421,166,1.28,167,5.901,168,3.314,169,1.994,170,3.304,171,1.589,172,1.899,173,2.221,174,1.589,175,1.379,176,1.379,177,1.205,178,2.188,179,2.221,180,3.314,181,3.314,182,3.314,183,3.314,184,3.314,185,3.314]],["title/interfaces/BatchSpanProcessorConfig.html",[0,0.554,68,1.247]],["body/interfaces/BatchSpanProcessorConfig.html",[0,0.963,1,1.945,2,0.875,3,0.174,4,0.174,5,0.13,6,0.13,7,1.068,8,1.068,9,0.447,10,1.78,11,0.415,12,1.214,13,1.281,14,1.145,15,2.44,16,1.006,17,0.026,18,1.479,19,1.648,20,1.296,21,0.998,22,1.446,23,1.543,24,1.145,25,0.82,26,0.267,27,1.068,28,0.174,29,1.068,30,1.824,31,1.697,32,0.632,33,0.875,34,1.231,35,1.145,36,1.068,37,0.443,38,1.479,39,1.479,40,0.481,41,0.934,42,1.066,43,1.648,44,2.476,45,1.479,46,0.998,47,1.231,48,1.231,49,1.697,50,1.479,51,0.934,52,0.998,53,1.19,54,1.068,55,1.145,56,1.479,57,1.145,58,0.934,59,1.822,60,1.697,61,1.355,62,1.231,63,1.697,64,1.145,65,1.479,66,1.145,67,1.824,68,1.945,69,2.234,70,1.697,71,2.498,72,1.697,73,1.697,74,1.697,75,2.33,76,1.697,77,1.697,78,1.697,79,2.084,80,1.697,81,1.697,82,1.697,83,1.697,84,1.383,85,2.084,86,1.697,87,1.697,88,1.582,89,1.697,90,2.084,91,0.875,92,1.479,93,1.947,94,1.145,95,1.945,96,1.947,97,1.145,98,1.648,99,0.875,100,0.875,101,1.479,102,1.145,103,1.231,104,2.079,105,0.82,106,1.068,107,0.876,108,1.697,109,1.582,110,1.582,111,0.936,112,0.675,113,1.383,114,1.648,115,0.678,116,1.145,117,1.383,118,1.145,119,0.934,120,1.145,121,0.934,122,1.145,123,0.009,124,0.014,125,0.009]],["title/interfaces/CommonCollectorConfig.html",[0,0.554,38,1.332]],["body/interfaces/CommonCollectorConfig.html",[0,0.957,1,1.929,2,0.857,3,0.171,4,0.171,5,0.127,6,0.127,7,1.047,8,1.047,9,0.439,10,1.77,11,0.407,12,1.196,13,1.325,14,1.123,15,2.382,16,1.117,17,0.026,18,1.457,19,1.628,20,1.277,21,0.979,22,1.429,23,1.525,24,1.123,25,0.803,26,0.264,27,1.047,28,0.171,29,1.047,30,1.797,31,2.212,32,0.619,33,0.857,34,1.207,35,1.123,36,1.559,37,0.434,38,1.74,39,2.161,40,0.702,41,1.363,42,1.391,43,2.152,44,2.724,45,2.161,46,1.457,47,1.797,48,1.797,49,2.48,50,1.928,51,1.363,52,1.457,53,1.303,54,2.063,55,1.672,56,1.74,57,2.212,58,0.916,59,1.804,60,1.672,61,1.339,62,1.207,63,1.672,64,1.123,65,1.457,66,1.123,67,1.207,68,1.804,69,1.672,70,1.123,71,1.997,72,1.123,73,1.123,74,1.123,75,1.559,76,1.123,77,1.123,78,1.123,79,1.047,80,1.123,81,1.123,82,1.123,83,1.123,84,0.916,85,1.047,86,1.123,87,1.123,88,1.047,89,1.123,90,1.047,91,0.857,92,1.457,93,1.928,94,1.123,95,1.929,96,1.928,97,1.123,98,1.628,99,0.857,100,0.857,101,1.457,102,1.123,103,1.207,104,2.061,105,0.803,106,1.047,107,0.863,108,1.672,109,1.559,110,1.559,111,0.922,112,0.661,113,1.363,114,1.628,115,0.67,116,1.123,117,1.363,118,1.123,119,0.916,120,1.123,121,0.916,122,1.123,123,0.009,124,0.013,125,0.009]],["title/modules/CompositePropagatorModule.html",[126,1.168,186,2.298]],["body/modules/CompositePropagatorModule.html",[3,0.33,4,0.33,5,0.245,6,0.245,17,0.026,26,0.384,28,0.33,37,0.33,123,0.017,124,0.021,125,0.017,128,1.551,131,2.965,132,2.272,133,2.803,134,2.022,137,2.722,138,2.432,139,2.022,140,1.768,141,2.022,142,1.768,143,1.768,144,2.022,145,0.847,186,3.918,187,3.625,188,3.625,189,3.918,190,3.625]],["title/injectables/CompositePropagatorService.html",[146,0.738,189,2.298]],["body/injectables/CompositePropagatorService.html",[3,0.262,4,0.262,5,0.195,6,0.285,9,0.674,11,0.625,13,0.832,16,0.777,17,0.026,26,0.384,28,0.262,32,0.951,37,0.262,40,0.724,42,1.679,115,0.579,123,0.014,124,0.018,125,0.014,130,2.592,135,3.891,136,2.359,137,3.161,139,1.609,145,0.674,146,1.09,147,1.609,148,2.165,152,2.918,153,1.42,156,3.354,157,2.492,159,1.33,161,1.503,166,1.084,169,1.912,170,3.481,171,1.854,172,2.106,175,1.609,176,1.609,177,1.406,187,4.21,188,4.21,189,4.015,191,3.866,192,3.965,193,3.965,194,3.866,195,3.274,196,6.378,197,2.592,198,2.053,199,2.617,200,2.592,201,1.999,202,2.592,203,3.866,204,3.866,205,3.866,206,3.274,207,3.866,208,3.866,209,3.866]],["title/modules/ConsoleSpanExporterModule.html",[126,1.168,210,2.298]],["body/modules/ConsoleSpanExporterModule.html",[3,0.329,4,0.329,5,0.245,6,0.245,17,0.026,26,0.384,28,0.329,37,0.329,43,1.764,53,1.534,123,0.017,124,0.021,125,0.017,128,1.548,132,2.269,133,2.799,134,2.017,140,1.764,141,2.017,142,1.764,143,1.764,144,2.017,145,0.845,210,3.913,211,3.616,212,3.616,213,3.913,214,3.616,215,2.799,216,2.715]],["title/injectables/ConsoleSpanExporterService.html",[146,0.738,213,2.298]],["body/injectables/ConsoleSpanExporterService.html",[3,0.309,4,0.309,5,0.229,6,0.283,9,0.792,11,0.735,17,0.026,22,1.791,26,0.359,28,0.309,37,0.309,53,1.67,115,0.681,123,0.016,124,0.02,125,0.016,145,0.792,146,1.208,147,1.892,153,1.574,159,1.195,166,1.275,169,2.029,175,1.892,176,1.892,177,1.654,211,4.185,213,4.261,216,2.546,217,3.048,218,2.691,219,4.261,220,3.85,221,4.741,222,4.378,223,2.691,224,2.351]],["title/interfaces/CustomSpan.html",[0,0.554,33,1.168]],["body/interfaces/CustomSpan.html",[0,1.033,2,1.434,3,0.286,4,0.286,5,0.212,6,0.27,9,0.932,11,0.681,13,0.906,16,0.846,17,0.026,26,0.316,32,1.036,33,1.822,37,0.286,40,0.788,52,2.404,53,1.829,61,1.952,98,2.249,123,0.015,124,0.019,125,0.015,153,1.499,159,1.106,161,1.636,166,1.18,177,1.945,178,2.818,225,4.528,226,3.564,227,4.528,228,3.988,229,4.528,230,3.773,231,4.865,232,4.865,233,4.612,234,4.209,235,4.528,236,4.528,237,2.821]],["title/modules/HttpTraceContextPropagatorModule.html",[126,1.168,238,2.298]],["body/modules/HttpTraceContextPropagatorModule.html",[3,0.325,4,0.325,5,0.242,6,0.242,17,0.026,26,0.382,28,0.325,37,0.325,42,1.747,123,0.017,124,0.021,125,0.017,128,1.529,131,2.924,132,2.253,133,2.779,134,1.994,137,2.683,138,2.411,139,1.994,140,1.743,141,1.994,142,1.743,143,1.743,144,1.994,145,0.835,192,3.536,198,1.743,199,3.221,200,3.212,238,3.885,239,3.574]],["title/injectables/HttpTraceContextPropagatorService.html",[146,0.738,192,2.091]],["body/injectables/HttpTraceContextPropagatorService.html",[3,0.304,4,0.304,5,0.226,6,0.28,9,0.78,11,0.724,17,0.026,26,0.373,28,0.304,32,1.102,37,0.304,42,1.773,115,0.67,123,0.016,124,0.02,125,0.016,139,1.862,145,0.78,146,1.197,147,1.862,148,2.507,153,1.559,156,3.541,159,1.176,166,1.255,169,2.018,170,3.641,172,2.313,175,1.862,176,1.862,177,1.628,192,3.858,197,3.001,199,3.269,200,3.726,239,4.145,240,4.477,241,5.611]],["title/interfaces/IExporter.html",[0,0.554,223,1.643]],["body/interfaces/IExporter.html",[0,0.993,2,1.577,3,0.314,4,0.314,5,0.234,6,0.286,9,0.807,11,0.749,17,0.026,22,1.811,26,0.335,27,1.926,28,0.314,37,0.385,99,1.933,113,1.684,114,1.684,115,0.693,123,0.017,124,0.02,125,0.017,153,1.591,159,1.216,166,1.298,169,1.477,215,2.219,218,3.147,219,4.288,222,4.536,223,2.721,224,2.393,242,3.452,243,4.629,244,4.232,245,5.675,246,3.919]],["title/interfaces/IPropagator.html",[0,0.554,172,1.426]],["body/interfaces/IPropagator.html",[0,0.997,2,1.591,3,0.317,4,0.317,5,0.236,6,0.288,9,0.814,11,0.756,17,0.026,26,0.337,27,1.943,28,0.317,32,1.149,37,0.387,99,1.944,105,2.101,113,1.699,114,1.699,115,0.7,123,0.017,124,0.021,125,0.017,138,1.943,153,1.6,156,3.593,159,1.227,166,1.31,169,1.491,170,3.45,172,2.374,244,4.255,247,3.484,248,4.671,249,4.832,250,5.707,251,3.955]],["title/interfaces/InstrumentationConfig.html",[0,0.554,59,1.247]],["body/interfaces/InstrumentationConfig.html",[0,0.97,1,1.966,2,0.898,3,0.179,4,0.179,5,0.133,6,0.133,7,1.097,8,1.097,9,0.46,10,1.794,11,0.427,12,1.238,13,1.217,14,1.177,15,2.322,16,0.925,17,0.026,18,1.508,19,1.674,20,1.321,21,1.025,22,1.469,23,1.567,24,1.177,25,0.842,26,0.272,27,1.097,28,0.179,29,1.097,30,1.86,31,1.73,32,0.649,33,0.898,34,1.265,35,1.177,36,1.097,37,0.438,38,1.508,39,1.508,40,0.494,41,0.959,42,1.088,43,1.674,44,2.706,45,1.508,46,1.025,47,1.265,48,1.265,49,1.73,50,1.508,51,0.959,52,1.025,53,1.209,54,1.097,55,1.177,56,1.508,57,1.177,58,1.411,59,1.966,60,2.522,61,1.691,62,1.86,63,2.522,64,1.73,65,2.198,66,1.73,67,1.265,68,1.845,69,1.73,70,1.177,71,2.053,72,1.177,73,1.177,74,1.177,75,1.614,76,1.177,77,1.177,78,1.177,79,1.097,80,1.177,81,1.177,82,1.177,83,1.177,84,0.959,85,1.097,86,1.177,87,1.177,88,1.097,89,1.177,90,1.097,91,0.898,92,1.508,93,1.972,94,1.177,95,1.966,96,1.972,97,1.177,98,1.674,99,0.898,100,0.898,101,1.508,102,1.177,103,1.265,104,2.102,105,0.842,106,1.097,107,0.893,108,1.73,109,1.614,110,1.614,111,0.955,112,0.693,113,1.411,114,1.674,115,0.689,116,1.177,117,1.411,118,1.177,119,0.959,120,1.177,121,0.959,122,1.177,123,0.009,124,0.014,125,0.009]],["title/injectables/InstrumentationService.html",[146,0.738,252,2.091]],["body/injectables/InstrumentationService.html",[3,0.172,4,0.172,5,0.128,6,0.305,9,0.655,11,0.409,12,1.201,13,1.07,16,1.068,17,0.026,22,1.201,23,1.281,26,0.369,28,0.172,37,0.172,40,0.931,41,1.368,43,2.098,44,2.399,45,2.165,53,1.306,58,2.026,59,2.026,61,1.125,64,1.678,65,0.983,66,1.678,105,0.807,107,1.145,111,0.622,112,1.557,115,0.923,123,0.009,124,0.014,125,0.009,138,1.052,145,0.441,146,0.81,147,1.052,152,3.476,153,1.055,157,1.868,158,1.417,159,1.557,161,1.933,166,1.394,171,1.213,172,2.068,174,1.213,175,1.052,176,1.052,178,2.765,179,1.696,198,0.92,215,1.213,218,2.384,221,2.805,223,2.841,224,1.308,230,1.543,252,3.033,253,2.142,254,1.945,255,4.716,256,5.314,257,5.569,258,3.762,259,3.01,260,4.972,261,3.185,262,3.802,263,4.21,264,4.21,265,3.762,266,3.762,267,2.53,268,3.762,269,3.185,270,3.708,271,2.53,272,4.21,273,3.762,274,2.53,275,4.153,276,2.521,277,2.521,278,2.53,279,2.53,280,3.349,281,2.805,282,3.349,283,2.521,284,4.49,285,2.53,286,4.49,287,3.349,288,2.53,289,1.887,290,1.887,291,1.887,292,1.887,293,3.762,294,3.708,295,1.696,296,1.887,297,3.762,298,1.887,299,1.696,300,2.53,301,2.53,302,2.142,303,2.142,304,2.53,305,2.53,306,2.53,307,2.53,308,2.53,309,2.142,310,2.142,311,2.53,312,3.762,313,2.53,314,3.762,315,2.142,316,2.53,317,2.53,318,4.49,319,2.53,320,2.53,321,2.53]],["title/modules/JaegerHttpTracePropagatorModule.html",[126,1.168,322,2.298]],["body/modules/JaegerHttpTracePropagatorModule.html",[3,0.325,4,0.325,5,0.242,6,0.242,17,0.026,26,0.382,28,0.325,37,0.325,42,1.747,123,0.017,124,0.021,125,0.017,128,1.529,131,2.924,132,2.253,133,2.779,134,1.994,137,2.683,138,2.411,139,1.994,140,1.743,141,1.994,142,1.743,143,1.743,144,1.994,145,0.835,193,3.536,198,2.266,201,2.478,202,3.212,322,3.885,323,3.574]],["title/injectables/JaegerHttpTracePropagatorService.html",[146,0.738,193,2.091]],["body/injectables/JaegerHttpTracePropagatorService.html",[3,0.258,4,0.258,5,0.192,6,0.3,9,0.874,11,0.616,12,1.6,13,0.82,15,1.823,16,1.007,17,0.026,20,1.707,26,0.375,28,0.258,32,0.937,37,0.258,40,0.713,42,1.842,95,1.823,106,2.331,107,1.463,111,0.937,112,1.564,115,0.57,123,0.014,124,0.018,125,0.014,139,1.585,145,0.664,146,1.079,147,1.585,148,2.133,152,2.897,153,1.406,156,3.334,157,2.331,158,2.133,159,1.472,161,1.481,166,1.068,169,1.9,170,3.464,171,1.826,172,2.086,173,2.553,174,1.826,175,1.585,176,1.585,177,1.385,178,1.826,179,2.553,193,3.633,195,3.225,198,2.39,201,1.969,202,3.991,259,2.553,323,4.44,324,5.013,325,6.187,326,2.553,327,3.809,328,3.809,329,3.809]],["title/interfaces/JaegerPropagatorConfig.html",[0,0.554,104,1.332]],["body/interfaces/JaegerPropagatorConfig.html",[0,0.98,1,1.995,2,0.931,3,0.185,4,0.185,5,0.138,6,0.138,7,1.137,8,1.137,9,0.476,10,1.812,11,0.442,12,1.271,13,0.857,14,1.219,15,2.38,16,0.549,17,0.026,18,1.548,19,1.708,20,1.6,21,1.062,22,1.499,23,1.6,24,1.219,25,0.872,26,0.277,27,1.137,28,0.185,29,1.137,30,1.909,31,1.776,32,0.672,33,0.931,34,1.31,35,1.219,36,1.137,37,0.44,38,1.548,39,1.548,40,0.512,41,0.994,42,1.116,43,1.708,44,2.52,45,1.548,46,1.062,47,1.31,48,1.31,49,1.776,50,1.548,51,0.994,52,1.062,53,1.234,54,1.137,55,1.219,56,1.548,57,1.219,58,0.994,59,1.877,60,1.776,61,1.405,62,1.31,63,1.776,64,1.219,65,1.548,66,1.219,67,1.31,68,1.877,69,1.776,70,1.219,71,2.095,72,1.219,73,1.219,74,1.219,75,1.656,76,1.219,77,1.219,78,1.219,79,1.137,80,1.219,81,1.219,82,1.219,83,1.219,84,0.994,85,1.137,86,1.219,87,1.219,88,1.137,89,1.219,90,1.137,91,0.931,92,1.548,93,2.006,94,1.219,95,2.082,96,2.006,97,1.219,98,1.708,99,0.931,100,0.931,101,1.548,102,1.219,103,1.31,104,2.298,105,1.271,106,2.147,107,0.917,108,1.776,109,1.656,110,1.656,111,0.98,112,0.718,113,1.448,114,1.708,115,0.703,116,1.219,117,1.448,118,1.219,119,0.994,120,1.219,121,0.994,122,1.219,123,0.01,124,0.014,125,0.01]],["title/modules/NoopTextMapPropagatorModule.html",[126,1.168,330,2.556]],["body/modules/NoopTextMapPropagatorModule.html",[3,0.325,4,0.325,5,0.242,6,0.242,17,0.026,26,0.382,28,0.325,37,0.325,123,0.017,124,0.021,125,0.017,128,1.529,131,2.924,132,2.253,133,2.779,134,1.994,137,2.683,138,2.411,139,1.994,140,1.743,141,1.994,142,1.743,143,1.743,144,1.994,145,0.835,198,1.743,330,4.322,331,3.574,332,4.176,333,3.574,334,4.322,335,3.885,336,4.792]],["title/injectables/NoopTextMapPropagatorService.html",[146,0.738,335,2.298]],["body/injectables/NoopTextMapPropagatorService.html",[3,0.306,4,0.306,5,0.228,6,0.282,9,0.787,11,0.731,17,0.026,26,0.358,28,0.306,32,1.111,37,0.306,115,0.676,123,0.016,124,0.02,125,0.016,139,1.879,145,0.787,146,1.203,147,1.879,148,2.529,153,1.567,156,3.552,159,1.187,166,1.266,169,2.024,170,3.65,172,2.325,175,1.879,176,1.879,177,1.643,198,2.033,331,4.168,332,4.252,333,4.168,334,4.168,335,3.747,337,5.589,338,4.516,339,6.641]],["title/interfaces/OpenTelemetryConfig.html",[0,0.554,107,0.789]],["body/interfaces/OpenTelemetryConfig.html",[0,0.96,1,2.277,2,0.867,3,0.173,4,0.173,5,0.128,6,0.128,7,1.059,8,1.059,9,0.444,10,1.729,11,0.412,12,1.206,13,1.364,14,1.135,15,2.305,16,1.161,17,0.026,18,1.469,19,1.639,20,1.287,21,0.99,22,1.438,23,1.535,24,1.135,25,0.812,26,0.266,27,1.059,28,0.173,29,1.059,30,1.812,31,1.686,32,0.626,33,0.867,34,1.22,35,1.135,36,1.059,37,0.435,38,1.939,39,1.469,40,0.477,41,0.926,42,1.06,43,1.639,44,2.47,45,1.469,46,0.99,47,1.22,48,1.22,49,1.686,50,1.469,51,0.926,52,0.99,53,1.184,54,1.059,55,1.135,56,1.469,57,1.135,58,0.926,59,2.244,60,1.686,61,1.348,62,1.22,63,1.686,64,1.135,65,1.469,66,1.135,67,1.22,68,2.244,69,1.686,70,1.135,71,2.01,72,1.135,73,1.135,74,1.135,75,1.572,76,1.135,77,1.135,78,1.135,79,1.059,80,1.135,81,1.135,82,1.135,83,1.135,84,0.926,85,1.059,86,1.135,87,1.135,88,1.059,89,1.135,90,1.059,91,0.867,92,1.939,93,1.939,94,1.135,95,1.938,96,1.939,97,1.135,98,1.639,99,0.867,100,0.867,101,1.939,102,1.135,103,1.22,104,2.434,105,0.812,106,1.059,107,1.148,108,2.49,109,2.322,110,2.322,111,0.93,112,0.669,113,1.374,114,1.639,115,0.675,116,1.135,117,1.374,118,1.135,119,0.926,120,1.135,121,0.926,122,1.135,123,0.009,124,0.014,125,0.009]],["title/interceptors/OpenTelemetryHttpInterceptor.html",[340,1.919,341,2.298]],["body/interceptors/OpenTelemetryHttpInterceptor.html",[3,0.111,4,0.111,5,0.083,6,0.296,9,0.809,10,1.174,11,0.265,12,0.855,13,1.171,15,1.236,16,1.063,17,0.026,20,1.337,22,1.085,23,0.913,25,1.085,26,0.356,28,0.111,29,1.633,32,0.659,33,1.741,35,0.731,37,0.111,40,0.991,41,0.975,43,0.975,45,1.042,50,1.042,51,1.236,52,1.526,53,1.641,54,1.414,61,0.802,75,0.682,79,0.682,85,0.682,90,0.682,95,0.975,98,0.975,99,0.913,105,1.381,107,0.904,111,0.403,112,1.288,114,1.689,115,0.792,117,1.236,119,0.596,121,0.596,123,0.006,124,0.01,125,0.006,134,0.682,138,0.682,145,0.592,146,0.577,152,3.372,153,0.751,157,1.633,158,0.918,159,1.52,161,1.905,164,1.797,166,1.483,169,1.482,171,0.786,172,1.633,174,1.285,175,0.682,176,1.115,177,0.596,178,2.451,197,1.099,198,0.596,199,1.386,215,0.786,218,1.285,221,1.999,223,1.882,224,0.848,227,2.269,228,2.927,230,3.838,231,4.24,232,3.227,233,3.227,237,1.099,255,3.664,261,3.324,262,3.324,263,3.324,264,3.324,270,1.999,275,2.927,276,3.285,277,1.797,280,2.535,281,1.999,282,2.535,283,1.797,287,2.927,299,1.099,302,1.388,303,1.388,309,2.269,310,1.388,315,1.388,326,1.099,340,1.501,341,1.797,342,1.64,343,4.974,344,1.388,345,2.269,346,2.68,347,2.68,348,3.925,349,2.68,350,3.399,351,2.878,352,2.68,353,4.901,354,2.68,355,1.64,356,1.64,357,1.64,358,4.644,359,2.68,360,2.68,361,1.64,362,2.269,363,4.644,364,2.68,365,3.925,366,2.68,367,1.64,368,3.324,369,2.68,370,2.68,371,2.68,372,2.68,373,1.64,374,2.269,375,2.68,376,1.64,377,1.64,378,2.68,379,2.269,380,1.64,381,1.64,382,1.64,383,4.644,384,3.925,385,1.64,386,2.68,387,1.999,388,1.797,389,3.399,390,1.64,391,1.64,392,1.388,393,3.925,394,1.64,395,2.68,396,2.269,397,1.64,398,1.64,399,1.388,400,1.64,401,3.925,402,2.68,403,1.64,404,1.64,405,2.68,406,2.68,407,2.68,408,1.64,409,1.999,410,1.64,411,1.64,412,1.64,413,1.388,414,1.64,415,1.64,416,2.68,417,1.64,418,1.64,419,1.64,420,1.64,421,2.68,422,1.64,423,1.64,424,1.64,425,2.68,426,1.388,427,1.64,428,1.223,429,1.223,430,1.64,431,1.64,432,1.64,433,1.64,434,1.64,435,1.999,436,2.68,437,2.68,438,2.68,439,2.68,440,2.68,441,1.64,442,2.68,443,1.64,444,1.64,445,2.68,446,1.999,447,1.64,448,2.68,449,1.64,450,1.64,451,1.64,452,1.64,453,1.64,454,1.64,455,1.64,456,1.64,457,1.64,458,1.64,459,1.64,460,1.64,461,1.64,462,1.64,463,1.64,464,2.68,465,1.64,466,1.64,467,1.64,468,1.64,469,1.64,470,1.64,471,1.64,472,1.64,473,1.64,474,1.64,475,1.64,476,1.64,477,1.64,478,1.64,479,3.399,480,1.64,481,1.64,482,3.399,483,1.64,484,1.64,485,1.64,486,1.64,487,1.64,488,1.64,489,1.64,490,1.64,491,2.68,492,1.64,493,1.64,494,1.64,495,1.64,496,1.64,497,1.64,498,1.64,499,1.64,500,1.64]],["title/modules/OpenTelemetryInterceptorModule.html",[126,1.168,501,2.298]],["body/modules/OpenTelemetryInterceptorModule.html",[3,0.286,4,0.286,5,0.213,6,0.27,13,1.266,16,0.848,17,0.026,19,1.534,26,0.377,28,0.286,37,0.286,40,0.79,84,1.534,107,1.425,111,1.318,112,1.546,115,0.632,123,0.015,124,0.019,125,0.015,128,1.346,132,2.287,140,1.534,141,1.755,142,1.534,143,1.948,144,1.755,145,0.735,153,1.183,154,3.993,157,1.755,159,1.108,161,1.64,166,1.183,169,1.346,174,2.022,237,2.827,259,2.827,277,2.827,341,3.589,501,4.282,502,5.355,503,4.218,504,3.571,505,4.534,506,4.218,507,4.982,508,4.534,509,4.534,510,4.534,511,4.218,512,4.218,513,4.534,514,3.571,515,2.827,516,3.571,517,3.571,518,3.145,519,3.571]],["title/modules/OtelColExporterModule.html",[126,1.168,520,2.298]],["body/modules/OtelColExporterModule.html",[3,0.331,4,0.331,5,0.246,6,0.246,17,0.026,26,0.384,28,0.331,37,0.331,123,0.018,124,0.021,125,0.018,128,1.555,132,2.276,133,2.807,134,2.027,140,1.772,141,2.027,142,1.772,143,1.772,144,2.027,145,0.849,212,3.633,214,3.633,215,2.807,216,2.728,520,3.924,521,3.633,522,3.924,523,3.633]],["title/interfaces/OtelCollectorConfig.html",[0,0.554,92,1.332]],["body/interfaces/OtelCollectorConfig.html",[0,0.97,1,1.966,2,0.898,3,0.179,4,0.179,5,0.133,6,0.133,7,1.097,8,1.097,9,0.46,10,1.794,11,0.427,12,1.238,13,1.217,14,1.177,15,2.366,16,0.925,17,0.026,18,1.508,19,1.674,20,1.321,21,1.025,22,1.619,23,1.728,24,1.177,25,0.842,26,0.272,27,1.097,28,0.179,29,1.097,30,2.433,31,1.73,32,0.649,33,0.898,34,1.265,35,1.177,36,1.097,37,0.438,38,1.508,39,1.508,40,0.494,41,0.959,42,1.088,43,1.674,44,2.495,45,1.508,46,1.025,47,1.265,48,1.265,49,1.73,50,1.508,51,0.959,52,1.025,53,1.209,54,1.097,55,1.177,56,1.789,57,1.177,58,0.959,59,1.845,60,1.73,61,1.377,62,1.265,63,1.73,64,1.177,65,1.508,66,1.177,67,1.265,68,1.845,69,1.73,70,1.177,71,2.053,72,1.177,73,1.177,74,1.177,75,1.614,76,1.177,77,1.177,78,1.177,79,1.097,80,1.177,81,1.177,82,1.177,83,1.177,84,0.959,85,1.097,86,1.177,87,1.177,88,1.097,89,1.177,90,1.097,91,1.321,92,1.789,93,2.331,94,1.73,95,2.126,96,2.331,97,2.053,98,2.181,99,1.321,100,0.898,101,1.508,102,1.177,103,1.265,104,2.102,105,0.842,106,1.097,107,0.893,108,1.73,109,1.614,110,1.614,111,0.955,112,0.693,113,1.411,114,1.674,115,0.689,116,1.177,117,1.411,118,1.177,119,0.959,120,1.177,121,0.959,122,1.177,123,0.009,124,0.014,125,0.009]],["title/components/OtelWebTracerComponent.html",[254,1.772,524,2.091]],["body/components/OtelWebTracerComponent.html",[3,0.273,4,0.273,5,0.203,6,0.29,9,0.906,11,0.651,13,0.867,16,0.809,17,0.026,26,0.307,28,0.273,37,0.273,40,1.078,58,2.094,123,0.014,124,0.019,125,0.014,145,0.702,153,1.457,157,2.395,159,1.366,161,1.565,166,1.129,177,1.891,178,1.931,252,4.099,254,3.392,270,3.876,272,4.401,276,3.484,524,3.711,525,5.198,526,4.027,527,4.027,528,4.874,529,4.293,530,3.409,531,5.332,532,4.401,533,5.756,534,4.027,535,5.756,536,6.083,537,4.027,538,4.027,539,4.027,540,3.409,541,4.027,542,4.027,543,4.027,544,3.003,545,5.198,546,5.198,547,4.027,548,6.083,549,4.027,550,4.027,551,4.027]],["title/modules/OtelWebTracerModule.html",[126,1.168,552,2.091]],["body/modules/OtelWebTracerModule.html",[3,0.273,4,0.273,5,0.203,6,0.262,13,1.239,16,0.809,17,0.026,26,0.372,28,0.273,37,0.273,40,0.754,84,2.094,107,1.401,111,1.279,112,1.512,115,0.603,123,0.014,124,0.019,125,0.014,126,1.371,128,1.285,132,2.238,140,2.094,142,1.891,143,1.464,145,0.702,153,1.129,154,3.876,157,1.675,159,1.058,161,1.565,166,1.129,169,1.285,174,1.931,252,3.171,259,2.699,504,3.409,505,4.401,507,4.874,508,4.401,513,4.401,514,3.409,515,2.699,516,3.409,517,3.409,518,3.003,519,3.409,524,4.186,529,3.003,540,3.409,544,3.003,552,4.133,553,2.457,554,3.003,555,3.409,556,3.409,557,3.409,558,4.401,559,3.003,560,3.003,561,5.198,562,4.027,563,4.027,564,4.027,565,4.027]],["title/injectables/OtelcolExporterService.html",[146,0.738,522,2.298]],["body/injectables/OtelcolExporterService.html",[3,0.264,4,0.264,5,0.197,6,0.303,9,0.887,10,1.522,11,0.63,12,1.624,13,1.095,16,1.022,17,0.026,26,0.368,28,0.264,37,0.264,39,1.514,40,0.73,91,1.327,93,1.514,96,1.514,98,1.417,107,1.472,109,2.357,111,0.959,112,1.578,115,0.583,123,0.014,124,0.018,125,0.014,145,0.987,146,1.095,147,1.621,152,2.929,153,1.427,157,2.499,158,2.182,159,1.489,161,1.514,166,1.092,169,1.917,171,1.868,174,1.868,175,1.621,176,1.621,177,1.417,178,1.868,216,2.182,217,2.611,219,4.026,222,3.798,223,2.439,224,2.014,413,3.299,521,4.479,522,4.026,566,5.088,567,3.896,568,6.007,569,5.088,570,5.088,571,3.896,572,3.896,573,2.611,574,3.896,575,3.299,576,3.896,577,3.896,578,3.896,579,3.896]],["title/interfaces/ZipkinCollectorConfig.html",[0,0.554,101,1.332]],["body/interfaces/ZipkinCollectorConfig.html",[0,0.975,1,1.98,2,0.914,3,0.182,4,0.182,5,0.135,6,0.135,7,1.116,8,1.116,9,0.467,10,1.803,11,0.434,12,1.254,13,1.101,14,1.197,15,2.373,16,1.028,17,0.026,18,1.527,19,1.69,20,1.338,21,1.043,22,1.633,23,1.742,24,1.197,25,0.856,26,0.274,27,1.116,28,0.182,29,1.116,30,1.883,31,1.752,32,0.66,33,0.914,34,1.286,35,1.197,36,1.116,37,0.439,38,1.527,39,1.527,40,0.502,41,0.976,42,1.101,43,1.69,44,2.507,45,1.527,46,1.043,47,1.286,48,1.286,49,1.752,50,1.527,51,0.976,52,1.043,53,1.221,54,1.116,55,1.197,56,1.527,57,1.197,58,0.976,59,1.86,60,1.752,61,1.39,62,1.286,63,1.752,64,1.197,65,1.527,66,1.197,67,1.286,68,1.86,69,1.752,70,1.197,71,2.073,72,1.197,73,1.197,74,1.197,75,1.634,76,1.197,77,1.197,78,1.197,79,1.116,80,1.197,81,1.197,82,1.197,83,1.197,84,0.976,85,1.116,86,1.197,87,1.197,88,1.116,89,1.197,90,1.116,91,0.914,92,1.527,93,2.342,94,1.197,95,2.069,96,2.342,97,1.197,98,1.69,99,0.914,100,1.338,101,1.806,102,1.752,103,1.286,104,2.116,105,0.856,106,1.116,107,0.904,108,1.752,109,1.634,110,1.634,111,0.966,112,0.705,113,1.429,114,1.69,115,0.696,116,1.197,117,1.429,118,1.197,119,0.976,120,1.197,121,0.976,122,1.197,123,0.01,124,0.014,125,0.01,580,3.928]],["title/modules/ZipkinExporterModule.html",[126,1.168,581,2.298]],["body/modules/ZipkinExporterModule.html",[3,0.331,4,0.331,5,0.246,6,0.246,17,0.026,26,0.384,28,0.331,37,0.331,100,1.659,123,0.018,124,0.021,125,0.018,128,1.555,132,2.276,133,2.807,134,2.027,140,1.772,141,2.027,142,1.772,143,1.772,144,2.027,145,0.849,212,3.633,214,3.633,215,2.807,216,2.728,581,3.924,582,3.633,583,3.924]],["title/injectables/ZipkinExporterService.html",[146,0.738,583,2.298]],["body/injectables/ZipkinExporterService.html",[3,0.265,4,0.265,5,0.197,6,0.303,9,0.888,11,0.631,12,1.626,13,0.84,16,1.024,17,0.026,26,0.368,28,0.265,37,0.265,39,1.517,40,0.731,93,1.517,96,1.517,100,1.33,107,1.472,110,2.71,111,0.96,112,1.579,115,0.585,123,0.014,124,0.018,125,0.014,145,0.988,146,1.097,147,1.624,152,2.932,153,1.428,157,2.359,158,2.186,159,1.49,161,1.517,166,1.094,169,1.919,171,1.871,174,1.871,175,1.624,176,1.624,177,1.42,178,1.871,179,2.616,216,2.186,217,2.616,219,4.029,220,4.313,222,4.18,223,2.442,224,2.018,573,2.616,575,3.305,582,4.483,583,4.029,584,3.903,585,5.671,586,5.094,587,5.094,588,5.671,589,3.903,590,3.903,591,3.903,592,3.903]],["title/changelog.html",[593,1.748,594,1.748,595,2.427]],["body/changelog.html",[5,0.216,10,1.279,17,0.013,18,1.376,19,1.287,20,0.795,21,1.376,25,1.638,40,0.663,42,0.654,46,1.856,50,0.907,51,0.849,53,0.93,56,1.376,58,0.849,61,1.981,68,1.287,88,0.971,91,0.795,97,1.041,100,0.795,105,1.365,113,0.849,115,0.64,123,0.008,124,0.013,125,0.008,149,1.423,190,3.19,198,0.849,199,2.211,201,1.83,218,1.697,254,1.206,326,1.564,340,1.982,362,1.976,387,1.74,388,3.621,409,4.186,428,1.74,429,1.74,446,3.19,515,3.621,523,3.56,559,1.74,595,3.621,596,2.333,597,2.333,598,1.74,599,2.333,600,2.333,601,2.333,602,2.333,603,1.976,604,5.613,605,4.774,606,4.774,607,6.551,608,2.333,609,2.333,610,4.774,611,2.333,612,4.774,613,2.333,614,6.415,615,6.415,616,3.54,617,1.976,618,1.74,619,2.333,620,3.54,621,2.333,622,2.333,623,2.333,624,2.333,625,1.74,626,1.976,627,2.333,628,4.277,629,4.042,630,2.333,631,2.333,632,2.333,633,2.333,634,2.333,635,2.333,636,2.333,637,2.333,638,2.333,639,3.54,640,4.277,641,6.038,642,2.333,643,4.277,644,2.333,645,3.56,646,2.333,647,1.74,648,2.333,649,2.333,650,2.333,651,4.774,652,3.54,653,3.54,654,2.333,655,2.333,656,2.997,657,2.64,658,2.333,659,2.333,660,2.333,661,4.774,662,3.54,663,6.551,664,4.277,665,2.333,666,1.976,667,2.333,668,2.333,669,2.333,670,2.333,671,4.277,672,2.333,673,2.333,674,4.774,675,2.333,676,2.333,677,2.333,678,2.333,679,2.333,680,2.333,681,2.333,682,5.132,683,3.621,684,5.402,685,4.277,686,4.774,687,2.333,688,1.976,689,2.333,690,2.333,691,2.333,692,3.621,693,3.54,694,1.976,695,2.333,696,2.333,697,2.333,698,1.976,699,2.333,700,2.333,701,2.333,702,2.333,703,2.333,704,2.333,705,2.333,706,2.333,707,2.333,708,1.976,709,2.333,710,2.333,711,2.333,712,2.333,713,2.333,714,2.333,715,2.333,716,5.132,717,2.333,718,2.333,719,2.333,720,2.333,721,4.774,722,2.333,723,2.333,724,2.333,725,2.333,726,2.333,727,2.333,728,2.333,729,3.54,730,2.333,731,2.333,732,2.333,733,2.333,734,2.333,735,2.333,736,1.74,737,2.333,738,4.774,739,2.333,740,4.277,741,4.774,742,3.54,743,3.54,744,3.54,745,3.54,746,4.774,747,2.333,748,3.54,749,2.333,750,2.333,751,2.333,752,2.333,753,2.333,754,2.333,755,2.333,756,2.333,757,2.333,758,2.333,759,2.333,760,2.333,761,2.333,762,2.333,763,2.333,764,1.74,765,5.613,766,2.333,767,1.976,768,2.333,769,2.333,770,1.976,771,2.333,772,2.333,773,2.333,774,2.333,775,2.333,776,2.333,777,2.333,778,2.333,779,1.74,780,2.333,781,2.333,782,2.333,783,2.333,784,1.976,785,2.333,786,2.333,787,2.333,788,2.333,789,3.54,790,3.54,791,2.333,792,2.333,793,2.333,794,2.997,795,3.54,796,3.54,797,2.333,798,2.333,799,2.333,800,4.774,801,2.333,802,2.333,803,2.333,804,2.333,805,3.54,806,2.333,807,2.333]],["title/coverage.html",[808,3.955]],["body/coverage.html",[0,1.071,1,1.223,5,0.17,6,0.354,7,2.754,8,2.754,16,0.676,17,0.025,33,1.146,38,1.307,42,1.587,53,0.884,59,1.223,68,1.223,92,1.307,101,1.307,104,1.307,107,0.774,111,0.828,115,0.504,119,1.223,121,1.223,123,0.012,124,0.017,125,0.012,129,2.508,130,2.254,135,2.052,138,1.399,146,1.395,148,3.321,172,1.399,187,2.508,188,2.508,189,2.254,192,2.052,193,2.052,198,1.914,199,2.384,200,2.254,202,2.254,211,2.508,213,2.254,215,1.612,217,3.527,223,1.612,225,2.848,226,2.848,239,2.508,242,3.439,247,3.439,252,2.052,253,2.848,254,1.739,323,2.508,331,2.508,332,3.091,333,2.508,334,2.508,335,2.254,340,1.883,341,2.254,343,2.848,344,2.848,521,2.508,522,2.254,524,2.052,528,2.848,529,2.508,530,2.848,582,2.508,583,2.254,618,2.508,808,2.848,809,3.363,810,3.363,811,7.024,812,5.262,813,6.389,814,4.611,815,3.363,816,5.931,817,3.363,818,5.931,819,5.931,820,3.363,821,3.363,822,3.363,823,2.848]],["title/dependencies.html",[553,2.514,647,2.137]],["body/dependencies.html",[17,0.026,28,0.294,32,1.066,51,1.576,65,1.685,91,1.476,100,1.476,117,1.576,123,0.016,124,0.02,125,0.016,134,1.803,136,2.644,173,3.652,198,1.576,201,2.241,230,2.644,289,3.232,290,3.232,291,3.232,292,3.232,294,4.661,295,2.905,296,3.232,298,3.232,299,2.905,399,3.67,553,2.644,573,3.652,603,5.764,656,3.67,657,3.232,824,4.334,825,6.857,826,4.334,827,4.334,828,4.334,829,4.334,830,5.448,831,4.062,832,4.334,833,4.334,834,4.334,835,4.334,836,4.334,837,4.334,838,4.613,839,4.334,840,4.334,841,4.334,842,4.334,843,4.334,844,4.334,845,4.334,846,4.334]],["title/index.html",[11,0.464,593,1.748,594,1.748]],["body/index.html",[0,0.342,1,0.768,3,0.385,6,0.062,10,1.791,13,0.865,14,0.551,15,1.84,16,0.248,17,0.025,18,0.821,19,1.008,20,1.464,21,0.48,22,0.884,23,0.944,24,0.551,25,0.884,26,0.237,28,0.084,29,0.514,31,1.236,32,0.989,33,0.944,36,1.365,37,0.321,38,0.48,39,1.077,40,0.519,41,1.008,42,1.419,43,1.563,44,1.788,45,1.671,46,2.065,49,1.236,50,1.275,51,1.008,52,1.077,53,1.244,54,0.879,55,0.943,56,2.262,57,1.236,58,2.195,59,1.008,60,1.236,61,1.468,63,1.236,65,1.434,68,1.008,69,1.463,70,0.943,71,1.794,72,0.943,73,0.943,74,0.943,75,1.365,76,0.943,77,0.943,78,0.943,79,0.879,80,0.943,81,1.645,82,1.645,83,0.943,84,0.768,85,0.879,86,0.943,87,2.022,88,0.879,89,0.943,90,0.879,91,1.935,92,0.48,93,1.762,94,1.236,95,1.462,96,0.821,98,1.193,99,0.72,100,1.544,101,0.48,102,0.551,104,1.077,105,1.788,106,0.879,107,0.755,108,1.645,109,1.152,110,0.514,114,0.449,117,1.341,119,1.008,121,0.768,123,0.013,124,0.008,125,0.004,126,2.111,127,0.827,128,0.884,132,1.563,136,2.453,140,0.768,141,1.152,142,1.193,143,0.768,144,0.514,145,0.572,149,3.087,150,3.755,164,0.827,165,1.789,169,0.394,171,1.013,173,2.199,177,1.008,186,2.472,190,0.92,197,1.416,198,1.341,199,0.638,201,2.222,206,1.045,210,0.827,218,2.686,224,1.092,228,0.92,229,1.789,230,2.001,231,1.576,232,1.576,233,1.576,235,1.789,236,1.789,237,0.827,238,0.827,241,1.045,249,1.045,254,2.222,269,2.346,275,2.999,276,0.827,277,3.561,280,2.999,281,0.92,282,2.066,283,1.416,287,0.92,289,1.576,290,1.576,291,1.576,292,1.576,294,3.773,295,1.857,296,2.066,298,2.066,299,1.857,322,0.827,326,0.827,340,3.379,345,1.045,351,1.045,368,1.045,374,1.045,387,1.576,388,4.013,392,1.045,396,3.123,426,1.045,429,2.066,435,0.92,501,2.199,509,1.045,510,2.778,515,2.472,518,2.066,520,3.038,523,1.576,531,2.778,532,1.045,552,2.25,553,2.888,554,1.576,573,2.472,581,0.827,593,1.289,594,1.289,598,1.576,625,1.576,626,1.045,629,1.045,645,1.576,647,0.92,657,1.576,666,1.789,683,1.789,688,1.789,692,1.045,694,1.789,698,1.045,764,4.177,767,1.045,779,2.066,784,1.045,823,1.789,831,0.92,838,1.789,847,2.77,848,3.28,849,1.234,850,4.907,851,1.234,852,1.234,853,1.234,854,1.789,855,1.789,856,2.113,857,2.113,858,2.113,859,3.688,860,2.113,861,4.298,862,1.234,863,1.234,864,2.113,865,1.234,866,1.234,867,1.234,868,1.234,869,1.234,870,3.28,871,1.234,872,1.234,873,3.688,874,2.346,875,3.28,876,1.789,877,1.234,878,2.113,879,2.113,880,2.77,881,1.234,882,2.77,883,1.234,884,1.234,885,1.234,886,1.234,887,2.113,888,1.234,889,1.234,890,1.234,891,1.234,892,1.234,893,1.234,894,1.234,895,1.234,896,1.234,897,1.234,898,1.045,899,1.045,900,2.77,901,4.733,902,4.907,903,4.733,904,1.234,905,4.021,906,1.234,907,3.688,908,2.113,909,1.234,910,1.234,911,1.234,912,1.234,913,1.234,914,1.234,915,1.234,916,1.234,917,1.234,918,1.234,919,1.045,920,3.688,921,1.234,922,1.234,923,1.234,924,1.234,925,1.234,926,1.234,927,1.234,928,2.778,929,1.234,930,1.234,931,1.234,932,1.234,933,1.234,934,1.234,935,1.234,936,2.113,937,1.234,938,1.234,939,1.234,940,1.234,941,1.234,942,1.234,943,1.234,944,1.234,945,1.416,946,2.77,947,2.113,948,1.234,949,1.234,950,1.234,951,1.045,952,1.234,953,1.234,954,1.234,955,1.234,956,1.234,957,1.234,958,2.77,959,2.77,960,2.113,961,2.113,962,2.113,963,2.113,964,1.234,965,1.234,966,2.113,967,2.113,968,1.234,969,1.234,970,1.234,971,1.234,972,1.234,973,1.234,974,1.045,975,1.045,976,1.234,977,3.688,978,3.688,979,3.688,980,4.907,981,3.688,982,3.123,983,3.688,984,3.688,985,3.688,986,1.234,987,1.234,988,1.234,989,1.234,990,1.234,991,1.234,992,1.234,993,1.234,994,1.234,995,1.234,996,1.234,997,1.234,998,1.234,999,1.234,1000,1.234,1001,1.234,1002,1.234,1003,1.234]],["title/license.html",[593,1.748,594,1.748,1004,2.427]],["body/license.html",[2,0.55,4,0.384,5,0.256,9,0.281,10,0.483,17,0.012,25,0.515,26,0.095,36,0.671,40,0.63,41,0.587,46,2.104,61,0.791,123,0.01,124,0.01,125,0.006,143,0.587,145,0.281,149,0.985,150,1.082,151,1.367,159,0.424,244,1.204,283,3.09,295,1.082,332,2.606,379,2.24,409,2.507,428,2.899,435,1.204,446,2.507,560,1.204,617,1.367,618,2.507,625,1.204,736,1.204,764,1.204,779,4.608,794,2.24,854,1.367,855,1.367,874,2.24,876,1.367,898,1.367,899,1.367,919,1.367,928,1.367,945,1.082,951,1.367,975,3.633,982,2.24,1004,5.605,1005,3.888,1006,3.362,1007,1.614,1008,1.614,1009,1.614,1010,5.26,1011,5.761,1012,3.888,1013,4.291,1014,1.614,1015,5.93,1016,5.413,1017,1.614,1018,1.614,1019,5.413,1020,5.761,1021,4.61,1022,5.413,1023,2.645,1024,1.614,1025,4.291,1026,1.614,1027,1.614,1028,1.614,1029,3.888,1030,1.614,1031,5.26,1032,3.888,1033,2.645,1034,2.645,1035,1.614,1036,3.362,1037,2.645,1038,1.614,1039,1.614,1040,6.125,1041,3.888,1042,2.645,1043,1.614,1044,2.645,1045,1.614,1046,1.614,1047,1.614,1048,1.614,1049,1.614,1050,1.614,1051,1.614,1052,3.362,1053,1.614,1054,3.362,1055,2.645,1056,5.761,1057,1.614,1058,1.614,1059,4.61,1060,5.26,1061,3.888,1062,2.645,1063,3.362,1064,4.61,1065,1.614,1066,1.614,1067,1.614,1068,1.614,1069,1.614,1070,2.645,1071,1.614,1072,1.614,1073,1.614,1074,6.639,1075,3.362,1076,2.645,1077,1.614,1078,5.26,1079,2.645,1080,1.614,1081,4.291,1082,2.645,1083,1.614,1084,6.125,1085,1.614,1086,1.614,1087,1.614,1088,1.614,1089,1.614,1090,1.614,1091,2.645,1092,3.362,1093,1.614,1094,1.614,1095,1.614,1096,1.614,1097,3.888,1098,4.291,1099,1.614,1100,2.645,1101,3.888,1102,2.645,1103,1.614,1104,4.291,1105,2.645,1106,1.614,1107,1.614,1108,3.362,1109,1.614,1110,1.614,1111,1.614,1112,1.614,1113,2.645,1114,1.614,1115,1.614,1116,1.614,1117,3.362,1118,1.614,1119,1.614,1120,3.362,1121,1.614,1122,1.614,1123,1.614,1124,3.888,1125,5.413,1126,1.614,1127,1.614,1128,2.645,1129,5.081,1130,3.362,1131,2.645,1132,2.645,1133,2.645,1134,2.645,1135,3.362,1136,2.645,1137,3.362,1138,2.645,1139,2.645,1140,2.645,1141,2.645,1142,1.367,1143,2.645,1144,1.614,1145,1.614,1146,4.291,1147,4.868,1148,3.362,1149,2.645,1150,1.614,1151,1.614,1152,2.645,1153,2.645,1154,1.614,1155,3.362,1156,2.645,1157,1.614,1158,1.614,1159,1.614,1160,3.362,1161,1.614,1162,1.614,1163,1.614,1164,2.645,1165,2.645,1166,1.614,1167,1.614,1168,1.614,1169,1.614,1170,1.614,1171,1.614,1172,1.614,1173,2.645,1174,1.614,1175,1.614,1176,1.614,1177,1.614,1178,1.614,1179,1.614,1180,1.614,1181,1.614,1182,3.362,1183,1.614,1184,3.362,1185,1.614,1186,1.614,1187,1.614,1188,1.614,1189,5.081,1190,1.614,1191,1.614,1192,1.614,1193,1.614,1194,1.614,1195,3.888,1196,2.645,1197,3.888,1198,1.614,1199,1.614,1200,1.614,1201,1.614,1202,1.614,1203,3.362,1204,1.614,1205,1.614,1206,2.645,1207,2.645,1208,1.614,1209,1.614,1210,1.614,1211,2.645,1212,1.614,1213,1.614,1214,4.291,1215,1.614,1216,1.614,1217,1.614,1218,1.614,1219,1.614,1220,1.614,1221,1.614,1222,3.362,1223,3.888,1224,1.614,1225,1.614,1226,1.614,1227,1.614,1228,1.614,1229,1.614,1230,1.614,1231,1.614,1232,1.614,1233,1.614,1234,2.645,1235,1.614,1236,1.614,1237,2.645,1238,1.614,1239,1.614,1240,3.888,1241,1.614,1242,1.614,1243,1.614,1244,1.614,1245,1.614,1246,1.614,1247,3.888,1248,3.362,1249,3.362,1250,3.362,1251,2.645,1252,2.645,1253,3.362,1254,2.645,1255,2.645,1256,2.645,1257,2.645,1258,1.614,1259,1.614,1260,1.614,1261,1.614,1262,1.614,1263,1.614,1264,1.614,1265,1.614,1266,1.614,1267,2.645,1268,1.614,1269,1.614,1270,1.614,1271,1.614,1272,4.291,1273,1.614,1274,1.614,1275,1.614,1276,1.614,1277,1.614,1278,1.614,1279,1.614,1280,1.614,1281,4.291,1282,1.614,1283,1.614,1284,1.614,1285,1.614,1286,1.614,1287,1.614,1288,1.614,1289,1.614,1290,1.614,1291,1.614,1292,1.614,1293,1.614,1294,1.614,1295,1.614,1296,1.614,1297,1.614,1298,1.614,1299,3.362,1300,1.614,1301,1.614,1302,1.614,1303,1.367,1304,1.614,1305,2.645,1306,1.614,1307,1.614,1308,1.614,1309,1.614,1310,1.614,1311,1.614,1312,1.614,1313,1.614,1314,1.614,1315,1.614,1316,1.614,1317,1.614,1318,1.614,1319,1.614,1320,1.614,1321,2.645,1322,1.614,1323,1.614,1324,1.614,1325,2.645,1326,2.645,1327,1.614,1328,1.614,1329,1.614,1330,1.614,1331,1.614,1332,1.614,1333,1.614,1334,1.614,1335,1.614,1336,1.614,1337,1.614,1338,1.614,1339,1.614,1340,1.614,1341,1.614,1342,1.614,1343,1.614,1344,1.614,1345,1.614,1346,1.614]],["title/modules.html",[128,1.491]],["body/modules.html",[17,0.021,123,0.018,124,0.021,125,0.018,127,3.337,128,1.589,186,3.337,210,3.337,238,3.337,322,3.337,330,3.713,501,3.337,520,3.337,552,3.038,581,3.337,831,3.713,945,4.669,1303,4.216,1347,6.965,1348,7,1349,4.979]],["title/overview.html",[1350,3.955]],["body/overview.html",[2,1.717,17,0.024,25,1.609,84,1.833,123,0.018,124,0.021,125,0.018,126,1.717,128,1.609,140,1.833,142,1.833,147,2.097,254,2.606,524,4.2,544,3.759,552,4.1,553,3.075,554,3.759,555,4.268,556,4.268,557,4.268,558,5.058,559,3.759,560,3.759,645,3.759,708,4.268,736,3.759,1350,4.268]],["title/todo.html",[593,1.748,594,1.748,1351,2.427]],["body/todo.html",[10,1.798,17,0.024,56,2.336,61,1.913,91,1.734,123,0.018,124,0.022,125,0.018,149,3.106,150,4.028,164,3.412,201,3.305,218,2.441,340,2.851,388,3.412,598,3.796,770,4.31,945,3.412,974,5.413,1142,4.31,1351,5.088,1352,5.091,1353,5.091,1354,5.091]],["title/miscellaneous/variables.html",[1355,2.427,1356,3.489]],["body/miscellaneous/variables.html",[6,0.311,7,1.943,8,2.67,11,0.756,17,0.025,22,2.101,23,2.242,53,1.499,95,1.699,105,1.491,111,1.516,112,1.227,113,2.334,115,0.986,116,2.084,117,2.075,118,2.084,119,2.075,120,2.084,121,2.075,122,2.084,123,0.017,124,0.021,125,0.017,138,2.374,215,2.736,218,2.24,242,3.484,246,3.955,247,3.484,251,3.955,1355,3.955,1356,3.955,1357,6.162,1358,4.671,1359,4.671]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":165,"title":{},"body":{"injectables/B3PropagatorService.html":{},"index.html":{}}}],["0.10.0",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["0.10.1",{"_index":729,"title":{},"body":{"changelog.html":{}}}],["0.10.2",{"_index":716,"title":{},"body":{"changelog.html":{}}}],["0.10.3",{"_index":846,"title":{},"body":{"dependencies.html":{}}}],["0.11.0",{"_index":682,"title":{},"body":{"changelog.html":{}}}],["0.13.0",{"_index":671,"title":{},"body":{"changelog.html":{}}}],["0.14.0",{"_index":662,"title":{},"body":{"changelog.html":{}}}],["0.15.0",{"_index":659,"title":{},"body":{"changelog.html":{}}}],["0.16.0",{"_index":656,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["0.17.0",{"_index":650,"title":{},"body":{"changelog.html":{}}}],["0.18.0",{"_index":643,"title":{},"body":{"changelog.html":{}}}],["0.18.2",{"_index":639,"title":{},"body":{"changelog.html":{}}}],["0.19.0",{"_index":603,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["0.4.0",{"_index":735,"title":{},"body":{"changelog.html":{}}}],["0.7",{"_index":877,"title":{},"body":{"index.html":{}}}],["0.75",{"_index":891,"title":{},"body":{"index.html":{}}}],["0.8.2",{"_index":761,"title":{},"body":{"changelog.html":{}}}],["0.8.3",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["0.9.0",{"_index":740,"title":{},"body":{"changelog.html":{}}}],["01",{"_index":660,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":651,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":606,"title":{},"body":{"changelog.html":{}}}],["0319eee",{"_index":745,"title":{},"body":{"changelog.html":{}}}],["042898e",{"_index":696,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":605,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":741,"title":{},"body":{"changelog.html":{}}}],["0615f02",{"_index":655,"title":{},"body":{"changelog.html":{}}}],["06cb6de",{"_index":699,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":730,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":721,"title":{},"body":{"changelog.html":{}}}],["0885b40",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":684,"title":{},"body":{"changelog.html":{}}}],["09dd1bb",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["0a2ccc5",{"_index":701,"title":{},"body":{"changelog.html":{}}}],["0f35b5c",{"_index":781,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":25,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["1.0.0",{"_index":834,"title":{},"body":{"dependencies.html":{}}}],["1.19.0",{"_index":837,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":819,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":645,"title":{},"body":{"changelog.html":{},"index.html":{},"overview.html":{}}}],["10.0.3",{"_index":840,"title":{},"body":{"dependencies.html":{}}}],["10.2",{"_index":668,"title":{},"body":{"changelog.html":{}}}],["10.2.4",{"_index":825,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":811,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":708,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["12",{"_index":664,"title":{},"body":{"changelog.html":{}}}],["12.0.2",{"_index":998,"title":{},"body":{"index.html":{}}}],["12/typescript",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["1229a9d",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["14/14",{"_index":820,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":693,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":685,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":665,"title":{},"body":{"changelog.html":{}}}],["18d04fd",{"_index":627,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":695,"title":{},"body":{"changelog.html":{}}}],["1a1299b",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["1a56037",{"_index":638,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":692,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["2.0",{"_index":1006,"title":{},"body":{"license.html":{}}}],["2.0.1",{"_index":844,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":813,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["2004",{"_index":1008,"title":{},"body":{"license.html":{}}}],["2020",{"_index":663,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":604,"title":{},"body":{"changelog.html":{}}}],["2048",{"_index":883,"title":{},"body":{"index.html":{}}}],["21",{"_index":652,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":644,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":661,"title":{},"body":{"changelog.html":{}}}],["2965c35",{"_index":619,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":683,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["3.6.0",{"_index":784,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["3/3",{"_index":812,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":640,"title":{},"body":{"changelog.html":{}}}],["30000",{"_index":886,"title":{},"body":{"index.html":{}}}],["332baf7",{"_index":667,"title":{},"body":{"changelog.html":{}}}],["34",{"_index":608,"title":{},"body":{"changelog.html":{}}}],["3516488",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["351ce3e",{"_index":725,"title":{},"body":{"changelog.html":{}}}],["371886a",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["4.1.9",{"_index":841,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":816,"title":{},"body":{"coverage.html":{}}}],["412d2fd",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["47aba25",{"_index":798,"title":{},"body":{"changelog.html":{}}}],["47c249b",{"_index":802,"title":{},"body":{"changelog.html":{}}}],["4a000b9",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["4bddf3a",{"_index":706,"title":{},"body":{"changelog.html":{}}}],["4d886fb",{"_index":728,"title":{},"body":{"changelog.html":{}}}],["4d9a061",{"_index":715,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":914,"title":{},"body":{"index.html":{}}}],["5/5",{"_index":814,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1047,"title":{},"body":{"license.html":{}}}],["5000",{"_index":885,"title":{},"body":{"index.html":{}}}],["512",{"_index":884,"title":{},"body":{"index.html":{}}}],["563071d",{"_index":785,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":744,"title":{},"body":{"changelog.html":{}}}],["6.6.3",{"_index":842,"title":{},"body":{"dependencies.html":{}}}],["613c16d",{"_index":801,"title":{},"body":{"changelog.html":{}}}],["62e0d77",{"_index":723,"title":{},"body":{"changelog.html":{}}}],["66ca86c",{"_index":636,"title":{},"body":{"changelog.html":{}}}],["68d7aee",{"_index":630,"title":{},"body":{"changelog.html":{}}}],["6e5c19a",{"_index":691,"title":{},"body":{"changelog.html":{}}}],["7/7",{"_index":815,"title":{},"body":{"coverage.html":{}}}],["735b05d",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["75",{"_index":892,"title":{},"body":{"index.html":{}}}],["7a5b07e",{"_index":762,"title":{},"body":{"changelog.html":{}}}],["7b4c031",{"_index":743,"title":{},"body":{"changelog.html":{}}}],["7bab017",{"_index":704,"title":{},"body":{"changelog.html":{}}}],["7f7c66a",{"_index":718,"title":{},"body":{"changelog.html":{}}}],["8/8",{"_index":817,"title":{},"body":{"coverage.html":{}}}],["80d2ada",{"_index":737,"title":{},"body":{"changelog.html":{}}}],["80f7bf8",{"_index":806,"title":{},"body":{"changelog.html":{}}}],["83fc1f3",{"_index":763,"title":{},"body":{"changelog.html":{}}}],["8b1b7b5",{"_index":702,"title":{},"body":{"changelog.html":{}}}],["8d45a2c",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["8e268a9",{"_index":755,"title":{},"body":{"changelog.html":{}}}],["8faa4c9",{"_index":687,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":736,"title":{},"body":{"changelog.html":{},"license.html":{},"overview.html":{}}}],["9.0.0",{"_index":852,"title":{},"body":{"index.html":{}}}],["9/9",{"_index":821,"title":{},"body":{"coverage.html":{}}}],["9/node",{"_index":782,"title":{},"body":{"changelog.html":{}}}],["92330f9",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["94e0b44",{"_index":733,"title":{},"body":{"changelog.html":{}}}],["95167b9",{"_index":797,"title":{},"body":{"changelog.html":{}}}],["96da55f",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["a1746bf",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["a517094",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["a73e382",{"_index":611,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":1227,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":1302,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":1299,"title":{},"body":{"license.html":{}}}],["accessor",{"_index":1000,"title":{},"body":{"index.html":{}}}],["act",{"_index":1309,"title":{},"body":{"license.html":{}}}],["acting",{"_index":1027,"title":{},"body":{"license.html":{}}}],["action",{"_index":632,"title":{},"body":{"changelog.html":{}}}],["activate",{"_index":905,"title":{},"body":{"index.html":{}}}],["acts",{"_index":1279,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":551,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["ad03334",{"_index":768,"title":{},"body":{"changelog.html":{}}}],["add",{"_index":61,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/CustomSpan.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["add(span",{"_index":229,"title":{},"body":{"interfaces/CustomSpan.html":{},"index.html":{}}}],["addendum",{"_index":1213,"title":{},"body":{"license.html":{}}}],["adding",{"_index":953,"title":{},"body":{"index.html":{}}}],["addinstrumentationplugin",{"_index":258,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["addinstrumentationplugin(instrumentationconfig",{"_index":266,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["additional",{"_index":1214,"title":{},"body":{"license.html":{}}}],["additions",{"_index":1099,"title":{},"body":{"license.html":{}}}],["advised",{"_index":1297,"title":{},"body":{"license.html":{}}}],["again",{"_index":703,"title":{},"body":{"changelog.html":{}}}],["against",{"_index":1165,"title":{},"body":{"license.html":{}}}],["agent",{"_index":698,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["agree",{"_index":1312,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":1250,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":1231,"title":{},"body":{"license.html":{}}}],["alleging",{"_index":1170,"title":{},"body":{"license.html":{}}}],["allowedcommonjsdependencies",{"_index":990,"title":{},"body":{"index.html":{}}}],["alone",{"_index":1161,"title":{},"body":{"license.html":{}}}],["along",{"_index":1204,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":1212,"title":{},"body":{"license.html":{}}}],["already",{"_index":516,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["althought",{"_index":956,"title":{},"body":{"index.html":{}}}],["always",{"_index":364,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["alwaysoffsampler",{"_index":403,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["alwaysonsampler",{"_index":402,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["ambient",{"_index":1002,"title":{},"body":{"index.html":{}}}],["amd",{"_index":981,"title":{},"body":{"index.html":{}}}],["and(b",{"_index":1185,"title":{},"body":{"license.html":{}}}],["and(c",{"_index":1192,"title":{},"body":{"license.html":{}}}],["and(d",{"_index":1198,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":1306,"title":{},"body":{"license.html":{}}}],["angular",{"_index":388,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["angular.json",{"_index":988,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":824,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":826,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":134,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":237,"title":{},"body":{"interfaces/CustomSpan.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["angular/compiler",{"_index":827,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":28,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"dependencies.html":{},"index.html":{}}}],["angular/forms",{"_index":828,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":829,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":830,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":833,"title":{},"body":{"dependencies.html":{}}}],["annotations",{"_index":1088,"title":{},"body":{"license.html":{}}}],["apache",{"_index":1005,"title":{},"body":{"license.html":{}}}],["api",{"_index":326,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{}}}],["api.defaulttextmapsetter",{"_index":484,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api.diag.setlogger(logger",{"_index":423,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api.propagation.inject",{"_index":483,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api.setspan",{"_index":481,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["app",{"_index":864,"title":{},"body":{"index.html":{}}}],["app.component",{"_index":921,"title":{},"body":{"index.html":{}}}],["app.component.html",{"_index":934,"title":{},"body":{"index.html":{}}}],["app.module.ts",{"_index":912,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":920,"title":{},"body":{"index.html":{}}}],["appear",{"_index":1209,"title":{},"body":{"license.html":{}}}],["appendix",{"_index":1082,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":1248,"title":{},"body":{"license.html":{}}}],["application",{"_index":850,"title":{},"body":{"index.html":{}}}],["applications",{"_index":957,"title":{},"body":{"index.html":{}}}],["applies",{"_index":899,"title":{},"body":{"index.html":{},"license.html":{}}}],["apply",{"_index":1321,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":518,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{},"index.html":{}}}],["appropriate",{"_index":1329,"title":{},"body":{"license.html":{}}}],["appropriateness",{"_index":1265,"title":{},"body":{"license.html":{}}}],["archives",{"_index":1337,"title":{},"body":{"license.html":{}}}],["arising",{"_index":1286,"title":{},"body":{"license.html":{}}}],["asserted",{"_index":1318,"title":{},"body":{"license.html":{}}}],["associated",{"_index":1270,"title":{},"body":{"license.html":{}}}],["assume",{"_index":1268,"title":{},"body":{"license.html":{}}}],["async",{"_index":896,"title":{},"body":{"index.html":{}}}],["attach",{"_index":1322,"title":{},"body":{"license.html":{}}}],["attached",{"_index":1080,"title":{},"body":{"license.html":{}}}],["attributes",{"_index":98,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/CustomSpan.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["attribution",{"_index":1195,"title":{},"body":{"license.html":{}}}],["authorized",{"_index":1023,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":1075,"title":{},"body":{"license.html":{}}}],["available",{"_index":945,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{},"todo.html":{}}}],["b112065",{"_index":689,"title":{},"body":{"changelog.html":{}}}],["b3",{"_index":136,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"dependencies.html":{},"index.html":{}}}],["b3injectencoding",{"_index":167,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b3injectencoding.multi_header",{"_index":184,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b3injectencoding.single_header",{"_index":183,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b3propagator",{"_index":21,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["b3propagator(this.b3propagatorconfig",{"_index":185,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b3propagatorconfig",{"_index":1,"title":{"interfaces/B3PropagatorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["b3propagatormodule",{"_index":127,"title":{"modules/B3PropagatorModule.html":{}},"body":{"modules/B3PropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["b3propagatorservice",{"_index":135,"title":{"injectables/B3PropagatorService.html":{}},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["b3propagatorservice.defineb3encoding(config.b3propagatorconfig?.multiheader",{"_index":182,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b63afc1",{"_index":777,"title":{},"body":{"changelog.html":{}}}],["b679883",{"_index":778,"title":{},"body":{"changelog.html":{}}}],["b6dcaf7",{"_index":707,"title":{},"body":{"changelog.html":{}}}],["baggage",{"_index":1353,"title":{},"body":{"todo.html":{}}}],["bailouts",{"_index":984,"title":{},"body":{"index.html":{}}}],["based",{"_index":951,"title":{},"body":{"index.html":{},"license.html":{}}}],["basis",{"_index":1252,"title":{},"body":{"license.html":{}}}],["batch",{"_index":76,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["batchspanexporter",{"_index":67,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["batchspanexporter(async",{"_index":47,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["batchspanprocessor",{"_index":280,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["batchspanprocessor(exporter.getexporter",{"_index":316,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["batchspanprocessor(this.exporterservice.getexporter",{"_index":497,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["batchspanprocessorconfig",{"_index":68,"title":{"interfaces/BatchSpanProcessorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["bca88a0",{"_index":681,"title":{},"body":{"changelog.html":{}}}],["bd69598",{"_index":759,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":88,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["behalf",{"_index":1104,"title":{},"body":{"license.html":{}}}],["below",{"_index":1083,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":1051,"title":{},"body":{"license.html":{}}}],["between",{"_index":81,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["bfc26ae",{"_index":731,"title":{},"body":{"changelog.html":{}}}],["bind",{"_index":1096,"title":{},"body":{"license.html":{}}}],["body",{"_index":51,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["boilerplate",{"_index":1323,"title":{},"body":{"license.html":{}}}],["boolean",{"_index":44,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["boolean)send",{"_index":894,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":554,"title":{},"body":{"modules/OtelWebTracerModule.html":{},"index.html":{},"overview.html":{}}}],["brackets",{"_index":1326,"title":{},"body":{"license.html":{}}}],["branch",{"_index":634,"title":{},"body":{"changelog.html":{}}}],["breaking",{"_index":623,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1348,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":831,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules.html":{}}}],["bufferconfig",{"_index":401,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["bug",{"_index":614,"title":{},"body":{"changelog.html":{}}}],["c53447a",{"_index":649,"title":{},"body":{"changelog.html":{}}}],["c6368c9",{"_index":757,"title":{},"body":{"changelog.html":{}}}],["c71ba73",{"_index":676,"title":{},"body":{"changelog.html":{}}}],["c9f8667",{"_index":622,"title":{},"body":{"changelog.html":{}}}],["caab7a9",{"_index":609,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":429,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{}}}],["cancelled",{"_index":89,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["carrier",{"_index":482,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["carrier[key",{"_index":486,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["carry",{"_index":1187,"title":{},"body":{"license.html":{}}}],["catch",{"_index":865,"title":{},"body":{"index.html":{}}}],["cause",{"_index":982,"title":{},"body":{"index.html":{},"license.html":{}}}],["change",{"_index":624,"title":{},"body":{"changelog.html":{}}}],["changed",{"_index":1191,"title":{},"body":{"license.html":{}}}],["changelog",{"_index":595,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":597,"title":{},"body":{"changelog.html":{}}}],["character",{"_index":1285,"title":{},"body":{"license.html":{}}}],["charge",{"_index":1137,"title":{},"body":{"license.html":{}}}],["choices",{"_index":910,"title":{},"body":{"index.html":{}}}],["choose",{"_index":1300,"title":{},"body":{"license.html":{}}}],["claim",{"_index":1167,"title":{},"body":{"license.html":{}}}],["claims",{"_index":1156,"title":{},"body":{"license.html":{}}}],["class",{"_index":145,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{},"license.html":{}}}],["closes",{"_index":612,"title":{},"body":{"changelog.html":{}}}],["cluster_otelwebtracermodule",{"_index":555,"title":{},"body":{"modules/OtelWebTracerModule.html":{},"overview.html":{}}}],["cluster_otelwebtracermodule_declarations",{"_index":556,"title":{},"body":{"modules/OtelWebTracerModule.html":{},"overview.html":{}}}],["cluster_otelwebtracermodule_exports",{"_index":557,"title":{},"body":{"modules/OtelWebTracerModule.html":{},"overview.html":{}}}],["code",{"_index":446,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"license.html":{}}}],["collector",{"_index":91,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{}}}],["collector/build/src/platform/browser",{"_index":986,"title":{},"body":{"index.html":{}}}],["collector/docker",{"_index":969,"title":{},"body":{"index.html":{}}}],["collectorexporter",{"_index":568,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectorexporterconfigbase",{"_index":570,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectortraceexporter",{"_index":571,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectortraceexporter(this.otelcolconfig",{"_index":579,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectortypes",{"_index":572,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectortypes.collectorexporterconfigbase",{"_index":569,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["combination",{"_index":1162,"title":{},"body":{"license.html":{}}}],["command",{"_index":959,"title":{},"body":{"index.html":{}}}],["comment",{"_index":1330,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":1294,"title":{},"body":{"license.html":{}}}],["commit",{"_index":601,"title":{},"body":{"changelog.html":{}}}],["common",{"_index":36,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{},"license.html":{}}}],["commoncollectorconfig",{"_index":38,"title":{"interfaces/CommonCollectorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["commonconfig",{"_index":108,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["commonjs",{"_index":980,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":133,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{}}}],["commons",{"_index":858,"title":{},"body":{"index.html":{}}}],["communication",{"_index":1108,"title":{},"body":{"license.html":{}}}],["compatible",{"_index":118,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["compiled",{"_index":1069,"title":{},"body":{"license.html":{}}}],["compliance",{"_index":1340,"title":{},"body":{"license.html":{}}}],["complies",{"_index":1220,"title":{},"body":{"license.html":{}}}],["component",{"_index":254,"title":{"components/OtelWebTracerComponent.html":{}},"body":{"injectables/InstrumentationService.html":{},"components/OtelWebTracerComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component/otel",{"_index":564,"title":{},"body":{"modules/OtelWebTracerModule.html":{}}}],["component_template",{"_index":549,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["components",{"_index":525,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["compose",{"_index":967,"title":{},"body":{"index.html":{}}}],["compose.yaml",{"_index":970,"title":{},"body":{"index.html":{}}}],["composite",{"_index":190,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"changelog.html":{},"index.html":{}}}],["compositepropagator",{"_index":196,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["compositepropagatormodule",{"_index":186,"title":{"modules/CompositePropagatorModule.html":{}},"body":{"modules/CompositePropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["compositepropagatorservice",{"_index":189,"title":{"injectables/CompositePropagatorService.html":{}},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["computer",{"_index":1291,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":1011,"title":{},"body":{"license.html":{}}}],["config",{"_index":112,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"miscellaneous/variables.html":{}}}],["config.commonconfig.logbody",{"_index":422,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["config.commonconfig.loglevel",{"_index":424,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["config.commonconfig.servicename",{"_index":575,"title":{},"body":{"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["config.jaegerpropagatorconfig?.customheader",{"_index":328,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["config.otelcolconfig?.attributes",{"_index":578,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.otelcolconfig?.headers",{"_index":577,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.otelcolconfig?.url",{"_index":576,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.ts",{"_index":8,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config.zipkinconfig?.headers",{"_index":591,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["config.zipkinconfig?.url",{"_index":590,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["configurable",{"_index":666,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["configuration",{"_index":10,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["configuration/directive",{"_index":935,"title":{},"body":{"index.html":{}}}],["configuration/opentelemetry",{"_index":174,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["configure",{"_index":873,"title":{},"body":{"index.html":{}}}],["configured",{"_index":586,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["consecutive",{"_index":83,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["consequential",{"_index":1284,"title":{},"body":{"license.html":{}}}],["conserve",{"_index":378,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["consistent",{"_index":1308,"title":{},"body":{"license.html":{}}}],["console",{"_index":43,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/ConsoleSpanExporterModule.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["consolespanexporter",{"_index":221,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["consolespanexportermodule",{"_index":210,"title":{"modules/ConsoleSpanExporterModule.html":{}},"body":{"modules/ConsoleSpanExporterModule.html":{},"index.html":{},"modules.html":{}}}],["consolespanexporterservice",{"_index":213,"title":{"injectables/ConsoleSpanExporterService.html":{}},"body":{"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"coverage.html":{}}}],["conspicuously",{"_index":1121,"title":{},"body":{"license.html":{}}}],["const",{"_index":114,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["constitutes",{"_index":1171,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":157,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["constructor(@inject(opentelemetryinjectconfig",{"_index":179,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/ZipkinExporterService.html":{}}}],["constructor(b3propagatorservice",{"_index":191,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["constructor(config",{"_index":158,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["constructor(instrumentationservice",{"_index":537,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["constructor(private",{"_index":542,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["construed",{"_index":1215,"title":{},"body":{"license.html":{}}}],["contained",{"_index":1201,"title":{},"body":{"license.html":{}}}],["content",{"_index":855,"title":{},"body":{"index.html":{},"license.html":{}}}],["contents",{"_index":854,"title":{},"body":{"index.html":{},"license.html":{}}}],["context",{"_index":199,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["contextmanager",{"_index":255,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["contract",{"_index":1042,"title":{},"body":{"license.html":{}}}],["contribution",{"_index":1098,"title":{},"body":{"license.html":{}}}],["contribution(s",{"_index":1160,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":1222,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":1125,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":1172,"title":{},"body":{"license.html":{}}}],["control",{"_index":1029,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":1030,"title":{},"body":{"license.html":{}}}],["conversions",{"_index":1071,"title":{},"body":{"license.html":{}}}],["convert",{"_index":357,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["convertstringtonumber",{"_index":346,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["convertstringtonumber(value",{"_index":355,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["copies",{"_index":1179,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1184,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1020,"title":{},"body":{"license.html":{}}}],["core",{"_index":915,"title":{},"body":{"index.html":{}}}],["counterclaim",{"_index":1168,"title":{},"body":{"license.html":{}}}],["cours",{"_index":773,"title":{},"body":{"changelog.html":{}}}],["coverage",{"_index":808,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":952,"title":{},"body":{"index.html":{}}}],["cross",{"_index":1166,"title":{},"body":{"license.html":{}}}],["current",{"_index":368,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["custom",{"_index":95,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["custom_span",{"_index":121,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["customary",{"_index":1242,"title":{},"body":{"license.html":{}}}],["customheader",{"_index":106,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["customspan",{"_index":33,"title":{"interfaces/CustomSpan.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/CustomSpan.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["customspanimpl",{"_index":947,"title":{},"body":{"index.html":{}}}],["cypress",{"_index":628,"title":{},"body":{"changelog.html":{}}}],["d2ecbb8",{"_index":739,"title":{},"body":{"changelog.html":{}}}],["d8b9f3c",{"_index":642,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":1281,"title":{},"body":{"license.html":{}}}],["date",{"_index":1176,"title":{},"body":{"license.html":{}}}],["dbaec60",{"_index":613,"title":{},"body":{"changelog.html":{}}}],["dcde5bb",{"_index":670,"title":{},"body":{"changelog.html":{}}}],["dd7a0e5",{"_index":775,"title":{},"body":{"changelog.html":{}}}],["dda5d54",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["de09c4d",{"_index":717,"title":{},"body":{"changelog.html":{}}}],["de1f141",{"_index":677,"title":{},"body":{"changelog.html":{}}}],["debug",{"_index":940,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":140,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/OtelWebTracerModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{},"overview.html":{}}}],["declare",{"_index":925,"title":{},"body":{"index.html":{}}}],["declared",{"_index":1001,"title":{},"body":{"index.html":{}}}],["default",{"_index":22,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defend",{"_index":1314,"title":{},"body":{"license.html":{}}}],["define",{"_index":99,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["defineb3encoding",{"_index":155,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["defineb3encoding(value",{"_index":162,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["defined",{"_index":159,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"license.html":{}}}],["defineprobabilitysampler",{"_index":347,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["defineprobabilitysampler(sampleconfig",{"_index":360,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["definition",{"_index":1033,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":1014,"title":{},"body":{"license.html":{}}}],["del",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["delete",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["deliberate",{"_index":1276,"title":{},"body":{"license.html":{}}}],["dep",{"_index":292,"title":{},"body":{"injectables/InstrumentationService.html":{},"dependencies.html":{},"index.html":{}}}],["dependence",{"_index":688,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dependencies",{"_index":553,"title":{"dependencies.html":{}},"body":{"modules/OtelWebTracerModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["dependenciesadd",{"_index":987,"title":{},"body":{"index.html":{}}}],["depends",{"_index":979,"title":{},"body":{"index.html":{}}}],["deploy",{"_index":849,"title":{},"body":{"index.html":{}}}],["derivative",{"_index":1084,"title":{},"body":{"license.html":{}}}],["derived",{"_index":1085,"title":{},"body":{"license.html":{}}}],["describing",{"_index":1243,"title":{},"body":{"license.html":{}}}],["description",{"_index":9,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"license.html":{}}}],["designated",{"_index":1123,"title":{},"body":{"license.html":{}}}],["determining",{"_index":1264,"title":{},"body":{"license.html":{}}}],["dgo",{"_index":972,"title":{},"body":{"index.html":{}}}],["diaglogger",{"_index":29,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["diagloglevel",{"_index":31,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["diagloglevel.all",{"_index":893,"title":{},"body":{"index.html":{}}}],["different",{"_index":1219,"title":{},"body":{"license.html":{}}}],["dir",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["direct",{"_index":1036,"title":{},"body":{"license.html":{}}}],["direction",{"_index":1038,"title":{},"body":{"license.html":{}}}],["directive",{"_index":547,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["directives",{"_index":550,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["disclaimer",{"_index":1246,"title":{},"body":{"license.html":{}}}],["discussing",{"_index":1118,"title":{},"body":{"license.html":{}}}],["display",{"_index":874,"title":{},"body":{"index.html":{},"license.html":{}}}],["distribute",{"_index":1146,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":1203,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":1013,"title":{},"body":{"license.html":{}}}],["doc",{"_index":674,"title":{},"body":{"changelog.html":{}}}],["docker",{"_index":966,"title":{},"body":{"index.html":{}}}],["docs",{"_index":758,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":295,"title":{},"body":{"injectables/InstrumentationService.html":{},"dependencies.html":{},"index.html":{},"license.html":{}}}],["documentation",{"_index":618,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["documented",{"_index":599,"title":{},"body":{"changelog.html":{}}}],["documentload",{"_index":63,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["documentloadinstrumentation",{"_index":64,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["dom",{"_index":526,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["don't",{"_index":625,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["done",{"_index":1354,"title":{},"body":{"todo.html":{}}}],["downgrade",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["dropped",{"_index":74,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["during",{"_index":235,"title":{},"body":{"interfaces/CustomSpan.html":{},"index.html":{}}}],["dynamic",{"_index":832,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":742,"title":{},"body":{"changelog.html":{}}}],["e5eb09e",{"_index":766,"title":{},"body":{"changelog.html":{}}}],["e6073bf",{"_index":675,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":428,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"license.html":{}}}],["ead3251",{"_index":646,"title":{},"body":{"changelog.html":{}}}],["easier",{"_index":1335,"title":{},"body":{"license.html":{}}}],["ec28651",{"_index":780,"title":{},"body":{"changelog.html":{}}}],["editorial",{"_index":1086,"title":{},"body":{"license.html":{}}}],["efa9083",{"_index":669,"title":{},"body":{"changelog.html":{}}}],["elaborations",{"_index":1089,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":1105,"title":{},"body":{"license.html":{}}}],["element",{"_index":546,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["en",{"_index":772,"title":{},"body":{"changelog.html":{}}}],["enable",{"_index":268,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["enabled",{"_index":318,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["enclosed",{"_index":1325,"title":{},"body":{"license.html":{}}}],["end",{"_index":1320,"title":{},"body":{"license.html":{}}}],["entities",{"_index":1028,"title":{},"body":{"license.html":{}}}],["entity",{"_index":1022,"title":{},"body":{"license.html":{}}}],["enum",{"_index":882,"title":{},"body":{"index.html":{}}}],["environment",{"_index":887,"title":{},"body":{"index.html":{}}}],["environments/environment",{"_index":922,"title":{},"body":{"index.html":{}}}],["equal",{"_index":78,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["error",{"_index":515,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{},"changelog.html":{},"index.html":{}}}],["even",{"_index":1296,"title":{},"body":{"license.html":{}}}],["event",{"_index":435,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{},"license.html":{}}}],["event.body",{"_index":441,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.error",{"_index":454,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.message",{"_index":452,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.name",{"_index":450,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.status",{"_index":438,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.statustext",{"_index":440,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["example",{"_index":764,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["exampleand",{"_index":961,"title":{},"body":{"index.html":{}}}],["except",{"_index":1148,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":1120,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":1136,"title":{},"body":{"license.html":{}}}],["executed",{"_index":1232,"title":{},"body":{"license.html":{}}}],["exercise",{"_index":1271,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":1053,"title":{},"body":{"license.html":{}}}],["existing",{"_index":937,"title":{},"body":{"index.html":{}}}],["explicitly",{"_index":1224,"title":{},"body":{"license.html":{}}}],["export",{"_index":37,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["exported",{"_index":994,"title":{},"body":{"index.html":{}}}],["exporter",{"_index":218,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["exporter.interface",{"_index":216,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{}}}],["exporter.module.ts",{"_index":212,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{}}}],["exporter.service",{"_index":214,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{}}}],["exporter.service.ts",{"_index":217,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["exporter.service.ts:17",{"_index":220,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["exporter.service.ts:23",{"_index":566,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["exporter.service.ts:35",{"_index":584,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["exporter.service.ts:44",{"_index":567,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["exporter/exporter.interface",{"_index":300,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["exporterconfig",{"_index":588,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["exporters",{"_index":913,"title":{},"body":{"index.html":{}}}],["exporterservice",{"_index":263,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["exports",{"_index":84,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{},"overview.html":{}}}],["exporttimeoutmillis",{"_index":90,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["express",{"_index":1255,"title":{},"body":{"license.html":{}}}],["external",{"_index":866,"title":{},"body":{"index.html":{}}}],["f",{"_index":968,"title":{},"body":{"index.html":{}}}],["f0a18ea",{"_index":658,"title":{},"body":{"changelog.html":{}}}],["f195a50",{"_index":752,"title":{},"body":{"changelog.html":{}}}],["f206c5e",{"_index":678,"title":{},"body":{"changelog.html":{}}}],["fad044a",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["failure",{"_index":1292,"title":{},"body":{"license.html":{}}}],["fake",{"_index":917,"title":{},"body":{"index.html":{}}}],["false",{"_index":396,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["features",{"_index":607,"title":{},"body":{"changelog.html":{}}}],["fee",{"_index":1301,"title":{},"body":{"license.html":{}}}],["fetch",{"_index":65,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"dependencies.html":{},"index.html":{}}}],["fetch:(boolean",{"_index":906,"title":{},"body":{"index.html":{}}}],["fetchinstrumentation",{"_index":66,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["ff373c0",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["field",{"_index":587,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["fields",{"_index":1324,"title":{},"body":{"license.html":{}}}],["fifty",{"_index":1045,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"license.html":{}}}],["filed",{"_index":1177,"title":{},"body":{"license.html":{}}}],["files",{"_index":1063,"title":{},"body":{"license.html":{}}}],["finalize",{"_index":407,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["fitness",{"_index":1260,"title":{},"body":{"license.html":{}}}],["fix",{"_index":426,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["fixes",{"_index":615,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":1182,"title":{},"body":{"license.html":{}}}],["forget",{"_index":626,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["form",{"_index":1056,"title":{},"body":{"license.html":{}}}],["format",{"_index":1332,"title":{},"body":{"license.html":{}}}],["forroot",{"_index":504,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["forroot(config",{"_index":505,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["free",{"_index":1139,"title":{},"body":{"license.html":{}}}],["functions",{"_index":938,"title":{},"body":{"index.html":{}}}],["generally",{"_index":911,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1070,"title":{},"body":{"license.html":{}}}],["getexporter",{"_index":219,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["getpropagator",{"_index":156,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{}}}],["getting",{"_index":593,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["gettracer(name",{"_index":462,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["geturl",{"_index":348,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["github",{"_index":631,"title":{},"body":{"changelog.html":{}}}],["give",{"_index":244,"title":{},"body":{"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"license.html":{}}}],["global",{"_index":857,"title":{},"body":{"index.html":{}}}],["going",{"_index":931,"title":{},"body":{"index.html":{}}}],["goodwill",{"_index":1289,"title":{},"body":{"license.html":{}}}],["governing",{"_index":1345,"title":{},"body":{"license.html":{}}}],["grant",{"_index":1130,"title":{},"body":{"license.html":{}}}],["granted",{"_index":1055,"title":{},"body":{"license.html":{}}}],["granting",{"_index":1024,"title":{},"body":{"license.html":{}}}],["grants",{"_index":1132,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1347,"title":{},"body":{"modules.html":{}}}],["grossly",{"_index":1277,"title":{},"body":{"license.html":{}}}],["guidelines",{"_index":602,"title":{},"body":{"changelog.html":{}}}],["harmless",{"_index":1316,"title":{},"body":{"license.html":{}}}],["header",{"_index":20,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["headers",{"_index":96,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["here",{"_index":974,"title":{},"body":{"index.html":{},"todo.html":{}}}],["hereby",{"_index":1131,"title":{},"body":{"license.html":{}}}],["herein",{"_index":1228,"title":{},"body":{"license.html":{}}}],["hhttps://github.com/open",{"_index":904,"title":{},"body":{"index.html":{}}}],["highlight",{"_index":839,"title":{},"body":{"dependencies.html":{}}}],["hold",{"_index":1315,"title":{},"body":{"license.html":{}}}],["hostname",{"_index":370,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["html",{"_index":545,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["http",{"_index":198,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{}}}],["http.host",{"_index":471,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor",{"_index":512,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["http.interceptor.ts",{"_index":344,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{}}}],["http.interceptor.ts:149",{"_index":367,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:157",{"_index":373,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:186",{"_index":377,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:206",{"_index":380,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:218",{"_index":381,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:237",{"_index":361,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:253",{"_index":356,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:264",{"_index":391,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:48",{"_index":397,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:52",{"_index":394,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:56",{"_index":354,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:96",{"_index":385,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.method",{"_index":467,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.scheme",{"_index":473,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.status_code",{"_index":437,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.status_text",{"_index":439,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.target",{"_index":474,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.url",{"_index":469,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.user_agent",{"_index":477,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http://localhost:16686",{"_index":973,"title":{},"body":{"index.html":{}}}],["http://localhost:4200",{"_index":963,"title":{},"body":{"index.html":{}}}],["http://localhost:4200/api",{"_index":890,"title":{},"body":{"index.html":{}}}],["http://localhost:55681/v1/trace",{"_index":94,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["http://localhost:9411/api/v2/spans",{"_index":102,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["http://www.apache.org/licenses",{"_index":1009,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":1342,"title":{},"body":{"license.html":{}}}],["http_interceptors",{"_index":509,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["httpclient",{"_index":867,"title":{},"body":{"index.html":{}}}],["httpclientmodule",{"_index":510,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["httperrorresponse",{"_index":233,"title":{},"body":{"interfaces/CustomSpan.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["httpevent",{"_index":398,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httphandler",{"_index":384,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httpinterceptor",{"_index":228,"title":{},"body":{"interfaces/CustomSpan.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["httprequest",{"_index":231,"title":{},"body":{"interfaces/CustomSpan.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["httpresponse",{"_index":232,"title":{},"body":{"interfaces/CustomSpan.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["https://angular.io/guide/build#configuring",{"_index":985,"title":{},"body":{"index.html":{}}}],["https://github.com/open",{"_index":901,"title":{},"body":{"index.html":{}}}],["https://jufab.github.io/opentelemetry",{"_index":853,"title":{},"body":{"index.html":{}}}],["httptextpropagator",{"_index":250,"title":{},"body":{"interfaces/IPropagator.html":{}}}],["httptracecontext",{"_index":241,"title":{},"body":{"injectables/HttpTraceContextPropagatorService.html":{},"index.html":{}}}],["httptracecontextpropagatormodule",{"_index":238,"title":{"modules/HttpTraceContextPropagatorModule.html":{}},"body":{"modules/HttpTraceContextPropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["httptracecontextpropagatorservice",{"_index":192,"title":{"injectables/HttpTraceContextPropagatorService.html":{}},"body":{"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"coverage.html":{}}}],["id",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["identification",{"_index":1336,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":809,"title":{},"body":{"coverage.html":{}}}],["identifying",{"_index":1328,"title":{},"body":{"license.html":{}}}],["ienvironment",{"_index":888,"title":{},"body":{"index.html":{}}}],["iexporter",{"_index":223,"title":{"interfaces/IExporter.html":{}},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["ii",{"_index":1043,"title":{},"body":{"license.html":{}}}],["iii",{"_index":1050,"title":{},"body":{"license.html":{}}}],["implement",{"_index":946,"title":{},"body":{"index.html":{}}}],["implementation",{"_index":249,"title":{},"body":{"interfaces/IPropagator.html":{},"index.html":{}}}],["implements",{"_index":177,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"components/OtelWebTracerComponent.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["implied",{"_index":1256,"title":{},"body":{"license.html":{}}}],["import",{"_index":26,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{},"license.html":{}}}],["imports",{"_index":141,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{}}}],["improving",{"_index":1119,"title":{},"body":{"license.html":{}}}],["inability",{"_index":1287,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":1283,"title":{},"body":{"license.html":{}}}],["include",{"_index":1092,"title":{},"body":{"license.html":{}}}],["included",{"_index":1079,"title":{},"body":{"license.html":{}}}],["includes",{"_index":1199,"title":{},"body":{"license.html":{}}}],["including",{"_index":1060,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":1102,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":1128,"title":{},"body":{"license.html":{}}}],["incurred",{"_index":1317,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":1313,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":1304,"title":{},"body":{"license.html":{}}}],["index",{"_index":11,"title":{"index.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"miscellaneous/variables.html":{}}}],["indicated",{"_index":1077,"title":{},"body":{"license.html":{}}}],["indirect",{"_index":1037,"title":{},"body":{"license.html":{}}}],["individual",{"_index":1052,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["information",{"_index":151,"title":{},"body":{"injectables/B3PropagatorService.html":{},"license.html":{}}}],["informational",{"_index":1210,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":1159,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":1173,"title":{},"body":{"license.html":{}}}],["init",{"_index":272,"title":{},"body":{"injectables/InstrumentationService.html":{},"components/OtelWebTracerComponent.html":{}}}],["initialise",{"_index":374,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["initinstrumentation",{"_index":260,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["initspan",{"_index":349,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["initspan(request",{"_index":372,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject",{"_index":171,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["inject(b3propagatorservice",{"_index":203,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(custom_span",{"_index":415,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject(httptracecontextpropagatorservice",{"_index":204,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(jaegerhttptracepropagatorservice",{"_index":205,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(opentelemetryinjectconfig",{"_index":413,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{}}}],["inject(otelcol_exporter",{"_index":302,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject(otelcol_logger",{"_index":414,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject(otelcol_propagator",{"_index":303,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injectable",{"_index":146,"title":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["injectables",{"_index":147,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"overview.html":{}}}],["injectcontextandheader",{"_index":350,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injectcontextandheader(request",{"_index":376,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injected",{"_index":227,"title":{},"body":{"interfaces/CustomSpan.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injectencoding",{"_index":181,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["injection",{"_index":113,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":27,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["injectiontoken('opentelemetry.config",{"_index":116,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('otelcol.custom",{"_index":122,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('otelcol.exporter",{"_index":246,"title":{},"body":{"interfaces/IExporter.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('otelcol.logger",{"_index":120,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('otelcol.propagator",{"_index":251,"title":{},"body":{"interfaces/IPropagator.html":{},"miscellaneous/variables.html":{}}}],["inmplementation",{"_index":245,"title":{},"body":{"interfaces/IExporter.html":{}}}],["insert",{"_index":275,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["insertconsolespanexporter",{"_index":261,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertconsolespanexporter(console",{"_index":273,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["insertspanprocessorproductionmode",{"_index":262,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertspanprocessorproductionmode(production",{"_index":278,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["install",{"_index":871,"title":{},"body":{"index.html":{}}}],["installation",{"_index":856,"title":{},"body":{"index.html":{}}}],["institute",{"_index":1163,"title":{},"body":{"license.html":{}}}],["instrumentation",{"_index":58,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["instrumentationconfig",{"_index":59,"title":{"interfaces/InstrumentationConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["instrumentationconfig?.documentload",{"_index":320,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["instrumentationconfig?.fetch",{"_index":321,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["instrumentationconfig?.xmlhttprequest",{"_index":319,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["instrumentationoption",{"_index":286,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["instrumentationoptions",{"_index":256,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["instrumentations",{"_index":311,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["instrumentationservice",{"_index":252,"title":{"injectables/InstrumentationService.html":{}},"body":{"injectables/InstrumentationService.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"coverage.html":{}}}],["intentionally",{"_index":1100,"title":{},"body":{"license.html":{}}}],["intercept",{"_index":351,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["intercept(request",{"_index":382,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["intercepted",{"_index":375,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["interception",{"_index":236,"title":{},"body":{"interfaces/CustomSpan.html":{},"index.html":{}}}],["interceptor",{"_index":340,"title":{"interceptors/OpenTelemetryHttpInterceptor.html":{}},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{}}}],["interceptor.js",{"_index":978,"title":{},"body":{"index.html":{}}}],["interceptor.module.ts",{"_index":503,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor.module.ts:30",{"_index":506,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/custom",{"_index":34,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["interceptor/opentelemetry",{"_index":511,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/src/lib/component/otel",{"_index":528,"title":{},"body":{"components/OtelWebTracerComponent.html":{},"coverage.html":{}}}],["interceptor/src/lib/configuration/opentelemetry",{"_index":7,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptor/src/lib/interceptor/custom",{"_index":225,"title":{},"body":{"interfaces/CustomSpan.html":{},"coverage.html":{}}}],["interceptor/src/lib/interceptor/opentelemetry",{"_index":343,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{}}}],["interceptor/src/lib/opentelemetry",{"_index":502,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/src/lib/otel",{"_index":561,"title":{},"body":{"modules/OtelWebTracerModule.html":{}}}],["interceptor/src/lib/services/exporter/console/console",{"_index":211,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/exporter.interface.ts",{"_index":242,"title":{},"body":{"interfaces/IExporter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptor/src/lib/services/exporter/exporter.interface.ts:12",{"_index":243,"title":{},"body":{"interfaces/IExporter.html":{}}}],["interceptor/src/lib/services/exporter/otelcol/otelcol",{"_index":521,"title":{},"body":{"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/zipkin/zipkin",{"_index":582,"title":{},"body":{"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts",{"_index":253,"title":{},"body":{"injectables/InstrumentationService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:103",{"_index":267,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:26",{"_index":288,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:31",{"_index":285,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:36",{"_index":265,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:53",{"_index":271,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:74",{"_index":274,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:88",{"_index":279,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/propagator/b3",{"_index":129,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/composite",{"_index":187,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/http",{"_index":239,"title":{},"body":{"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/jaeger",{"_index":323,"title":{},"body":{"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/noop",{"_index":331,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/propagator.interface.ts",{"_index":247,"title":{},"body":{"interfaces/IPropagator.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptor/src/lib/services/propagator/propagator.interface.ts:12",{"_index":248,"title":{},"body":{"interfaces/IPropagator.html":{}}}],["interceptor/src/public",{"_index":926,"title":{},"body":{"index.html":{}}}],["interceptors",{"_index":342,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["interface",{"_index":0,"title":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"license.html":{},"overview.html":{}}}],["interval",{"_index":80,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["ipropagator",{"_index":172,"title":{"interfaces/IPropagator.html":{}},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{}}}],["irrevocable",{"_index":1140,"title":{},"body":{"license.html":{}}}],["issue",{"_index":1114,"title":{},"body":{"license.html":{}}}],["issue#38",{"_index":610,"title":{},"body":{"changelog.html":{}}}],["issue#4",{"_index":616,"title":{},"body":{"changelog.html":{}}}],["issue#42",{"_index":620,"title":{},"body":{"changelog.html":{}}}],["it's",{"_index":164,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{},"todo.html":{}}}],["jaeger",{"_index":201,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{}}}],["jaegerhttppropagator",{"_index":918,"title":{},"body":{"index.html":{}}}],["jaegerhttptracepropagator",{"_index":325,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["jaegerhttptracepropagator(this.customheader",{"_index":329,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["jaegerhttptracepropagatormodule",{"_index":322,"title":{"modules/JaegerHttpTracePropagatorModule.html":{}},"body":{"modules/JaegerHttpTracePropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["jaegerhttptracepropagatorservice",{"_index":193,"title":{"injectables/JaegerHttpTracePropagatorService.html":{}},"body":{"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["jaegerpropagator",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["jaegerpropagatorconfig",{"_index":104,"title":{"interfaces/JaegerPropagatorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["january",{"_index":1007,"title":{},"body":{"license.html":{}}}],["jest",{"_index":714,"title":{},"body":{"changelog.html":{}}}],["js",{"_index":657,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["js/tree/main/packages/opentelemetry",{"_index":903,"title":{},"body":{"index.html":{}}}],["json.stringify(event.body",{"_index":444,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["jsonp",{"_index":795,"title":{},"body":{"changelog.html":{}}}],["jufab/opentelemetry",{"_index":847,"title":{},"body":{"index.html":{}}}],["key",{"_index":103,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["kind",{"_index":1254,"title":{},"body":{"license.html":{}}}],["language",{"_index":1344,"title":{},"body":{"license.html":{}}}],["last",{"_index":909,"title":{},"body":{"index.html":{}}}],["law",{"_index":1249,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":1169,"title":{},"body":{"license.html":{}}}],["legal",{"_index":1025,"title":{},"body":{"license.html":{}}}],["legend",{"_index":544,"title":{},"body":{"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"overview.html":{}}}],["level",{"_index":55,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["liability",{"_index":1272,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1280,"title":{},"body":{"license.html":{}}}],["library",{"_index":848,"title":{},"body":{"index.html":{}}}],["licensable",{"_index":1157,"title":{},"body":{"license.html":{}}}],["license",{"_index":1004,"title":{"license.html":{}},"body":{"license.html":{}}}],["license.you",{"_index":1217,"title":{},"body":{"license.html":{}}}],["licensed",{"_index":1339,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":1174,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":1019,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":1257,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":1346,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1061,"title":{},"body":{"license.html":{}}}],["link",{"_index":617,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["list",{"_index":900,"title":{},"body":{"index.html":{}}}],["lists",{"_index":1112,"title":{},"body":{"license.html":{}}}],["literal",{"_index":580,"title":{},"body":{"interfaces/ZipkinCollectorConfig.html":{}}}],["litigation",{"_index":1164,"title":{},"body":{"license.html":{}}}],["load",{"_index":296,"title":{},"body":{"injectables/InstrumentationService.html":{},"dependencies.html":{},"index.html":{}}}],["loaded",{"_index":517,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["lock",{"_index":648,"title":{},"body":{"changelog.html":{}}}],["log",{"_index":50,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["logbody",{"_index":54,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["logger",{"_index":117,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["loggermodule",{"_index":941,"title":{},"body":{"index.html":{}}}],["loggermodule.forroot(environment.loggerconfig",{"_index":942,"title":{},"body":{"index.html":{}}}],["logging",{"_index":694,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["loglevel",{"_index":57,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["loglevel:diagloglevel.all",{"_index":881,"title":{},"body":{"index.html":{}}}],["long",{"_index":86,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["loss",{"_index":1288,"title":{},"body":{"license.html":{}}}],["losses",{"_index":1295,"title":{},"body":{"license.html":{}}}],["made",{"_index":1076,"title":{},"body":{"license.html":{}}}],["mailing",{"_index":1111,"title":{},"body":{"license.html":{}}}],["main",{"_index":635,"title":{},"body":{"changelog.html":{}}}],["make",{"_index":1151,"title":{},"body":{"license.html":{}}}],["making",{"_index":1058,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":1293,"title":{},"body":{"license.html":{}}}],["managed",{"_index":1116,"title":{},"body":{"license.html":{}}}],["management",{"_index":1039,"title":{},"body":{"license.html":{}}}],["manager",{"_index":395,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["map",{"_index":334,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["marked",{"_index":1122,"title":{},"body":{"license.html":{}}}],["marks",{"_index":1238,"title":{},"body":{"license.html":{}}}],["matching",{"_index":124,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["maxexportbatchsize",{"_index":79,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["maximum",{"_index":69,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["maxqueuesize",{"_index":75,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["mean",{"_index":1016,"title":{},"body":{"license.html":{}}}],["means",{"_index":1034,"title":{},"body":{"license.html":{}}}],["mechanical",{"_index":1066,"title":{},"body":{"license.html":{}}}],["media",{"_index":1072,"title":{},"body":{"license.html":{}}}],["medium",{"_index":1180,"title":{},"body":{"license.html":{}}}],["meet",{"_index":1181,"title":{},"body":{"license.html":{}}}],["member",{"_index":995,"title":{},"body":{"index.html":{}}}],["merchantability",{"_index":1259,"title":{},"body":{"license.html":{}}}],["merely",{"_index":1095,"title":{},"body":{"license.html":{}}}],["merge",{"_index":719,"title":{},"body":{"changelog.html":{}}}],["message",{"_index":451,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["metadata",{"_index":534,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["method",{"_index":387,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{}}}],["methods",{"_index":153,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["miscellaneous",{"_index":1355,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":281,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["modifications",{"_index":1059,"title":{},"body":{"license.html":{}}}],["modified",{"_index":1186,"title":{},"body":{"license.html":{}}}],["modify",{"_index":1211,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":1216,"title":{},"body":{"license.html":{}}}],["module",{"_index":126,"title":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/OtelWebTracerModule.html":{},"modules/ZipkinExporterModule.html":{}},"body":{"modules/OtelWebTracerModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":128,"title":{"modules.html":{}},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/OtelWebTracerModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":507,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["more",{"_index":150,"title":{},"body":{"injectables/B3PropagatorService.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["multi",{"_index":19,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["multiheader",{"_index":14,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["name",{"_index":40,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/CustomSpan.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["named",{"_index":933,"title":{},"body":{"index.html":{}}}],["names",{"_index":1237,"title":{},"body":{"license.html":{}}}],["namespace",{"_index":992,"title":{},"body":{"index.html":{}}}],["necessarily",{"_index":1158,"title":{},"body":{"license.html":{}}}],["need",{"_index":907,"title":{},"body":{"index.html":{}}}],["negligence",{"_index":1275,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":1278,"title":{},"body":{"license.html":{}}}],["new",{"_index":115,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":383,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["next.handle(tracedreq).pipe",{"_index":434,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["ngcc",{"_index":726,"title":{},"body":{"changelog.html":{}}}],["ngmodule",{"_index":132,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/OtelWebTracerModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{}}}],["ngoninit",{"_index":536,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["ngx",{"_index":838,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ngxlogger",{"_index":859,"title":{},"body":{"index.html":{}}}],["nodejs",{"_index":993,"title":{},"body":{"index.html":{}}}],["non",{"_index":1135,"title":{},"body":{"license.html":{}}}],["noop",{"_index":336,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{}}}],["noophttptextpropagatormodule",{"_index":916,"title":{},"body":{"index.html":{}}}],["noophttptextpropagatorservice",{"_index":337,"title":{},"body":{"injectables/NoopTextMapPropagatorService.html":{}}}],["nooptextmappropagator",{"_index":339,"title":{},"body":{"injectables/NoopTextMapPropagatorService.html":{}}}],["nooptextmappropagatormodule",{"_index":330,"title":{"modules/NoopTextMapPropagatorModule.html":{}},"body":{"modules/NoopTextMapPropagatorModule.html":{},"modules.html":{}}}],["nooptextmappropagatorservice",{"_index":335,"title":{"injectables/NoopTextMapPropagatorService.html":{}},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["normally",{"_index":1208,"title":{},"body":{"license.html":{}}}],["notable",{"_index":596,"title":{},"body":{"changelog.html":{}}}],["nothing",{"_index":876,"title":{},"body":{"index.html":{},"license.html":{}}}],["notice",{"_index":1078,"title":{},"body":{"license.html":{}}}],["notices",{"_index":1189,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":1226,"title":{},"body":{"license.html":{}}}],["npm",{"_index":870,"title":{},"body":{"index.html":{}}}],["null",{"_index":442,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["number",{"_index":358,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["o",{"_index":24,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["object",{"_index":1064,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":1305,"title":{},"body":{"license.html":{}}}],["observable",{"_index":389,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["obtain",{"_index":1341,"title":{},"body":{"license.html":{}}}],["offer",{"_index":1152,"title":{},"body":{"license.html":{}}}],["offers",{"_index":862,"title":{},"body":{"index.html":{}}}],["ok",{"_index":765,"title":{},"body":{"changelog.html":{}}}],["one",{"_index":919,"title":{},"body":{"index.html":{},"license.html":{}}}],["oninit",{"_index":533,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["open",{"_index":962,"title":{},"body":{"index.html":{}}}],["opentelemetry",{"_index":56,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["opentelemetry/api",{"_index":32,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/CustomSpan.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"dependencies.html":{},"index.html":{}}}],["opentelemetry/context",{"_index":289,"title":{},"body":{"injectables/InstrumentationService.html":{},"dependencies.html":{},"index.html":{}}}],["opentelemetry/core",{"_index":197,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["opentelemetry/exporter",{"_index":573,"title":{},"body":{"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"dependencies.html":{},"index.html":{}}}],["opentelemetry/instrumentation",{"_index":294,"title":{},"body":{"injectables/InstrumentationService.html":{},"dependencies.html":{},"index.html":{}}}],["opentelemetry/propagator",{"_index":173,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"dependencies.html":{},"index.html":{}}}],["opentelemetry/tracing",{"_index":224,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["opentelemetry/web",{"_index":299,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"dependencies.html":{},"index.html":{}}}],["opentelemetryconfig",{"_index":107,"title":{"interfaces/OpenTelemetryConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"index.html":{}}}],["opentelemetryhttpinterceptor",{"_index":341,"title":{"interceptors/OpenTelemetryHttpInterceptor.html":{}},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"coverage.html":{}}}],["opentelemetryinjectconfig",{"_index":111,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["opentelemetryinterceptor",{"_index":345,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["opentelemetryinterceptormodule",{"_index":501,"title":{"modules/OpenTelemetryInterceptorModule.html":{}},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{},"modules.html":{}}}],["opentelemetryinterceptormodule.forroot(environment.opentelemetryconfig",{"_index":924,"title":{},"body":{"index.html":{}}}],["opentelemtery",{"_index":654,"title":{},"body":{"changelog.html":{}}}],["opentelemtry",{"_index":732,"title":{},"body":{"changelog.html":{}}}],["optimization",{"_index":983,"title":{},"body":{"index.html":{}}}],["option",{"_index":944,"title":{},"body":{"index.html":{}}}],["optional",{"_index":13,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/CustomSpan.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["options",{"_index":989,"title":{},"body":{"index.html":{}}}],["origin",{"_index":1244,"title":{},"body":{"license.html":{}}}],["original",{"_index":379,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"license.html":{}}}],["otel",{"_index":531,"title":{},"body":{"components/OtelWebTracerComponent.html":{},"index.html":{}}}],["otelcol",{"_index":523,"title":{},"body":{"modules/OtelColExporterModule.html":{},"changelog.html":{},"index.html":{}}}],["otelcol_exporter",{"_index":215,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"interfaces/IExporter.html":{},"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["otelcol_logger",{"_index":119,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["otelcol_propagator",{"_index":138,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["otelcolconfig",{"_index":109,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["otelcolexportermodule",{"_index":520,"title":{"modules/OtelColExporterModule.html":{}},"body":{"modules/OtelColExporterModule.html":{},"index.html":{},"modules.html":{}}}],["otelcolexporterservice",{"_index":522,"title":{"injectables/OtelcolExporterService.html":{}},"body":{"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{}}}],["otelcollectorconfig",{"_index":92,"title":{"interfaces/OtelCollectorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["otelwebtracercomponent",{"_index":524,"title":{"components/OtelWebTracerComponent.html":{}},"body":{"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"coverage.html":{},"overview.html":{}}}],["otelwebtracermodule",{"_index":552,"title":{"modules/OtelWebTracerModule.html":{}},"body":{"modules/OtelWebTracerModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["otelwebtracermodule.forroot(environment.opentelemetryconfig",{"_index":927,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":283,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{},"license.html":{}}}],["otlp",{"_index":734,"title":{},"body":{"changelog.html":{}}}],["out",{"_index":560,"title":{},"body":{"modules/OtelWebTracerModule.html":{},"license.html":{},"overview.html":{}}}],["outstanding",{"_index":1048,"title":{},"body":{"license.html":{}}}],["overide",{"_index":386,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["overview",{"_index":1350,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":1021,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":1044,"title":{},"body":{"license.html":{}}}],["package",{"_index":647,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["page",{"_index":1334,"title":{},"body":{"license.html":{}}}],["param",{"_index":178,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CustomSpan.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"components/OtelWebTracerComponent.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["parameter",{"_index":680,"title":{},"body":{"changelog.html":{}}}],["parameters",{"_index":161,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/CustomSpan.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["parent",{"_index":749,"title":{},"body":{"changelog.html":{}}}],["parentbasedsampler",{"_index":405,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["parentmodule",{"_index":513,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["parser",{"_index":836,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":1197,"title":{},"body":{"license.html":{}}}],["partial",{"_index":97,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{}}}],["particular",{"_index":1261,"title":{},"body":{"license.html":{}}}],["party",{"_index":1207,"title":{},"body":{"license.html":{}}}],["patent",{"_index":1147,"title":{},"body":{"license.html":{}}}],["peer",{"_index":291,"title":{},"body":{"injectables/InstrumentationService.html":{},"dependencies.html":{},"index.html":{}}}],["peerdependencies",{"_index":672,"title":{},"body":{"changelog.html":{}}}],["percent",{"_index":1046,"title":{},"body":{"license.html":{}}}],["percentage",{"_index":879,"title":{},"body":{"index.html":{}}}],["perform",{"_index":1144,"title":{},"body":{"license.html":{}}}],["permission",{"_index":1235,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":1054,"title":{},"body":{"license.html":{}}}],["perpetual",{"_index":1133,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":1196,"title":{},"body":{"license.html":{}}}],["places",{"_index":1202,"title":{},"body":{"license.html":{}}}],["platformlocation",{"_index":353,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["plugin",{"_index":269,"title":{},"body":{"injectables/InstrumentationService.html":{},"index.html":{}}}],["plugins",{"_index":869,"title":{},"body":{"index.html":{}}}],["port",{"_index":371,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["possibilities",{"_index":863,"title":{},"body":{"index.html":{}}}],["possibility",{"_index":1298,"title":{},"body":{"license.html":{}}}],["power",{"_index":1035,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":1057,"title":{},"body":{"license.html":{}}}],["prepare",{"_index":1142,"title":{},"body":{"license.html":{},"todo.html":{}}}],["previous",{"_index":700,"title":{},"body":{"changelog.html":{}}}],["printed",{"_index":1333,"title":{},"body":{"license.html":{}}}],["private",{"_index":152,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["probability",{"_index":362,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{}}}],["probabilitysampler",{"_index":49,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["problem",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["product",{"_index":1239,"title":{},"body":{"license.html":{}}}],["production",{"_index":45,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["progress",{"_index":770,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["project",{"_index":598,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{}}}],["projects/.../exporter.interface.ts",{"_index":1358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../opentelemetry",{"_index":1357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../propagator.interface.ts",{"_index":1359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/instrumentation",{"_index":955,"title":{},"body":{"index.html":{}}}],["projects/interceptor",{"_index":954,"title":{},"body":{"index.html":{}}}],["projects/opentelemetry",{"_index":6,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["prominent",{"_index":1188,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":908,"title":{},"body":{"index.html":{}}}],["propagator",{"_index":105,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["propagator.interface",{"_index":139,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{}}}],["propagator.module.ts",{"_index":131,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{}}}],["propagator.service",{"_index":137,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{}}}],["propagator.service.ts",{"_index":148,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["propagator.service.ts:14",{"_index":194,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["propagator.service.ts:16",{"_index":338,"title":{},"body":{"injectables/NoopTextMapPropagatorService.html":{}}}],["propagator.service.ts:17",{"_index":240,"title":{},"body":{"injectables/HttpTraceContextPropagatorService.html":{}}}],["propagator.service.ts:18",{"_index":324,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["propagator.service.ts:24",{"_index":160,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["propagator.service.ts:31",{"_index":195,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{}}}],["propagator.service.ts:41",{"_index":163,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["propagator.service.ts:52",{"_index":168,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["propagator/b3",{"_index":130,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["propagator/composite",{"_index":188,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["propagator/http",{"_index":200,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"coverage.html":{}}}],["propagator/jaeger",{"_index":202,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["propagator/noop",{"_index":333,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["propagator/propagator.interface",{"_index":301,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["propagators",{"_index":206,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"index.html":{}}}],["propagatorservice",{"_index":264,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["properties",{"_index":12,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{}}}],["protocol",{"_index":637,"title":{},"body":{"changelog.html":{}}}],["provide",{"_index":143,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/OtelWebTracerModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{},"license.html":{}}}],["provided",{"_index":1081,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":175,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["providers",{"_index":142,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/OtelWebTracerModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{},"overview.html":{}}}],["provides",{"_index":1251,"title":{},"body":{"license.html":{}}}],["public",{"_index":259,"title":{},"body":{"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["publicly",{"_index":1143,"title":{},"body":{"license.html":{}}}],["publish",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":1117,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":1032,"title":{},"body":{"license.html":{}}}],["queue",{"_index":70,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["rc.0",{"_index":835,"title":{},"body":{"dependencies.html":{}}}],["reached",{"_index":72,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["readable",{"_index":1200,"title":{},"body":{"license.html":{}}}],["readme",{"_index":653,"title":{},"body":{"changelog.html":{}}}],["reason",{"_index":1319,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":1241,"title":{},"body":{"license.html":{}}}],["received",{"_index":1126,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":1183,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":898,"title":{},"body":{"index.html":{},"license.html":{}}}],["record",{"_index":705,"title":{},"body":{"changelog.html":{}}}],["redistributing",{"_index":1267,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":1178,"title":{},"body":{"license.html":{}}}],["redo",{"_index":690,"title":{},"body":{"changelog.html":{}}}],["regarding",{"_index":1233,"title":{},"body":{"license.html":{}}}],["registerinstrumentations",{"_index":293,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["reinit",{"_index":427,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["release",{"_index":738,"title":{},"body":{"changelog.html":{}}}],["remain",{"_index":1093,"title":{},"body":{"license.html":{}}}],["rename",{"_index":633,"title":{},"body":{"changelog.html":{}}}],["replaced",{"_index":1327,"title":{},"body":{"license.html":{}}}],["represent",{"_index":1090,"title":{},"body":{"license.html":{}}}],["representatives",{"_index":1110,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":1141,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":1245,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":1012,"title":{},"body":{"license.html":{}}}],["request",{"_index":230,"title":{},"body":{"interfaces/CustomSpan.html":{},"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"dependencies.html":{},"index.html":{}}}],["request.clone",{"_index":488,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.headers.get(key",{"_index":487,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.headers.keys().map(key",{"_index":485,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.method",{"_index":468,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.method.touppercase",{"_index":466,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.params",{"_index":949,"title":{},"body":{"index.html":{}}}],["request.urlwithparams",{"_index":470,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.urlwithparams.startswith('http",{"_index":459,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["requestconfiguration",{"_index":872,"title":{},"body":{"index.html":{}}}],["required",{"_index":1240,"title":{},"body":{"license.html":{}}}],["reset",{"_index":559,"title":{},"body":{"modules/OtelWebTracerModule.html":{},"changelog.html":{},"overview.html":{}}}],["response",{"_index":52,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/CustomSpan.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["response.status",{"_index":950,"title":{},"body":{"index.html":{}}}],["responsibility",{"_index":1311,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":1263,"title":{},"body":{"license.html":{}}}],["restart",{"_index":621,"title":{},"body":{"changelog.html":{}}}],["result",{"_index":123,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["resulting",{"_index":1065,"title":{},"body":{"license.html":{}}}],["results",{"_index":125,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":1193,"title":{},"body":{"license.html":{}}}],["return",{"_index":169,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["returns",{"_index":166,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["review",{"_index":686,"title":{},"body":{"changelog.html":{}}}],["revisions",{"_index":1087,"title":{},"body":{"license.html":{}}}],["rights",{"_index":1307,"title":{},"body":{"license.html":{}}}],["risks",{"_index":1269,"title":{},"body":{"license.html":{}}}],["root",{"_index":176,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["royalty",{"_index":1138,"title":{},"body":{"license.html":{}}}],["run",{"_index":87,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["rxjs",{"_index":399,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":408,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["same",{"_index":928,"title":{},"body":{"index.html":{},"license.html":{}}}],["sample",{"_index":366,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["sampleconfig",{"_index":365,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["sampler",{"_index":363,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["samples",{"_index":878,"title":{},"body":{"index.html":{}}}],["sampling",{"_index":767,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["scheduleddelaymillis",{"_index":85,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["scheme",{"_index":369,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["section",{"_index":1150,"title":{},"body":{"license.html":{}}}],["sections",{"_index":1017,"title":{},"body":{"license.html":{}}}],["see",{"_index":149,"title":{},"body":{"injectables/B3PropagatorService.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["selector",{"_index":535,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["sell",{"_index":1153,"title":{},"body":{"license.html":{}}}],["send",{"_index":875,"title":{},"body":{"index.html":{}}}],["sending",{"_index":976,"title":{},"body":{"index.html":{}}}],["sent",{"_index":1109,"title":{},"body":{"license.html":{}}}],["separable",{"_index":1094,"title":{},"body":{"license.html":{}}}],["separate",{"_index":1230,"title":{},"body":{"license.html":{}}}],["service",{"_index":41,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{},"license.html":{}}}],["servicename",{"_index":39,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["services/exporter/exporter.interface",{"_index":411,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["services/instrumentation/instrumentation.service",{"_index":540,"title":{},"body":{"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{}}}],["services/propagator/propagator.interface",{"_index":412,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["set",{"_index":392,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["setcustomspan",{"_index":352,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["setcustomspan(span",{"_index":390,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["setheaders",{"_index":489,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["shall",{"_index":1015,"title":{},"body":{"license.html":{}}}],["shares",{"_index":1049,"title":{},"body":{"license.html":{}}}],["simplespanexporter(sync",{"_index":48,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["simplespanprocessor",{"_index":282,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["simplespanprocessor(exporter.getexporter",{"_index":317,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["simplespanprocessor(new",{"_index":315,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["simplespanprocessor(this.exporterservice.getexporter",{"_index":498,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["single",{"_index":18,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["size",{"_index":71,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["skipself",{"_index":508,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["smaller",{"_index":77,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["software",{"_index":1062,"title":{},"body":{"license.html":{}}}],["sole",{"_index":1310,"title":{},"body":{"license.html":{}}}],["solely",{"_index":1262,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"license.html":{}}}],["span",{"_index":53,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["span.addevent('response",{"_index":443,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.end",{"_index":456,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.interface",{"_index":35,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["span.interface.ts",{"_index":226,"title":{},"body":{"interfaces/CustomSpan.html":{},"coverage.html":{}}}],["span.interface.ts:15",{"_index":234,"title":{},"body":{"interfaces/CustomSpan.html":{}}}],["span.recordexception",{"_index":449,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.setattribute('mycustom.key",{"_index":948,"title":{},"body":{"index.html":{}}}],["span.setattributes",{"_index":436,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.setstatus",{"_index":445,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["spanattributes",{"_index":30,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["spanexporter",{"_index":222,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["spans",{"_index":73,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["spanstatuscode",{"_index":400,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["spanstatuscode.error",{"_index":455,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["spanstatuscode.ok",{"_index":447,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["special",{"_index":1282,"title":{},"body":{"license.html":{}}}],["specific",{"_index":1343,"title":{},"body":{"license.html":{}}}],["stack",{"_index":453,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["stackcontextmanager",{"_index":393,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["standard",{"_index":600,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":958,"title":{},"body":{"index.html":{}}}],["start:complete",{"_index":960,"title":{},"body":{"index.html":{}}}],["started",{"_index":594,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["startspan",{"_index":463,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["state",{"_index":1225,"title":{},"body":{"license.html":{}}}],["stated",{"_index":1149,"title":{},"body":{"license.html":{}}}],["statement",{"_index":1218,"title":{},"body":{"license.html":{}}}],["statements",{"_index":810,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":154,"title":{},"body":{"injectables/B3PropagatorService.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["stating",{"_index":1190,"title":{},"body":{"license.html":{}}}],["stoppage",{"_index":1290,"title":{},"body":{"license.html":{}}}],["string",{"_index":15,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["subject",{"_index":794,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["sublicense",{"_index":1145,"title":{},"body":{"license.html":{}}}],["submission",{"_index":1221,"title":{},"body":{"license.html":{}}}],["submit",{"_index":1103,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":1101,"title":{},"body":{"license.html":{}}}],["subsequently",{"_index":1127,"title":{},"body":{"license.html":{}}}],["such",{"_index":1040,"title":{},"body":{"license.html":{}}}],["supersede",{"_index":1229,"title":{},"body":{"license.html":{}}}],["support",{"_index":1303,"title":{},"body":{"license.html":{},"modules.html":{}}}],["svg",{"_index":1349,"title":{},"body":{"modules.html":{}}}],["sync",{"_index":897,"title":{},"body":{"index.html":{}}}],["syntax",{"_index":1331,"title":{},"body":{"license.html":{}}}],["systems",{"_index":1113,"title":{},"body":{"license.html":{}}}],["table",{"_index":823,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":822,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":406,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["task",{"_index":1352,"title":{},"body":{"todo.html":{}}}],["telemetry/opentelemetry",{"_index":902,"title":{},"body":{"index.html":{}}}],["template",{"_index":541,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["terminate",{"_index":1175,"title":{},"body":{"license.html":{}}}],["terms",{"_index":1010,"title":{},"body":{"license.html":{}}}],["test",{"_index":629,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["text",{"_index":332,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{},"license.html":{}}}],["textmappropagator",{"_index":170,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{}}}],["theory",{"_index":1273,"title":{},"body":{"license.html":{}}}],["there's",{"_index":965,"title":{},"body":{"index.html":{}}}],["thereof",{"_index":1097,"title":{},"body":{"license.html":{}}}],["third",{"_index":1206,"title":{},"body":{"license.html":{}}}],["this.addinstrumentationplugin(this.config.instrumentationconfig",{"_index":307,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.b3propagatorconfig",{"_index":180,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["this.b3propagatorservice.getpropagator",{"_index":207,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.config.commonconfig.console",{"_index":490,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.config.commonconfig.production",{"_index":496,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager",{"_index":309,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager._currentcontext",{"_index":480,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager.active",{"_index":479,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager.disable",{"_index":425,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager.enable",{"_index":430,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.convertstringtonumber(this.config.batchspanprocessorconfig?.exporttimeoutmillis",{"_index":494,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.convertstringtonumber(this.config.batchspanprocessorconfig?.maxexportbatchsize",{"_index":492,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.convertstringtonumber(this.config.batchspanprocessorconfig?.maxqueuesize",{"_index":495,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.convertstringtonumber(this.config.batchspanprocessorconfig?.scheduleddelaymillis",{"_index":493,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.customheader",{"_index":327,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["this.customspan",{"_index":499,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.customspan.add(span",{"_index":500,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.defineprobabilitysampler(this.convertstringtonumber(config.commonconfig.probabilitysampler",{"_index":417,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.exporterservice",{"_index":306,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.httptracecontextpropagatorservice.getpropagator",{"_index":208,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.initspan(request",{"_index":431,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.injectcontextandheader(request",{"_index":433,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.insertconsolespanexporter",{"_index":419,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.insertconsolespanexporter(this.config.commonconfig.console",{"_index":304,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.insertspanprocessorproductionmode",{"_index":418,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.insertspanprocessorproductionmode(this.config.commonconfig.production",{"_index":305,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.instrumentationoptions",{"_index":312,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.instrumentationservice.initinstrumentation",{"_index":543,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["this.jaegerhttptracepropagatorservice.getpropagator",{"_index":209,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.logbody",{"_index":421,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.otelcolconfig",{"_index":574,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["this.platformlocation.href",{"_index":457,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.propagatorservice.getpropagator",{"_index":310,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.setcustomspan(span,request,event",{"_index":448,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer",{"_index":416,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer.addspanprocessor",{"_index":491,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer.register",{"_index":420,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracerprovider",{"_index":313,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.tracerprovider.addspanprocessor",{"_index":314,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.tracerprovider.register",{"_index":308,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.zipkinconfig",{"_index":589,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["those",{"_index":1155,"title":{},"body":{"license.html":{}}}],["three",{"_index":868,"title":{},"body":{"index.html":{}}}],["through",{"_index":1018,"title":{},"body":{"license.html":{}}}],["throw",{"_index":514,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["time",{"_index":929,"title":{},"body":{"index.html":{}}}],["timeout",{"_index":996,"title":{},"body":{"index.html":{}}}],["title",{"_index":1258,"title":{},"body":{"license.html":{}}}],["todo",{"_index":1351,"title":{"todo.html":{}},"body":{"todo.html":{}}}],["token",{"_index":936,"title":{},"body":{"index.html":{}}}],["tort",{"_index":1274,"title":{},"body":{"license.html":{}}}],["touppercase",{"_index":465,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["trace",{"_index":42,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/InstrumentationConfig.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["tracedreq",{"_index":432,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["traceid",{"_index":756,"title":{},"body":{"changelog.html":{}}}],["traceidratiobasedsampler",{"_index":404,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["tracer",{"_index":276,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"components/OtelWebTracerComponent.html":{},"index.html":{}}}],["tracerprovider",{"_index":257,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["traces",{"_index":880,"title":{},"body":{"index.html":{}}}],["tracking",{"_index":1115,"title":{},"body":{"license.html":{}}}],["trade",{"_index":1236,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":1194,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":1234,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":1154,"title":{},"body":{"license.html":{}}}],["transformation",{"_index":1067,"title":{},"body":{"license.html":{}}}],["translation",{"_index":1068,"title":{},"body":{"license.html":{}}}],["tree",{"_index":527,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["trouble",{"_index":727,"title":{},"body":{"changelog.html":{}}}],["troubleshoot",{"_index":860,"title":{},"body":{"index.html":{}}}],["true",{"_index":277,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["ts",{"_index":713,"title":{},"body":{"changelog.html":{}}}],["ts1086",{"_index":999,"title":{},"body":{"index.html":{}}}],["ts2694",{"_index":991,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":843,"title":{},"body":{"dependencies.html":{}}}],["twice",{"_index":932,"title":{},"body":{"index.html":{}}}],["two",{"_index":82,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["type",{"_index":16,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/CustomSpan.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"index.html":{}}}],["type/node",{"_index":997,"title":{},"body":{"index.html":{}}}],["types",{"_index":1073,"title":{},"body":{"license.html":{}}}],["typescript",{"_index":1003,"title":{},"body":{"index.html":{}}}],["typo",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["umdmoduleids",{"_index":673,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":359,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["under",{"_index":1031,"title":{},"body":{"license.html":{}}}],["union",{"_index":1026,"title":{},"body":{"license.html":{}}}],["unless",{"_index":1223,"title":{},"body":{"license.html":{}}}],["unused",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["up",{"_index":971,"title":{},"body":{"index.html":{}}}],["update",{"_index":641,"title":{},"body":{"changelog.html":{}}}],["upgrade",{"_index":724,"title":{},"body":{"changelog.html":{}}}],["upgrate",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["url",{"_index":93,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["url(request.urlwithparams",{"_index":460,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["url(this.geturl",{"_index":461,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest",{"_index":458,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.host",{"_index":472,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.pathname",{"_index":475,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.protocol.replace",{"_index":464,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.search",{"_index":476,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urltest",{"_index":889,"title":{},"body":{"index.html":{}}}],["use",{"_index":46,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["useclass",{"_index":144,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{}}}],["used",{"_index":923,"title":{},"body":{"index.html":{}}}],["useexisting",{"_index":943,"title":{},"body":{"index.html":{}}}],["useless",{"_index":679,"title":{},"body":{"changelog.html":{}}}],["user",{"_index":697,"title":{},"body":{"changelog.html":{}}}],["uses",{"_index":851,"title":{},"body":{"index.html":{}}}],["usevalue",{"_index":519,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["using",{"_index":1266,"title":{},"body":{"license.html":{}}}],["value",{"_index":23,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":548,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["variable",{"_index":818,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1356,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verbal",{"_index":1106,"title":{},"body":{"license.html":{}}}],["version",{"_index":409,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"license.html":{}}}],["version.json",{"_index":410,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["via",{"_index":895,"title":{},"body":{"index.html":{}}}],["void",{"_index":270,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"components/OtelWebTracerComponent.html":{}}}],["want",{"_index":964,"title":{},"body":{"index.html":{}}}],["warn",{"_index":939,"title":{},"body":{"index.html":{}}}],["warning",{"_index":861,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":1253,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1247,"title":{},"body":{"license.html":{}}}],["web",{"_index":532,"title":{},"body":{"components/OtelWebTracerComponent.html":{},"index.html":{}}}],["webtracer.component",{"_index":565,"title":{},"body":{"modules/OtelWebTracerModule.html":{}}}],["webtracer.component.ts",{"_index":530,"title":{},"body":{"components/OtelWebTracerComponent.html":{},"coverage.html":{}}}],["webtracer.component.ts:12",{"_index":538,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["webtracer.component.ts:23",{"_index":539,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["webtracer.module.ts",{"_index":562,"title":{},"body":{"modules/OtelWebTracerModule.html":{}}}],["webtracer.module.ts:24",{"_index":563,"title":{},"body":{"modules/OtelWebTracerModule.html":{}}}],["webtracer/otel",{"_index":529,"title":{},"body":{"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"coverage.html":{}}}],["webtracerprovider",{"_index":287,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["wherever",{"_index":1205,"title":{},"body":{"license.html":{}}}],["whether",{"_index":1041,"title":{},"body":{"license.html":{}}}],["whole",{"_index":1091,"title":{},"body":{"license.html":{}}}],["window.navigator.useragent",{"_index":478,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["within",{"_index":1129,"title":{},"body":{"license.html":{}}}],["without",{"_index":975,"title":{},"body":{"index.html":{},"license.html":{}}}],["work",{"_index":1074,"title":{},"body":{"license.html":{}}}],["works",{"_index":779,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["worldwide",{"_index":1134,"title":{},"body":{"license.html":{}}}],["writing",{"_index":1124,"title":{},"body":{"license.html":{}}}],["written",{"_index":1107,"title":{},"body":{"license.html":{}}}],["xml",{"_index":298,"title":{},"body":{"injectables/InstrumentationService.html":{},"dependencies.html":{},"index.html":{}}}],["xmlhttprequest",{"_index":60,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["xmlhttprequestinstrumentation",{"_index":297,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["xmlhttrequestinstrumentation",{"_index":62,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["xsrf",{"_index":796,"title":{},"body":{"changelog.html":{}}}],["xxx/fesm2015/jufab",{"_index":977,"title":{},"body":{"index.html":{}}}],["you're",{"_index":930,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":1338,"title":{},"body":{"license.html":{}}}],["zipkin",{"_index":100,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["zipkincollectorconfig",{"_index":101,"title":{"interfaces/ZipkinCollectorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["zipkinconfig",{"_index":110,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["zipkinexporter",{"_index":585,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["zipkinexporter(this.zipkinconfig",{"_index":592,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["zipkinexportermodule",{"_index":581,"title":{"modules/ZipkinExporterModule.html":{}},"body":{"modules/ZipkinExporterModule.html":{},"index.html":{},"modules.html":{}}}],["zipkinexporterservice",{"_index":583,"title":{"injectables/ZipkinExporterService.html":{}},"body":{"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["zone",{"_index":290,"title":{},"body":{"injectables/InstrumentationService.html":{},"dependencies.html":{},"index.html":{}}}],["zone.js",{"_index":845,"title":{},"body":{"dependencies.html":{}}}],["zonecontextmanager",{"_index":284,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["zoom",{"_index":558,"title":{},"body":{"modules/OtelWebTracerModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/B3PropagatorConfig.html":{"url":"interfaces/B3PropagatorConfig.html","title":"interface - B3PropagatorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  B3PropagatorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for B3PropagatorConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        multiHeader\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        multiHeader\n                                    \n                                \n                                \n                                    \n                                        multiHeader:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Single or Multi Header for b3propagator (default: multi)\nValue : 'O' (single), '1' (multi)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { DiagLogger, SpanAttributes, DiagLogLevel } from '@opentelemetry/api';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * Instrumentation Configuration\n */\nexport interface InstrumentationConfig {\n  /** xmlHttpRequest : to add XmlHttRequestInstrumentation */\n  xmlHttpRequest?: boolean;\n  /** documentLoad : to add DocumentLoadInstrumentation */\n  documentLoad?: boolean;\n  /** fetch : to add FetchInstrumentation */\n  fetch?: boolean;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: SpanAttributes;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n  /** instrumentationConfig */\n  instrumentationConfig?: InstrumentationConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTELCOL_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const CUSTOM_SPAN = new InjectionToken('otelcol.custom-span')\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/B3PropagatorModule.html":{"url":"modules/B3PropagatorModule.html","title":"module - B3PropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    B3PropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { B3PropagatorService } from './b3-propagator.service';\nimport { OTELCOL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    { provide: OTELCOL_PROPAGATOR, useClass: B3PropagatorService }\n  ]\n})\nexport class B3PropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/B3PropagatorService.html":{"url":"injectables/B3PropagatorService.html","title":"injectable - B3PropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  B3PropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                B3PropagatorService\nCan be a single or multi header.\nSee Configuration for more information\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                b3PropagatorConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                defineB3Encoding\n                            \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts:24\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            defineB3Encoding\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defineB3Encoding(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts:41\n                \n            \n\n\n            \n                \n                    Define if it's a single or multi header\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        string (0 => single header, 1 => Multi Header)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     B3InjectEncoding\n\n                    \n                    \n                        B3InjectEncoding\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts:52\n                \n            \n\n\n            \n                \n                    Return an B3Propagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as B3Propagator\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            b3PropagatorConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         B3PropagatorConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts:24\n                            \n                        \n\n                \n                    \n                        B3PropagatorConfig\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { B3Propagator, B3PropagatorConfig, B3InjectEncoding } from '@opentelemetry/propagator-b3';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n} from '../../../configuration/opentelemetry-config';\n\n/**\n * B3PropagatorService\n *\n * Can be a single or multi header.\n *\n * See Configuration for more information\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class B3PropagatorService implements IPropagator {\n  /**\n   * B3PropagatorConfig\n   */\n  private b3PropagatorConfig: B3PropagatorConfig;\n\n  /**\n   * Constructor\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OpenTelemetryInjectConfig) config: OpenTelemetryConfig) {\n    this.b3PropagatorConfig = {\n      injectEncoding: B3PropagatorService.defineB3Encoding(config.b3PropagatorConfig?.multiHeader)\n    };\n  }\n\n  /**\n   * Define if it's a single or multi header\n   * @param value string (0 => single header, 1 => Multi Header)\n   * @return B3InjectEncoding\n   */\n  private static defineB3Encoding(value: string): B3InjectEncoding {\n    if (value && '0' === value) {\n      return B3InjectEncoding.SINGLE_HEADER;\n    }\n    return B3InjectEncoding.MULTI_HEADER;\n  }\n\n  /**\n   * Return an B3Propagator\n   * @return TextMapPropagator as B3Propagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new B3Propagator(this.b3PropagatorConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BatchSpanProcessorConfig.html":{"url":"interfaces/BatchSpanProcessorConfig.html","title":"interface - BatchSpanProcessorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BatchSpanProcessorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                BatchSpanExporter Configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        exportTimeoutMillis\n                                \n                                \n                                            Optional\n                                        maxExportBatchSize\n                                \n                                \n                                            Optional\n                                        maxQueueSize\n                                \n                                \n                                            Optional\n                                        scheduledDelayMillis\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exportTimeoutMillis\n                                    \n                                \n                                \n                                    \n                                        exportTimeoutMillis:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    How long the export can run before it is cancelled \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxExportBatchSize\n                                    \n                                \n                                \n                                    \n                                        maxExportBatchSize:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The maximum batch size of every export. It must be smaller or equal to maxQueueSize. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxQueueSize\n                                    \n                                \n                                \n                                    \n                                        maxQueueSize:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The maximum queue size. After the size is reached spans are dropped. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scheduledDelayMillis\n                                    \n                                \n                                \n                                    \n                                        scheduledDelayMillis:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The interval between two consecutive exports \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { DiagLogger, SpanAttributes, DiagLogLevel } from '@opentelemetry/api';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * Instrumentation Configuration\n */\nexport interface InstrumentationConfig {\n  /** xmlHttpRequest : to add XmlHttRequestInstrumentation */\n  xmlHttpRequest?: boolean;\n  /** documentLoad : to add DocumentLoadInstrumentation */\n  documentLoad?: boolean;\n  /** fetch : to add FetchInstrumentation */\n  fetch?: boolean;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: SpanAttributes;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n  /** instrumentationConfig */\n  instrumentationConfig?: InstrumentationConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTELCOL_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const CUSTOM_SPAN = new InjectionToken('otelcol.custom-span')\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommonCollectorConfig.html":{"url":"interfaces/CommonCollectorConfig.html","title":"interface - CommonCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CommonCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                Common configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        console\n                                \n                                \n                                            Optional\n                                        logBody\n                                \n                                \n                                            Optional\n                                        logLevel\n                                \n                                \n                                            Optional\n                                        probabilitySampler\n                                \n                                \n                                            Optional\n                                        production\n                                \n                                \n                                        serviceName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        console\n                                    \n                                \n                                \n                                    \n                                        console:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    console : boolean to trace in console \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logBody\n                                    \n                                \n                                \n                                    \n                                        logBody:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    log or not body response in span \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logLevel\n                                    \n                                \n                                \n                                    \n                                        logLevel:     DiagLogLevel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DiagLogLevel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    log level for opentelemetry \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        probabilitySampler\n                                    \n                                \n                                \n                                    \n                                        probabilitySampler:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    probabilitySampler \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        production\n                                    \n                                \n                                \n                                    \n                                        production:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serviceName\n                                    \n                                \n                                \n                                    \n                                        serviceName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    serviceName : Name of service in trace \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { DiagLogger, SpanAttributes, DiagLogLevel } from '@opentelemetry/api';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * Instrumentation Configuration\n */\nexport interface InstrumentationConfig {\n  /** xmlHttpRequest : to add XmlHttRequestInstrumentation */\n  xmlHttpRequest?: boolean;\n  /** documentLoad : to add DocumentLoadInstrumentation */\n  documentLoad?: boolean;\n  /** fetch : to add FetchInstrumentation */\n  fetch?: boolean;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: SpanAttributes;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n  /** instrumentationConfig */\n  instrumentationConfig?: InstrumentationConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTELCOL_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const CUSTOM_SPAN = new InjectionToken('otelcol.custom-span')\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompositePropagatorModule.html":{"url":"modules/CompositePropagatorModule.html","title":"module - CompositePropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    CompositePropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CompositePropagatorService } from './composite-propagator.service';\nimport { OTELCOL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    { provide: OTELCOL_PROPAGATOR, useClass: CompositePropagatorService }\n  ]\n})\nexport class  CompositePropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompositePropagatorService.html":{"url":"injectables/CompositePropagatorService.html","title":"injectable - CompositePropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CompositePropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                CompositePropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(b3PropagatorService: B3PropagatorService, httpTraceContextPropagatorService: HttpTraceContextPropagatorService, jaegerHttpTracePropagatorService: JaegerHttpTracePropagatorService)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        b3PropagatorService\n                                                  \n                                                        \n                                                                        B3PropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpTraceContextPropagatorService\n                                                  \n                                                        \n                                                                        HttpTraceContextPropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jaegerHttpTracePropagatorService\n                                                  \n                                                        \n                                                                        JaegerHttpTracePropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts:31\n                \n            \n\n\n            \n                \n                    Return an CompositePropagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as CompositePropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { CompositePropagator } from '@opentelemetry/core';\nimport { B3PropagatorService } from '../b3-propagator/b3-propagator.service';\nimport { HttpTraceContextPropagatorService } from '../http-trace-context-propagator/http-trace-context-propagator.service';\nimport { JaegerHttpTracePropagatorService } from '../jaeger-http-trace-propagator/jaeger-http-trace-propagator.service';\n/**\n * CompositePropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CompositePropagatorService implements IPropagator {\n  /**\n   * Constructor\n   */\n  constructor(\n    @Inject(B3PropagatorService)\n    private b3PropagatorService: B3PropagatorService,\n    @Inject(HttpTraceContextPropagatorService)\n    private httpTraceContextPropagatorService: HttpTraceContextPropagatorService,\n    @Inject(JaegerHttpTracePropagatorService)\n    private jaegerHttpTracePropagatorService: JaegerHttpTracePropagatorService\n  ) {}\n\n  /**\n   * Return an CompositePropagator\n   * @return TextMapPropagator as CompositePropagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new CompositePropagator({\n      propagators: [\n        this.b3PropagatorService.getPropagator(),\n        this.httpTraceContextPropagatorService.getPropagator(),\n        this.jaegerHttpTracePropagatorService.getPropagator(),\n      ],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConsoleSpanExporterModule.html":{"url":"modules/ConsoleSpanExporterModule.html","title":"module - ConsoleSpanExporterModule","body":"\n                   \n\n\n\n\n    Modules\n    ConsoleSpanExporterModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ConsoleSpanExporterService } from './console-span-exporter.service';\nimport { OTELCOL_EXPORTER } from '../exporter.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    { provide: OTELCOL_EXPORTER, useClass: ConsoleSpanExporterService }\n  ]\n})\nexport class ConsoleSpanExporterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsoleSpanExporterService.html":{"url":"injectables/ConsoleSpanExporterService.html","title":"injectable - ConsoleSpanExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConsoleSpanExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.service.ts\n        \n\n            \n                Description\n            \n            \n                ConsoleSpanExporterService\nA default span exporter\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.service.ts:17\n                \n            \n\n\n            \n                \n                    Return a ConsoleSpanExporter\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IExporter } from '../exporter.interface';\nimport { SpanExporter, ConsoleSpanExporter } from '@opentelemetry/tracing';\n\n/**\n * ConsoleSpanExporterService\n * A default span exporter\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConsoleSpanExporterService implements IExporter {\n  /**\n   * Return a ConsoleSpanExporter\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter {\n    return new ConsoleSpanExporter();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CustomSpan.html":{"url":"interfaces/CustomSpan.html","title":"interface - CustomSpan","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CustomSpan\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/interceptor/custom-span.interface.ts\n        \n\n            \n                Description\n            \n            \n                Interface Injected in HttpInterceptor to add attributes in a Span.\nImplements this interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    add\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd(span: Span, request: HttpRequest, response: HttpResponse | HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/custom-span.interface.ts:15\n                \n            \n\n\n            \n                \n                    To add Attributes in a Span during interception.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    span\n                                    \n                                            Span\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Span\n\n                                    \n                                \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        an HttpRequest\n\n                                    \n                                \n                                \n                                    response\n                                    \n                                            HttpResponse | HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        an HttpResponse\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Span\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpErrorResponse, HttpRequest, HttpResponse } from \"@angular/common/http\";\nimport { Span } from \"@opentelemetry/api\";\n\n/**\n * Interface Injected in HttpInterceptor to add attributes in a Span.\n * Implements this interface\n */\nexport interface CustomSpan {\n  /**\n   * To add Attributes in a Span during interception.\n   * @param span Span\n   * @param request an HttpRequest\n   * @param response an HttpResponse\n   */\n  add(span: Span, request: HttpRequest, response: HttpResponse | HttpErrorResponse): Span\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HttpTraceContextPropagatorModule.html":{"url":"modules/HttpTraceContextPropagatorModule.html","title":"module - HttpTraceContextPropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    HttpTraceContextPropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator/http-trace-context-propagator.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpTraceContextPropagatorService } from './http-trace-context-propagator.service';\nimport { OTELCOL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    { provide: OTELCOL_PROPAGATOR, useClass: HttpTraceContextPropagatorService }\n  ]\n})\nexport class  HttpTraceContextPropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpTraceContextPropagatorService.html":{"url":"injectables/HttpTraceContextPropagatorService.html","title":"injectable - HttpTraceContextPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpTraceContextPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator/http-trace-context-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                HttpTraceContextPropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator/http-trace-context-propagator.service.ts:17\n                \n            \n\n\n            \n                \n                    Return an HttpTraceContext\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as HttpTraceContext\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { HttpTraceContext } from '@opentelemetry/core';\n\n/**\n * HttpTraceContextPropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class HttpTraceContextPropagatorService implements IPropagator {\n  /**\n   * Return an HttpTraceContext\n   * @return TextMapPropagator as HttpTraceContext\n   */\n  getPropagator(): TextMapPropagator {\n    return new HttpTraceContext();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IExporter.html":{"url":"interfaces/IExporter.html","title":"interface - IExporter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IExporter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n        \n\n            \n                Description\n            \n            \n                Exporter interface to define a default exporter\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getExporter\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts:12\n                \n            \n\n\n            \n                \n                    give an inmplementation of SpanExporter\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { SpanExporter } from '@opentelemetry/tracing';\n\n/**\n * Exporter interface to define a default exporter\n */\nexport interface IExporter {\n  /**\n   * give an inmplementation of SpanExporter\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter;\n}\n\n/** injection for a Exporter */\nexport const OTELCOL_EXPORTER = new InjectionToken('otelcol.exporter');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPropagator.html":{"url":"interfaces/IPropagator.html","title":"interface - IPropagator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPropagator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n        \n\n            \n                Description\n            \n            \n                Interface to define propagator\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getPropagator\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts:12\n                \n            \n\n\n            \n                \n                    give an implementation of a propagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        HttpTextPropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { TextMapPropagator } from '@opentelemetry/api';\n\n/**\n * Interface to define propagator\n */\nexport interface IPropagator {\n  /**\n   * give an implementation of a propagator\n   * @return HttpTextPropagator\n   */\n  getPropagator(): TextMapPropagator;\n}\n\n/** injection for a propagator */\nexport const OTELCOL_PROPAGATOR = new InjectionToken('otelcol.propagator');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InstrumentationConfig.html":{"url":"interfaces/InstrumentationConfig.html","title":"interface - InstrumentationConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InstrumentationConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                Instrumentation Configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        documentLoad\n                                \n                                \n                                            Optional\n                                        fetch\n                                \n                                \n                                            Optional\n                                        xmlHttpRequest\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        documentLoad\n                                    \n                                \n                                \n                                    \n                                        documentLoad:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    documentLoad : to add DocumentLoadInstrumentation \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fetch\n                                    \n                                \n                                \n                                    \n                                        fetch:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    fetch : to add FetchInstrumentation \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        xmlHttpRequest\n                                    \n                                \n                                \n                                    \n                                        xmlHttpRequest:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    xmlHttpRequest : to add XmlHttRequestInstrumentation \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { DiagLogger, SpanAttributes, DiagLogLevel } from '@opentelemetry/api';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * Instrumentation Configuration\n */\nexport interface InstrumentationConfig {\n  /** xmlHttpRequest : to add XmlHttRequestInstrumentation */\n  xmlHttpRequest?: boolean;\n  /** documentLoad : to add DocumentLoadInstrumentation */\n  documentLoad?: boolean;\n  /** fetch : to add FetchInstrumentation */\n  fetch?: boolean;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: SpanAttributes;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n  /** instrumentationConfig */\n  instrumentationConfig?: InstrumentationConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTELCOL_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const CUSTOM_SPAN = new InjectionToken('otelcol.custom-span')\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InstrumentationService.html":{"url":"injectables/InstrumentationService.html","title":"injectable - InstrumentationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InstrumentationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts\n        \n\n            \n                Description\n            \n            \n                InstrumentationService.\nService for component to add instrumentation.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                contextManager\n                            \n                            \n                                    Private\n                                instrumentationOptions\n                            \n                            \n                                    Private\n                                tracerProvider\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addInstrumentationPlugin\n                            \n                            \n                                    Public\n                                initInstrumentation\n                            \n                            \n                                    Private\n                                insertConsoleSpanExporter\n                            \n                            \n                                    Private\n                                insertSpanProcessorProductionMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig, exporterService: IExporter, propagatorService: IPropagator)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:36\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        exporterService\n                                                  \n                                                        \n                                                                        IExporter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        propagatorService\n                                                  \n                                                        \n                                                                        IPropagator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            addInstrumentationPlugin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addInstrumentationPlugin(instrumentationConfig: InstrumentationConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:103\n                \n            \n\n\n            \n                \n                    Enable plugin instrumentation\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    instrumentationConfig\n                                    \n                                                InstrumentationConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            initInstrumentation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initInstrumentation()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:53\n                \n            \n\n\n            \n                \n                    Init instrumentation on init\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            insertConsoleSpanExporter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertConsoleSpanExporter(console: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:74\n                \n            \n\n\n            \n                \n                    Insert in tracer the console span if config is true\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    console\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        config to insert console span\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            insertSpanProcessorProductionMode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertSpanProcessorProductionMode(production: boolean, exporter: IExporter)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:88\n                \n            \n\n\n            \n                \n                    Insert BatchSpanProcessor in production mode\nSimpleSpanProcessor otherwise\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    production\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    exporter\n                                    \n                                                IExporter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            contextManager\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new ZoneContextManager()\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:31\n                            \n                        \n\n                \n                    \n                        contextManager\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            instrumentationOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     InstrumentationOption[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:36\n                            \n                        \n\n                \n                    \n                        instrumentationOptions\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tracerProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new WebTracerProvider()\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:26\n                            \n                        \n\n                \n                    \n                        tracerProvider\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { ZoneContextManager } from '@opentelemetry/context-zone-peer-dep';\nimport { InstrumentationOption, registerInstrumentations } from '@opentelemetry/instrumentation';\nimport { DocumentLoadInstrumentation } from '@opentelemetry/instrumentation-document-load';\nimport { FetchInstrumentation } from '@opentelemetry/instrumentation-fetch';\nimport { XMLHttpRequestInstrumentation } from '@opentelemetry/instrumentation-xml-http-request';\nimport { WebTracerProvider } from '@opentelemetry/web';\nimport { ConsoleSpanExporter, SimpleSpanProcessor, BatchSpanProcessor } from '@opentelemetry/tracing';\nimport { OpenTelemetryInjectConfig, OpenTelemetryConfig, InstrumentationConfig } from '../../configuration/opentelemetry-config';\nimport { OTELCOL_EXPORTER, IExporter } from '../exporter/exporter.interface';\nimport { OTELCOL_PROPAGATOR, IPropagator } from '../propagator/propagator.interface';\n\n\n/**\n * InstrumentationService.\n * Service for component to add instrumentation.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class InstrumentationService {\n\n  /**\n   * tracerProvider\n   */\n  private tracerProvider = new WebTracerProvider();\n\n  /**\n   * contextManager\n   */\n  private contextManager = new ZoneContextManager();\n\n  /**\n   * instrumentationOptions\n   */\n  private instrumentationOptions: InstrumentationOption[];\n\n  /**\n   * Constructor\n   * @param config\n   * @param exporterService\n   * @param propagatorService\n   */\n  constructor(@Inject(OpenTelemetryInjectConfig) private config: OpenTelemetryConfig,\n    @Inject(OTELCOL_EXPORTER)\n    private exporterService: IExporter,\n    @Inject(OTELCOL_PROPAGATOR)\n    private propagatorService: IPropagator) { }\n\n  /**\n   * Init instrumentation on init\n   */\n  public initInstrumentation() {\n    this.insertConsoleSpanExporter(this.config.commonConfig.console);\n    this.insertSpanProcessorProductionMode(this.config.commonConfig.production, this.exporterService);\n    this.addInstrumentationPlugin(this.config.instrumentationConfig);\n\n    this.tracerProvider.register({\n      contextManager: this.contextManager,\n      propagator: this.propagatorService.getPropagator()\n    });\n\n    registerInstrumentations({\n      instrumentations: this.instrumentationOptions,\n      tracerProvider: this.tracerProvider,\n    });\n\n  }\n\n  /**\n   * Insert in tracer the console span if config is true\n   * @param console config to insert console span\n   */\n  private insertConsoleSpanExporter(console: boolean) {\n    if (console) {\n      this.tracerProvider.addSpanProcessor(\n        new SimpleSpanProcessor(new ConsoleSpanExporter())\n      );\n    }\n  }\n\n  /**\n   * Insert BatchSpanProcessor in production mode\n   * SimpleSpanProcessor otherwise\n   * @param boolean production\n   * @param IExporter exporter\n   */\n  private insertSpanProcessorProductionMode(\n    production: boolean,\n    exporter: IExporter\n  ) {\n    this.tracerProvider.addSpanProcessor(\n      production\n        ? new BatchSpanProcessor(exporter.getExporter())\n        : new SimpleSpanProcessor(exporter.getExporter())\n    );\n  }\n\n  /**\n   * Enable plugin instrumentation\n   * @param instrumentationConfig\n   */\n  private addInstrumentationPlugin(instrumentationConfig: InstrumentationConfig) {\n    this.instrumentationOptions = [\n      new XMLHttpRequestInstrumentation({ enabled: instrumentationConfig?.xmlHttpRequest }),\n      new DocumentLoadInstrumentation({ enabled: instrumentationConfig?.documentLoad }),\n      new FetchInstrumentation({ enabled: instrumentationConfig?.fetch })\n    ]\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JaegerHttpTracePropagatorModule.html":{"url":"modules/JaegerHttpTracePropagatorModule.html","title":"module - JaegerHttpTracePropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    JaegerHttpTracePropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { JaegerHttpTracePropagatorService } from './jaeger-http-trace-propagator.service';\nimport { OTELCOL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    { provide: OTELCOL_PROPAGATOR, useClass: JaegerHttpTracePropagatorService }\n  ]\n})\nexport class JaegerHttpTracePropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JaegerHttpTracePropagatorService.html":{"url":"injectables/JaegerHttpTracePropagatorService.html","title":"injectable - JaegerHttpTracePropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JaegerHttpTracePropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                JaegerHttpTracePropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                customHeader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts:18\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts:31\n                \n            \n\n\n            \n                \n                    Return an JaegerHttpTracePropagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as JaegerHttpTracePropagator\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            customHeader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts:18\n                            \n                        \n\n                \n                    \n                        custom Header\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { JaegerHttpTracePropagator } from '@opentelemetry/propagator-jaeger';\nimport { OpenTelemetryInjectConfig } from '../../../configuration/opentelemetry-config';\nimport { OpenTelemetryConfig } from '../../../../public-api';\n\n/**\n * JaegerHttpTracePropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JaegerHttpTracePropagatorService implements IPropagator {\n  /**\n   * custom Header\n   */\n  private customHeader: string;\n  /**\n   * Constructor\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OpenTelemetryInjectConfig) config: OpenTelemetryConfig) {\n    this.customHeader = config.jaegerPropagatorConfig?.customHeader;\n  }\n\n  /**\n   * Return an JaegerHttpTracePropagator\n   * @return TextMapPropagator as JaegerHttpTracePropagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new JaegerHttpTracePropagator(this.customHeader);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JaegerPropagatorConfig.html":{"url":"interfaces/JaegerPropagatorConfig.html","title":"interface - JaegerPropagatorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JaegerPropagatorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for JaegerPropagatorConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        customHeader\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customHeader\n                                    \n                                \n                                \n                                    \n                                        customHeader:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A custom Header for the propagator\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { DiagLogger, SpanAttributes, DiagLogLevel } from '@opentelemetry/api';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * Instrumentation Configuration\n */\nexport interface InstrumentationConfig {\n  /** xmlHttpRequest : to add XmlHttRequestInstrumentation */\n  xmlHttpRequest?: boolean;\n  /** documentLoad : to add DocumentLoadInstrumentation */\n  documentLoad?: boolean;\n  /** fetch : to add FetchInstrumentation */\n  fetch?: boolean;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: SpanAttributes;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n  /** instrumentationConfig */\n  instrumentationConfig?: InstrumentationConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTELCOL_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const CUSTOM_SPAN = new InjectionToken('otelcol.custom-span')\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NoopTextMapPropagatorModule.html":{"url":"modules/NoopTextMapPropagatorModule.html","title":"module - NoopTextMapPropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    NoopTextMapPropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NoopTextMapPropagatorService } from './noop-text-map-propagator.service';\nimport { OTELCOL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    { provide: OTELCOL_PROPAGATOR, useClass: NoopTextMapPropagatorService }\n  ]\n})\nexport class NoopTextMapPropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NoopTextMapPropagatorService.html":{"url":"injectables/NoopTextMapPropagatorService.html","title":"injectable - NoopTextMapPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NoopTextMapPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                NoopHttpTextPropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.service.ts:16\n                \n            \n\n\n            \n                \n                    Return an NoopTextMapPropagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as NoopTextMapPropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { NoopTextMapPropagator, TextMapPropagator } from '@opentelemetry/api';\n\n/**\n * NoopHttpTextPropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class NoopTextMapPropagatorService implements IPropagator {\n  /**\n   * Return an NoopTextMapPropagator\n   * @return TextMapPropagator as NoopTextMapPropagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new NoopTextMapPropagator();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OpenTelemetryConfig.html":{"url":"interfaces/OpenTelemetryConfig.html","title":"interface - OpenTelemetryConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OpenTelemetryConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                OpenTelemetryConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        b3PropagatorConfig\n                                \n                                \n                                            Optional\n                                        batchSpanProcessorConfig\n                                \n                                \n                                        commonConfig\n                                \n                                \n                                            Optional\n                                        instrumentationConfig\n                                \n                                \n                                            Optional\n                                        jaegerPropagatorConfig\n                                \n                                \n                                            Optional\n                                        otelcolConfig\n                                \n                                \n                                            Optional\n                                        zipkinConfig\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        b3PropagatorConfig\n                                    \n                                \n                                \n                                    \n                                        b3PropagatorConfig:         B3PropagatorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         B3PropagatorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    b3PropagatorConfig \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        batchSpanProcessorConfig\n                                    \n                                \n                                \n                                    \n                                        batchSpanProcessorConfig:         BatchSpanProcessorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BatchSpanProcessorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    batchSpanProcessorConfig \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commonConfig\n                                    \n                                \n                                \n                                    \n                                        commonConfig:         CommonCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CommonCollectorConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    commonConfig \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        instrumentationConfig\n                                    \n                                \n                                \n                                    \n                                        instrumentationConfig:         InstrumentationConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         InstrumentationConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    instrumentationConfig \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jaegerPropagatorConfig\n                                    \n                                \n                                \n                                    \n                                        jaegerPropagatorConfig:         JaegerPropagatorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         JaegerPropagatorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    jaegerPropagatorConfig \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        otelcolConfig\n                                    \n                                \n                                \n                                    \n                                        otelcolConfig:         OtelCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OtelCollectorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    otelcolConfig \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zipkinConfig\n                                    \n                                \n                                \n                                    \n                                        zipkinConfig:         ZipkinCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ZipkinCollectorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    zipkinConfig \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { DiagLogger, SpanAttributes, DiagLogLevel } from '@opentelemetry/api';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * Instrumentation Configuration\n */\nexport interface InstrumentationConfig {\n  /** xmlHttpRequest : to add XmlHttRequestInstrumentation */\n  xmlHttpRequest?: boolean;\n  /** documentLoad : to add DocumentLoadInstrumentation */\n  documentLoad?: boolean;\n  /** fetch : to add FetchInstrumentation */\n  fetch?: boolean;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: SpanAttributes;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n  /** instrumentationConfig */\n  instrumentationConfig?: InstrumentationConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTELCOL_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const CUSTOM_SPAN = new InjectionToken('otelcol.custom-span')\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/OpenTelemetryHttpInterceptor.html":{"url":"interceptors/OpenTelemetryHttpInterceptor.html","title":"interceptor - OpenTelemetryHttpInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  OpenTelemetryHttpInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                OpenTelemetryInterceptor class\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contextManager\n                            \n                            \n                                logBody\n                            \n                            \n                                tracer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                convertStringToNumber\n                            \n                            \n                                    Private\n                                defineProbabilitySampler\n                            \n                            \n                                    Private\n                                getURL\n                            \n                            \n                                    Private\n                                initSpan\n                            \n                            \n                                    Private\n                                injectContextAndHeader\n                            \n                            \n                                    Private\n                                insertConsoleSpanExporter\n                            \n                            \n                                    Private\n                                insertSpanProcessorProductionMode\n                            \n                            \n                                intercept\n                            \n                            \n                                    Private\n                                setCustomSpan\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig, exporterService: IExporter, propagatorService: IPropagator, logger: DiagLogger, customSpan: CustomSpan, platformLocation: PlatformLocation)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:56\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                configuration\n\n                                                        \n                                                \n                                                \n                                                        exporterService\n                                                  \n                                                        \n                                                                        IExporter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service exporter injected\n\n                                                        \n                                                \n                                                \n                                                        propagatorService\n                                                  \n                                                        \n                                                                        IPropagator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                propagator\n\n                                                        \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    DiagLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        customSpan\n                                                  \n                                                        \n                                                                        CustomSpan\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        platformLocation\n                                                  \n                                                        \n                                                                        PlatformLocation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            convertStringToNumber\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convertStringToNumber(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:253\n                \n            \n\n\n            \n                \n                    convert String to Number (or undefined)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        number or undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            defineProbabilitySampler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defineProbabilitySampler(sampleConfig: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:237\n                \n            \n\n\n            \n                \n                    define the Probability Sampler\nBy Default, it's always (or 1)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sampleConfig\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the sample configuration\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Sampler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getURL\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getURL()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:149\n                \n            \n\n\n            \n                \n                    Get current scheme, hostname and port\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initSpan\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initSpan(request: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:157\n                \n            \n\n\n            \n                \n                    Initialise a span for a request intercepted\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Span\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            injectContextAndHeader\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    injectContextAndHeader(request: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:186\n                \n            \n\n\n            \n                \n                    Add header propagator in request and conserve original header\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            insertConsoleSpanExporter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertConsoleSpanExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:206\n                \n            \n\n\n            \n                \n                    Insert in tracer the console span if config is true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            insertSpanProcessorProductionMode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertSpanProcessorProductionMode()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:218\n                \n            \n\n\n            \n                \n                    Insert BatchSpanProcessor in production mode\nSimpleSpanProcessor otherwise\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:96\n                \n            \n\n\n            \n                \n                    Overide method\nInterceptor from HttpInterceptor Angular\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the current request\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        next\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setCustomSpan\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setCustomSpan(span: Span, request: HttpRequest, response: HttpResponse | HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:264\n                \n            \n\n\n            \n                \n                    Set custom attributes in span with a CustomSpan\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    span\n                                    \n                                            Span\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            HttpResponse | HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Span\n\n                    \n                    \n                        Span\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contextManager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     StackContextManager\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:52\n                            \n                        \n\n                \n                    \n                        context manager\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logBody\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:56\n                            \n                        \n\n                \n                    \n                        Log or not body\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tracer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     WebTracerProvider\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:48\n                            \n                        \n\n                \n                    \n                        tracer\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject, Optional } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpResponse,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { PlatformLocation } from '@angular/common';\nimport { Observable } from 'rxjs';\nimport * as api from '@opentelemetry/api';\nimport { Sampler, Span, SpanStatusCode, DiagLogger } from '@opentelemetry/api';\nimport { WebTracerProvider, StackContextManager } from '@opentelemetry/web';\nimport {\n  SimpleSpanProcessor,\n  ConsoleSpanExporter,\n  BatchSpanProcessor,\n  BufferConfig\n} from '@opentelemetry/tracing';\nimport {\n  AlwaysOnSampler,\n  AlwaysOffSampler,\n  TraceIdRatioBasedSampler,\n  ParentBasedSampler,\n} from '@opentelemetry/core';\nimport { tap, finalize } from 'rxjs/operators';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n} from '../configuration/opentelemetry-config';\nimport { version, name } from '../../version.json';\nimport { OTELCOL_EXPORTER, IExporter } from '../services/exporter/exporter.interface';\nimport { OTELCOL_PROPAGATOR, IPropagator } from '../services/propagator/propagator.interface';\nimport { OTELCOL_LOGGER, CUSTOM_SPAN } from '../configuration/opentelemetry-config';\nimport { CustomSpan } from './custom-span.interface';\n\n/**\n * OpenTelemetryInterceptor class\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OpenTelemetryHttpInterceptor implements HttpInterceptor {\n  /**\n   * tracer\n   */\n  tracer: WebTracerProvider;\n  /**\n   * context manager\n   */\n  contextManager: StackContextManager;\n  /**\n   * Log or not body\n   */\n  logBody = false;\n\n  /**\n   * constructor\n   * @param config configuration\n   * @param exporterService service exporter injected\n   * @param propagatorService propagator\n   */\n  constructor(\n    @Inject(OpenTelemetryInjectConfig) private config: OpenTelemetryConfig,\n    @Inject(OTELCOL_EXPORTER)\n    private exporterService: IExporter,\n    @Inject(OTELCOL_PROPAGATOR)\n    private propagatorService: IPropagator,\n    @Optional() @Inject(OTELCOL_LOGGER)\n    private logger: DiagLogger,\n    @Optional() @Inject(CUSTOM_SPAN)\n    private customSpan: CustomSpan,\n    private platformLocation: PlatformLocation\n  ) {\n    this.tracer = new WebTracerProvider({\n      sampler: this.defineProbabilitySampler(this.convertStringToNumber(config.commonConfig.probabilitySampler)),\n    });\n    this.insertSpanProcessorProductionMode();\n    this.insertConsoleSpanExporter();\n    this.contextManager = new StackContextManager();\n    this.tracer.register({\n      propagator: this.propagatorService.getPropagator(),\n      contextManager: this.contextManager\n    });\n    this.logBody = config.commonConfig.logBody;\n    api.diag.setLogger(logger, config.commonConfig.logLevel);\n  }\n\n  /**\n   * Overide method\n   * Interceptor from HttpInterceptor Angular\n   * @param request the current request\n   * @param next next\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    this.contextManager.disable(); //FIX - reinit contextManager for each http call\n    this.contextManager.enable();\n    const span: Span = this.initSpan(request);\n    const tracedReq = this.injectContextAndHeader(request);\n    return next.handle(tracedReq).pipe(\n      tap(\n        (event: HttpResponse) => {\n          span.setAttributes(\n            {\n              'http.status_code': event.status,\n              'http.status_text': event.statusText,\n            }\n          );\n          if (this.logBody && event.body != null) {\n            span.addEvent('response', { body: JSON.stringify(event.body) });\n          }\n          span.setStatus({\n            code: SpanStatusCode.OK\n          });\n          this.setCustomSpan(span,request,event);\n        },\n        (event: HttpErrorResponse) => {\n          span.setAttributes(\n            {\n              'http.status_text': event.statusText,\n              'http.status_code': event.status,\n            }\n          );\n          span.recordException({\n            name: event.name,\n            message: event.message,\n            stack: event.error\n          });\n          span.setStatus({\n            code: SpanStatusCode.ERROR\n          });\n          this.setCustomSpan(span,request,event);\n        }\n      ),\n      finalize(() => {\n        span.end();\n        this.contextManager.disable();\n      })\n    );\n  }\n\n  /**\n   * Get current scheme, hostname and port\n   */\n  private getURL() {\n    return this.platformLocation.href;\n  }\n\n  /**\n   * Initialise a span for a request intercepted\n   * @param request request\n   */\n  private initSpan(request: HttpRequest): Span {\n    const urlRequest = (request.urlWithParams.startsWith('http')) ? new URL(request.urlWithParams) : new URL(this.getURL());\n    const span = this.tracer\n      .getTracer(name, version)\n      .startSpan(\n        `${urlRequest.protocol.replace(':', '').toUpperCase()} ${request.method.toUpperCase()}`,\n        {\n          attributes: {\n            ['http.method']: request.method,\n            ['http.url']: request.urlWithParams,\n            ['http.host']: urlRequest.host,\n            ['http.scheme']: urlRequest.protocol.replace(':', ''),\n            ['http.target']: urlRequest.pathname + urlRequest.search,\n            ['http.user_agent']: window.navigator.userAgent\n          },\n        },\n        this.contextManager.active()\n      );\n    this.contextManager._currentContext = api.setSpan(\n      this.contextManager.active(),\n      span\n    );\n    return span;\n  }\n\n  /**\n   * Add header propagator in request and conserve original header\n   * @param request request\n   */\n  private injectContextAndHeader(\n    request: HttpRequest\n  ) {\n    const carrier = {};\n    api.propagation.inject(\n      this.contextManager.active(),\n      carrier,\n      api.defaultTextMapSetter\n    );\n    request.headers.keys().map(key => {\n      carrier[key] = request.headers.get(key);\n    });\n    return request.clone({\n      setHeaders: carrier,\n    });\n  }\n\n  /**\n   * Insert in tracer the console span if config is true\n   */\n  private insertConsoleSpanExporter() {\n    if (this.config.commonConfig.console) {\n      this.tracer.addSpanProcessor(\n        new SimpleSpanProcessor(new ConsoleSpanExporter())\n      );\n    }\n  }\n\n  /**\n   * Insert BatchSpanProcessor in production mode\n   * SimpleSpanProcessor otherwise\n   */\n  private insertSpanProcessorProductionMode() {\n    const bufferConfig: BufferConfig = {\n      maxExportBatchSize: this.convertStringToNumber(this.config.batchSpanProcessorConfig?.maxExportBatchSize),\n      scheduledDelayMillis: this.convertStringToNumber(this.config.batchSpanProcessorConfig?.scheduledDelayMillis),\n      exportTimeoutMillis: this.convertStringToNumber(this.config.batchSpanProcessorConfig?.exportTimeoutMillis),\n      maxQueueSize: this.convertStringToNumber(this.config.batchSpanProcessorConfig?.maxQueueSize)\n    }\n    this.tracer.addSpanProcessor(\n      this.config.commonConfig.production\n        ? new BatchSpanProcessor(this.exporterService.getExporter(), bufferConfig)\n        : new SimpleSpanProcessor(this.exporterService.getExporter())\n    );\n  }\n\n  /**\n   * define the Probability Sampler\n   * By Default, it's always (or 1)\n   * @param sampleConfig the sample configuration\n   */\n  private defineProbabilitySampler(sampleConfig: number): Sampler {\n    if (sampleConfig >= 1) {\n      return new ParentBasedSampler({ root: new AlwaysOnSampler() });\n    }\n    else if (sampleConfig , response: HttpResponse | HttpErrorResponse): Span {\n      return this.customSpan != null ? this.customSpan.add(span, request, response) : span;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OpenTelemetryInterceptorModule.html":{"url":"modules/OpenTelemetryInterceptorModule.html","title":"module - OpenTelemetryInterceptorModule","body":"\n                   \n\n\n\n\n    Modules\n    OpenTelemetryInterceptorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/opentelemetry-interceptor.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: OpenTelemetryConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/opentelemetry-interceptor.module.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                OpenTelemetryConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  NgModule,\n  ModuleWithProviders,\n  Optional,\n  SkipSelf,\n} from '@angular/core';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n} from './configuration/opentelemetry-config';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { OpenTelemetryHttpInterceptor } from './interceptor/opentelemetry-http.interceptor';\n\n@NgModule({\n  declarations: [],\n  imports: [HttpClientModule],\n  exports: [],\n})\nexport class OpenTelemetryInterceptorModule {\n  constructor(\n    @Optional() @SkipSelf() parentModule?: OpenTelemetryInterceptorModule\n  ) {\n    if (parentModule) {\n      throw new Error(\n        'OpentelemetryInterceptorModule is already loaded. Import it in the AppModule only'\n      );\n    }\n  }\n\n  public static forRoot(config: OpenTelemetryConfig): ModuleWithProviders {\n    return {\n      ngModule: OpenTelemetryInterceptorModule,\n      providers: [\n        { provide: OpenTelemetryInjectConfig, useValue: config },\n        {\n          provide: HTTP_INTERCEPTORS,\n          useClass: OpenTelemetryHttpInterceptor,\n          multi: true,\n        },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OtelColExporterModule.html":{"url":"modules/OtelColExporterModule.html","title":"module - OtelColExporterModule","body":"\n                   \n\n\n\n\n    Modules\n    OtelColExporterModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OtelcolExporterService } from './otelcol-exporter.service';\nimport { OTELCOL_EXPORTER } from '../exporter.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    { provide: OTELCOL_EXPORTER, useClass: OtelcolExporterService }\n  ]\n})\nexport class OtelColExporterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OtelCollectorConfig.html":{"url":"interfaces/OtelCollectorConfig.html","title":"interface - OtelCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OtelCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                OpenTelemetry Collector configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        attributes\n                                \n                                \n                                            Optional\n                                        headers\n                                \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attributes\n                                    \n                                \n                                \n                                    \n                                        attributes:     SpanAttributes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SpanAttributes\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    attributes : define some custom attributes\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     Partial>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Partial>\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    custom headers\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An url (Default value: http://localhost:55681/v1/trace)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { DiagLogger, SpanAttributes, DiagLogLevel } from '@opentelemetry/api';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * Instrumentation Configuration\n */\nexport interface InstrumentationConfig {\n  /** xmlHttpRequest : to add XmlHttRequestInstrumentation */\n  xmlHttpRequest?: boolean;\n  /** documentLoad : to add DocumentLoadInstrumentation */\n  documentLoad?: boolean;\n  /** fetch : to add FetchInstrumentation */\n  fetch?: boolean;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: SpanAttributes;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n  /** instrumentationConfig */\n  instrumentationConfig?: InstrumentationConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTELCOL_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const CUSTOM_SPAN = new InjectionToken('otelcol.custom-span')\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OtelWebTracerComponent.html":{"url":"components/OtelWebTracerComponent.html","title":"component - OtelWebTracerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OtelWebTracerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/opentelemetry-interceptor/src/lib/component/otel-webtracer/otel-webtracer.component.ts\n\n\n    \n        Description\n    \n    \n        Otel Web Tracer Component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                otel-instrumentation\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(instrumentationService: InstrumentationService)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/component/otel-webtracer/otel-webtracer.component.ts:12\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        instrumentationService\n                                                  \n                                                        \n                                                                        InstrumentationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                InstrumentationService\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/component/otel-webtracer/otel-webtracer.component.ts:23\n                \n            \n\n\n            \n                \n                    Init Component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { InstrumentationService } from '../../services/instrumentation/instrumentation.service';\n\n\n/**\n * Otel Web Tracer Component\n */\n@Component({\n  selector: 'otel-instrumentation',\n  template: '',\n})\nexport class OtelWebTracerComponent implements OnInit {\n\n  /**\n   * Constructor\n   * @param instrumentationService InstrumentationService\n   */\n  constructor(private instrumentationService: InstrumentationService) { }\n\n  /**\n   * Init Component\n   */\n  ngOnInit(): void {\n   this.instrumentationService.initInstrumentation();\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'OtelWebTracerComponent', 'selector': 'otel-instrumentation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OtelWebTracerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OtelWebTracerModule.html":{"url":"modules/OtelWebTracerModule.html","title":"module - OtelWebTracerModule","body":"\n                   \n\n\n\n\n    Modules\n    OtelWebTracerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OtelWebTracerModule\n\n\n\ncluster_OtelWebTracerModule_declarations\n\n\n\ncluster_OtelWebTracerModule_exports\n\n\n\n\nOtelWebTracerComponent\n\nOtelWebTracerComponent\n\n\n\nOtelWebTracerModule\n\nOtelWebTracerModule\n\nOtelWebTracerModule -->\n\nOtelWebTracerComponent->OtelWebTracerModule\n\n\n\n\n\nOtelWebTracerComponent \n\nOtelWebTracerComponent \n\nOtelWebTracerComponent  -->\n\nOtelWebTracerModule->OtelWebTracerComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/otel-webtracer.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OtelWebTracerComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OtelWebTracerComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: OpenTelemetryConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/otel-webtracer.module.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                OpenTelemetryConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule, Optional, SkipSelf } from \"@angular/core\";\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n} from './configuration/opentelemetry-config';\nimport { OtelWebTracerComponent } from \"./component/otel-webtracer/otel-webtracer.component\";\nimport { InstrumentationService } from './services/instrumentation/instrumentation.service';\n\n@NgModule({\n  declarations: [OtelWebTracerComponent],\n  exports: [OtelWebTracerComponent]\n})\nexport class OtelWebTracerModule {\n  constructor(\n    @Optional() @SkipSelf() parentModule?: OtelWebTracerModule\n  ) {\n    if (parentModule) {\n      throw new Error(\n        'OtelWebTracerModule is already loaded. Import it in the AppModule only'\n      );\n    }\n  }\n\n  public static forRoot(config: OpenTelemetryConfig): ModuleWithProviders {\n    return {\n      ngModule: OtelWebTracerModule,\n      providers: [\n        { provide: OpenTelemetryInjectConfig, useValue: config },\n        InstrumentationService\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OtelcolExporterService.html":{"url":"injectables/OtelcolExporterService.html","title":"injectable - OtelcolExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OtelcolExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts\n        \n\n            \n                Description\n            \n            \n                OtelcolExporterService class\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                otelcolConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts:23\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts:44\n                \n            \n\n\n            \n                \n                    Return a CollectorExporter with the configuration\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        a CollectorExporter\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            otelcolConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     collectorTypes.CollectorExporterConfigBase\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts:23\n                            \n                        \n\n                \n                    \n                        CollectorExporterConfigBase\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject, Optional } from '@angular/core';\nimport { IExporter } from '../exporter.interface';\nimport { SpanExporter } from '@opentelemetry/tracing';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig\n} from '../../../configuration/opentelemetry-config';\nimport {\n  CollectorTraceExporter,\n  collectorTypes,\n} from '@opentelemetry/exporter-collector';\n\n/**\n * OtelcolExporterService class\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OtelcolExporterService implements IExporter {\n  /**\n   * CollectorExporterConfigBase\n   */\n  private otelcolConfig: collectorTypes.CollectorExporterConfigBase;\n\n  /**\n   * constructor\n   * @param config OpenTelemetryConfig\n   */\n  constructor(\n    @Inject(OpenTelemetryInjectConfig) config: OpenTelemetryConfig\n  ) {\n    this.otelcolConfig = {\n      serviceName: config.commonConfig.serviceName,\n      url: config.otelcolConfig?.url,\n      headers: config.otelcolConfig?.headers,\n      attributes: config.otelcolConfig?.attributes\n    };\n  }\n\n  /**\n   * Return a CollectorExporter with the configuration\n   * @return a CollectorExporter\n   */\n  getExporter(): SpanExporter {\n    return new CollectorTraceExporter(this.otelcolConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ZipkinCollectorConfig.html":{"url":"interfaces/ZipkinCollectorConfig.html","title":"interface - ZipkinCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ZipkinCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for Zipkin\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        headers\n                                \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    custom headers\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An url (Default value: http://localhost:9411/api/v2/spans)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { DiagLogger, SpanAttributes, DiagLogLevel } from '@opentelemetry/api';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * Instrumentation Configuration\n */\nexport interface InstrumentationConfig {\n  /** xmlHttpRequest : to add XmlHttRequestInstrumentation */\n  xmlHttpRequest?: boolean;\n  /** documentLoad : to add DocumentLoadInstrumentation */\n  documentLoad?: boolean;\n  /** fetch : to add FetchInstrumentation */\n  fetch?: boolean;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: SpanAttributes;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n  /** instrumentationConfig */\n  instrumentationConfig?: InstrumentationConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTELCOL_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const CUSTOM_SPAN = new InjectionToken('otelcol.custom-span')\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ZipkinExporterModule.html":{"url":"modules/ZipkinExporterModule.html","title":"module - ZipkinExporterModule","body":"\n                   \n\n\n\n\n    Modules\n    ZipkinExporterModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OTELCOL_EXPORTER } from '../exporter.interface';\nimport { ZipkinExporterService } from './zipkin-exporter.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    { provide: OTELCOL_EXPORTER, useClass: ZipkinExporterService }\n  ]\n})\nexport class ZipkinExporterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ZipkinExporterService.html":{"url":"injectables/ZipkinExporterService.html","title":"injectable - ZipkinExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ZipkinExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.service.ts\n        \n\n            \n                Description\n            \n            \n                ZipkinExporterService class\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                zipkinConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.service.ts:17\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.service.ts:35\n                \n            \n\n\n            \n                \n                    Return a ZipkinExporter configured with zipkinConfig field\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            zipkinConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ExporterConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.service.ts:17\n                            \n                        \n\n                \n                    \n                        zipkinConfig\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IExporter } from '../exporter.interface';\nimport { SpanExporter } from '@opentelemetry/tracing';\nimport { OpenTelemetryConfig, OpenTelemetryInjectConfig } from '../../../configuration/opentelemetry-config';\nimport { ZipkinExporter, ExporterConfig } from '@opentelemetry/exporter-zipkin';\n\n/**\n * ZipkinExporterService class\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ZipkinExporterService implements IExporter {\n  /**\n   * zipkinConfig\n   */\n  private zipkinConfig: ExporterConfig;\n\n  /**\n   * constructor\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OpenTelemetryInjectConfig) config: OpenTelemetryConfig) {\n    this.zipkinConfig = {\n      serviceName: config.commonConfig.serviceName,\n      url: config.zipkinConfig?.url,\n      headers: config.zipkinConfig?.headers\n    };\n  }\n\n  /**\n   * Return a ZipkinExporter configured with zipkinConfig field\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter {\n    return new ZipkinExporter(this.zipkinConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n0.19.0 (2021-05-03)\nFeatures\n\ncomponent with instrumentation (#34) (caab7a9)\nissue#38: add batchSpanProcessorConfig (a73e382), closes issue#38\nissue#38: add batchSpanProcessorConfig (dbaec60), closes issue#38\n\nBug Fixes\n\nissue#4: link error on documentation (2965c35), closes issue#4\nissue#42: restart context for each http call (c9f8667), closes issue#42\napi breaking change (don't forget in changelog...) (18d04fd)\ncypress test error on span name (68d7aee)\ngithub action rename branch main (66ca86c)\nuse protocol and method for span name (1a56037)\n\n0.18.2 (2021-03-30)\nFeatures\n\nupdate to 0.18.2 (d8b9f3c)\n\n0.18.0-1 (2021-03-26)\n0.18.0 (2021-03-10)\nFeatures\n\nupdate to version 0.18.0 (ead3251)\n\nBug Fixes\n\nerror package-lock (c53447a)\n\n0.17.0 (2021-02-21)\nBug Fixes\n\nreadme error opentelemtery (0615f02)\n\n0.16.0 (2021-02-02)\nFeatures\n\nupdate to 0.16.0 opentelemetry-js (f0a18ea)\n\n0.15.0 (2021-01-28)\n0.14.0 (2020-12-18)\nFeatures\n\nadd log body configurable (332baf7)\nupdate angular 10.2 (efa9083)\nupdate opentelemetry-js 0.14.0 (dcde5bb)\n\n0.13.0-1 (2020-12-10)\nBug Fixes\n\nerror peerDependencies, umdModuleIds and doc (e6073bf)\n\n0.13.0 (2020-12-10)\nFeatures\n\nadd B3Propagator single or multi (c71ba73)\nadd B3Propagator single or multi (de1f141)\nupdate to 0.13.0. Add Zipkin Exporter (f206c5e)\n\nBug Fixes\n\nuseless parameter (bca88a0)\n\n0.11.0-3 (2020-09-16)\nFeatures\n\nreview injection for exporter and propagator (8faa4c9)\n\nBug Fixes\n\ndependence (b112065)\nredo update angular (#21) (6e5c19a)\n\n0.11.0-2 (2020-09-15)\nFeatures\n\nAdd otelcol configuration and Logging (#19) (042898e)\n\n0.11.0-1 (2020-09-15)\nFeatures\n\nadd user-agent to otelcol (06cb6de)\n\nBug Fixes\n\nreset to previous version (0a2ccc5)\nreview code (8b1b7b5)\nreview code again (7bab017)\nuse partial and record (4bddf3a)\nversion to use in interceptor (b6dcaf7)\n\n0.11.0 (2020-09-11)\nFeatures\n\nupdate propagator-jaeger version to 0.10.0 (1a1299b)\nupgrate to 0.11.0 otelcol (09dd1bb)\n\nBug Fixes\n\nts-jest configuration (4d9a061)\n\n0.10.2-3 (2020-09-02)\nFeatures\n\nadd error in interceptor (#16) (de09c4d)\n\nBug Fixes\n\ndoc (7f7c66a)\nmerge (ff373c0)\n\n0.10.2-2 (2020-08-20)\nBug Fixes\n\nprobability (62e0d77)\n\n0.10.2-1 (2020-08-16)\n0.10.2 (2020-08-09)\nFeatures\n\nupgrade to 0.10.2 otelcol (351ce3e)\n\nBug Fixes\n\nangular 10 ngcc trouble (4d886fb)\n\n0.10.1 (2020-07-28)\nFeatures\n\nupdate angular (bfc26ae)\nupdate opentelemtry 0.10.1 (94e0b44)\n\nBug Fixes\n\notlp collector version 0.4.0 (#9) (80d2ada)\nrelease (d2ecbb8)\n\n0.9.0 (2020-06-28)\nFeatures\n\nadd cypress test e2e (7b4c031)\nadd new release 0.9.0 (#6) (0319eee)\n\n0.8.3 (2020-06-28)\nFeatures\n\nadd cypress test e2e (7b4c031)\nadd new release 0.9.0 (#6) (0319eee)\n\n0.8.3-2 (2020-06-08)\nBug Fixes\n\nchangelog (8d45a2c)\nproblem with context and trace parent id (#4) (f195a50)\n\n0.8.3-1 (2020-06-05)\nFeatures\n\nadd jaeger propagator (fad044a)\nadd JaegerPropagator to composite (8e268a9)\n\nBug Fixes\n\ncontext traceId problem (#3) (c6368c9) \n\n0.8.3 (2020-05-30)\nFeatures\n\nadd docs (bd69598)\nreview before new release version (1229a9d)\n\n0.8.2 (2020-05-30)\nFeatures\n\nadd composite (7a5b07e)\nadd composite header (83fc1f3)\nadd example ok (e5eb09e)\nadd sampling configuration (ad03334)\nangular downgrade in progress (92330f9)\nen cours (0885b40)\nok (dd7a0e5)\nok (3516488)\nok (b63afc1)\nok (b679883)\nOK it works (ec28651)\ntest (0f35b5c)\n\nBug Fixes\n\ncan be use in angular 9/node 12/Typescript 3.6.0 (563071d)\ndel doc dir (96da55f)\ndelete unused file (dda5d54)\ndelete unused file (a1746bf)\ndoc and code (4a000b9)\nno subject with JSONP and XSRF (95167b9)\nno subject with JSONP and XSRF (47aba25)\nok (371886a)\npublish (613c16d)\npublish (47c249b)\npublish (a517094)\npublish and readme (412d2fd)\nsome typo (80f7bf8)\nsome typo (735b05d)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/component/otel-webtracer/otel-webtracer.component.ts\n            \n            component\n            OtelWebTracerComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            B3PropagatorConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            BatchSpanProcessorConfig\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            CommonCollectorConfig\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            InstrumentationConfig\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            JaegerPropagatorConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            OpenTelemetryConfig\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            OtelCollectorConfig\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            ZipkinCollectorConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            variable\n            CUSTOM_SPAN\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            variable\n            OpenTelemetryInjectConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            variable\n            OTELCOL_LOGGER\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/interceptor/custom-span.interface.ts\n            \n            interface\n            CustomSpan\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts\n            \n            interceptor\n            OpenTelemetryHttpInterceptor\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.service.ts\n            \n            injectable\n            ConsoleSpanExporterService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n            \n            interface\n            IExporter\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n            \n            variable\n            OTELCOL_EXPORTER\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts\n            \n            injectable\n            OtelcolExporterService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.service.ts\n            \n            injectable\n            ZipkinExporterService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts\n            \n            injectable\n            InstrumentationService\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts\n            \n            injectable\n            B3PropagatorService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts\n            \n            injectable\n            CompositePropagatorService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator/http-trace-context-propagator.service.ts\n            \n            injectable\n            HttpTraceContextPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts\n            \n            injectable\n            JaegerHttpTracePropagatorService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.service.ts\n            \n            injectable\n            NoopTextMapPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n            \n            interface\n            IPropagator\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n            \n            variable\n            OTELCOL_PROPAGATOR\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^10.2.4\n        \n            @angular/cdk : ^10.2.4\n        \n            @angular/common : ^10.2.4\n        \n            @angular/compiler : ^10.2.4\n        \n            @angular/core : ^10.2.4\n        \n            @angular/forms : ^10.2.4\n        \n            @angular/material : ^10.2.4\n        \n            @angular/platform-browser : ^10.2.4\n        \n            @angular/platform-browser-dynamic : ^10.2.4\n        \n            @angular/router : ^10.2.4\n        \n            @opentelemetry/api : ^1.0.0-rc.0\n        \n            @opentelemetry/context-zone-peer-dep : ^0.19.0\n        \n            @opentelemetry/exporter-collector : ^0.19.0\n        \n            @opentelemetry/exporter-zipkin : ^0.19.0\n        \n            @opentelemetry/instrumentation : ^0.19.0\n        \n            @opentelemetry/instrumentation-document-load : ^0.16.0\n        \n            @opentelemetry/instrumentation-fetch : ^0.19.0\n        \n            @opentelemetry/instrumentation-xml-http-request : ^0.19.0\n        \n            @opentelemetry/propagator-b3 : ^0.19.0\n        \n            @opentelemetry/propagator-jaeger : ^0.19.0\n        \n            @opentelemetry/web : ^0.19.0\n        \n            body-parser : ^1.19.0\n        \n            ngx-highlight-js : ^10.0.3\n        \n            ngx-logger : ^4.1.9\n        \n            rxjs : ^6.6.3\n        \n            tslib : ^2.0.1\n        \n            zone.js : ^0.10.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nOpenTelemetry Angular Interceptor\n@jufab/opentelemetry-angular-interceptor is an Angular Library to deploy OpenTelemetry in your Angular application\nThis library uses opentelemetry-js package\nOnly works for Angular >= 9.0.0\nMore info : https://jufab.github.io/opentelemetry-angular-interceptor/\n\n\nTable of contents\n\nOpenTelemetry Angular Interceptor\nTable of contents\nGetting started\nContent\nInstallation\nConfiguration\nExample global Configuration\nCommon Configuration\nBatchSpanProcessor Configuration\nOpenTelemetry-collector Configuration\nJaeger Propagator Configuration\nZipkin Exporter Configuration\nB3 Propagator Configuration\nInstrumentation Configuration\n\n\nAngular module\nCommons Module\nExporter module\nPropagator module\n\n\nInterceptor Module\nInstrumentation Module\nInterceptor Module And Instrumentation Module\n\n\nComponent otel-instrumentation\n(Optional) Logging in OtelColExporterModule\nNGXLogger\n\n\n(Optional) Add span attributes during interception\n\n\nHow it works\nExample\nRun\nInterceptor\nInstrumentation\n\n\n[Optional] Result in OpenTelemetry-collector\n\n\nTroubleshoot\nAngular 10 Warning\nOther\n\n\n\n\n\nGetting started\nContent\nThis library offers two possibilities to use it in Angular App : \n\nInterceptor : catch every external call with the HttpClient from angular\nInstrumentation : use instrumentation from opentelemetry-js with three web plugins : \n@opentelemetry/instrumentation-document-load\n@opentelemetry/instrumentation-fetch\n@opentelemetry/instrumentation-xml-http-request\n\n\n\nInstallation\nWith npm :\nnpm install @jufab/opentelemetry-angular-interceptor @opentelemetry/api @opentelemetry/web @opentelemetry/exporter-collector @opentelemetry/exporter-zipkin @opentelemetry/propagator-jaeger @opentelemetry/propagator-b3 @opentelemetry/context-zone-peer-dep @opentelemetry/instrumentation @opentelemetry/instrumentation-document-load @opentelemetry/instrumentation-fetch @opentelemetry/instrumentation-xml-http-requestConfiguration\nUse the \"OpentelemetryConfig\" interface to configure the Tracer\nexport interface OpenTelemetryConfig {\n  commonConfig: CommonCollectorConfig;\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  otelcolConfig?: OtelCollectorConfig;\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  zipkinConfig?: ZipkinCollectorConfig;\n  b3PropagatorConfig?: B3PropagatorConfig;\n  instrumentationConfig?: InstrumentationConfig;\n}Example global Configuration\nFrom the interceptor-example\nopentelemetryConfig: {\n    commonConfig: {\n      console: true, //(boolean) Display trace on console\n      production: false, //(boolean) Send trace with BatchSpanProcessor (true) or SimpleSpanProcessor (false)\n      logBody: true, //(boolean) true add body in a log, nothing otherwise\n      serviceName: 'interceptor-example', //Service name send in trace\n      probabilitySampler: '0.7', //Samples a configurable percentage of traces, string value between '0' to '1'\n      logLevel:DiagLogLevel.ALL //(Enum) DiagLogLevel is an Enum from @opentelemetry/api\n    },\n    batchSpanProcessorConfig: { //Only if production = true in commonConfig\n      maxQueueSize: '2048', // The maximum queue size. After the size is reached spans are dropped.\n      maxExportBatchSize: '512', // The maximum batch size of every export. It must be smaller or equal to maxQueueSize.\n      scheduledDelayMillis: '5000', // The interval between two consecutive exports\n      exportTimeoutMillis: '30000', // How long the export can run before it is cancelled\n    },\n    otelcolConfig: {\n      url: 'http://localhost:55681/v1/trace', //URL of opentelemetry collector\n    },\n    jaegerPropagatorConfig: {\n      customHeader: 'custom-header',\n    }\n  }From the instrumentation-example\nexport const environment: IEnvironment = {\n  production: false,\n  urlTest: 'http://localhost:4200/api',\n  openTelemetryConfig: {\n    commonConfig: {\n      console: true, // Display trace on console\n      production: false, // Send Trace with BatchSpanProcessor (true) or SimpleSpanProcessor (false)\n      serviceName: 'instrumentation-example', // Service name send in trace\n      probabilitySampler: '0.75', // 75% sampling\n      logLevel: DiagLogLevel.ALL //ALL Log, DiagLogLevel is an Enum from @opentelemetry/api\n    },\n    otelcolConfig: {\n      url: 'http://localhost:55681/v1/trace', // URL of opentelemetry collector\n    },\n    instrumentationConfig: {\n      xmlHttpRequest: true,\n      fetch: true,\n      documentLoad: true,\n    }\n  }\n};\nCommon Configuration\n\nconsole: (boolean) Display trace on console if true\nproduction: (boolean)Send trace via BatchSpanProcessor (Async) or SimpleSpanProcessor (Sync) : It's recommend to use BatchSpanProcessor on Production.\nserviceName: (string) Service name in your trace\nprobabilitySampler: (string) Samples a configurable percentage of traces, value between 0 to 1\nlogBody: (boolean) true add body in a log, nothing otherwise\nlogLevel: (DiagLogLevel) log level\n\nBatchSpanProcessor Configuration\nThis configuration applies if production is true in commonConfig.\n\nmaxQueueSize: (string) The maximum queue size. After the size is reached spans are dropped.\nmaxExportBatchSize: (string) The maximum batch size of every export. It must be smaller or equal to maxQueueSize.\nscheduledDelayMillis: (string) The interval between two consecutive exports\nexportTimeoutMillis: (string) How long the export can run before it is cancelled\n\nOpenTelemetry-collector Configuration\n\nurl: (string) url of opentelemetry collector (default : http://localhost:55681/v1/trace)\nheaders: list of custom header (more info: https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-exporter-collector)\nattributes : list of custom attributes (more info : https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-exporter-collector)\n\nJaeger Propagator Configuration\n\ncustomHeader: (string) custom header (more info : https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-exporter-jaeger)\n\nZipkin Exporter Configuration\n\nurl: (string) url of zipkin collector (default : http://localhost:9411/api/v2/spans)\nheaders: list of custom header (more info : hhttps://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-exporter-zipkin)\n\nB3 Propagator Configuration\n\nmultiHeader : (string) Single or Multi Header for b3propagator (default: multi). Value : 'O' (single), '1' (multi) (more info: https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-propagator-b3)\n\nInstrumentation Configuration\nthis configuration is only for the instrumentation Mode\n\nxmlHttpRequest: (boolean) Activate XmlHttpRequest plugin\nfetch:(boolean) Activate fetch plugin\ndocumentLoad: (boolean) Activate documentLoad plugin\n\nAngular module\nYou need 3 modules to add to your application.\n\nExporter Module : to define type and export of traces.\nPropagator Module : to define propagation in your HTTP header.\nLast Module, 2 choices :  \nOpenTelemetryInterceptorModule : to activate interceptor in all your http call.\nOtelWebTracerModule : to activate instrumentation (you need a component to activate it, see Component otel-instrumentation).\n\n\n\nCommons Module\nYou add this modules in your application module (generally app.module.ts)\nExporter module\nThere is 3 exporters:\n\nOtelColExporterModule : OpenTelemetry exporter (more info : https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-exporter-collector)\nConsoleSpanExporterModule : Console Exporter\nZipkinExporterModule : Zipkin Exporter (more info : https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-exporter-zipkin)\n\nPropagator module\nthere is 5 propagators (more info about propagator: https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-core)\n\nNoopHttpTextPropagatorModule : This is a fake propagator\nB3PropagatorModule : Use B3 propagator\nHttpTraceContextPropagatorModule : Use HttpTraceContext propagator\nJaegerHttpTracePropagatorModule : Use JaegerHttpPropagator (more info about this one: https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-propagator-jaeger)\nCompositePropagatorModule : use all of the propagator\n\nInterceptor Module\nJust add OpenTelemetryInterceptorModule to insert Interceptor\nimport { NgModule } from '@angular/core';\n...\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { OpenTelemetryInterceptorModule, OtelColExporterModule, CompositePropagatorModule } from '@jufab/opentelemetry-angular-interceptor';\nimport { environment } from '../environments/environment';\n...\n\n@NgModule({\n  declarations: [AppComponent, ...],\n  imports: [\n    ...\n    HttpClientModule,\n    //Insert module OpenTelemetryInterceptorModule with configuration, HttpClientModule is used for interceptor\n    OpenTelemetryInterceptorModule.forRoot(environment.opentelemetryConfig),\n    //Insert OtelCol exporter module\n    OtelColExporterModule,\n    //Insert propagator module\n    CompositePropagatorModule,\n    ...\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}Instrumentation Module\nDeclare this OtelWebTracerModule to configure instrumentation\n...\nimport { OtelColExporterModule, CompositePropagatorModule, OtelWebTracerModule } from 'projects/opentelemetry-interceptor/src/public-api';\n...\n\n@NgModule({\n  declarations: [AppComponent, ...],\n  imports: [\n    ...\n    // OtelCol Exporter Module\n    OtelColExporterModule,\n    // Composite Propagator Module\n    CompositePropagatorModule,\n    // OtelWebTracerModule to configure instrumentation component.\n    OtelWebTracerModule.forRoot(environment.openTelemetryConfig),\n    ...\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\nInterceptor Module And Instrumentation Module\nDon't use them at the same time : you're going to have the same trace twice.\nComponent otel-instrumentation\nA component named otel-instrumentation must be add in your application.\nIn instrumentation-example, this component is in app.component.html like this :\n...\n\n...there is no configuration/directive need : all is in OtelWebTracerModule\n(Optional) Logging in OtelColExporterModule\nYou can add a logger to the OtelColExporterModule with the OTELCOL_LOGGER token.\nYou can use a custom logger which implements the DiagLogger in @opentelemetry/api.\nOr, you can use an existing logger which implements the same functions (error, warn, info, debug) like ngx-logger.\nNGXLogger\nYou can use ngx-logger.\nIn your appModule, insert LoggerModule and configure it\n@NgModule({\n  ...\n  imports: [\n    LoggerModule.forRoot(environment.loggerConfig),\n  ]\n  ...And use OTELCOL_LOGGER token to inject NGXLogger\n@NgModule({\n  ...\n  providers: [\n    ...\n    { provide: OTELCOL_LOGGER, useExisting: NGXLogger }\n    ...\n  ]Don't forget to set \"logLevel\" in Common Configuration (Level must be the same between NGXLogger and common configuration)\n\nYou can see an example in the interceptor-example.\n\n(Optional) Add span attributes during interception\nThis option is only available for Interceptor Module\nImplement a CustomSpan and the method add(span: Span, request: HttpRequest, response: HttpResponse | HttpErrorResponse): Span\nImplement CustomSpan class like : \nclass CustomSpanImpl implements CustomSpan {\n  add(span: Span, request: HttpRequest, response: HttpResponse | HttpErrorResponse): Span {\n    span.setAttribute('mycustom.key', request.params + \";\" + response.status);\n    return span;\n  }\n}Inject it in you App module with CUSTOM_SPAN :\n@NgModule({\n  ...\n  providers: [\n    ...\n    { provide: CUSTOM_SPAN, useClass: CustomSpanImpl }\n    ...\n  ]How it works\nThis library is based on HttpClientModule and the HTTP_INTERCEPTORS\nOpenTelemetryInterceptor implement an HttpInterceptor and the intercept method.\nThis implementation initialise a WebTracerProvider, create a Span and add header propagation in the current call.\n\nThe response body is adding by an event in span.\n\nExample\nThis project has two example Angular Application:\n\nprojects/interceptor-example\nprojects/instrumentation-example\n\nYou can see how configure and insert all modules.\nYou can althought test opentelemetry-angular-interceptor with this two applications.\nRun\nInterceptor\nTo start this Interceptor example application, run command :\nnpm run start:complete-interceptor-exampleand open the application at http://localhost:4200\nInstrumentation\nTo start this Instrumentation example application, run command :\nnpm run start:complete-instrumentation-exampleand open the application at http://localhost:4200\n[Optional] Result in OpenTelemetry-collector\nIf you want to see the result in a collector *, there's a docker-compose available in this project.\nYou can start it with this command :\ndocker-compose -f collector/docker-compose.yaml up -dGo to the jaeger application (http://localhost:16686) to see result.\nMore info about the collector here : https://github.com/open-telemetry/opentelemetry-collector\n\n* without an Agent or a Collector you can see an error in your browser about sending a \"trace\".\n\nTroubleshoot\nAngular 10 Warning\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/web'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/core'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/tracing'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/api'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/exporter-collector/build/src/platform/browser'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependenciesAdd to your angular.json\n\"options\": {\n  \"allowedCommonJsDependencies\": [\n    \"@opentelemetry/api\",\n    \"@opentelemetry/exporter-collector\",\n    \"@opentelemetry/exporter-zipkin\",\n    \"@opentelemetry/tracing\",\n    \"@opentelemetry/web\",\n    \"@opentelemetry/core\",\n    \"@opentelemetry/propagator-jaeger\",\n    \"@opentelemetry/propagator-b3\",\n    \"@opentelemetry/instrumentation\",\n    \"@opentelemetry/instrumentation-xml-http-request\",\n    \"@opentelemetry/instrumentation-document-load\",\n    \"@opentelemetry/instrumentation-fetch\",\n    \"@opentelemetry/context-zone-peer-dep\"\n  ],Other\n\n\n\nError\nFix\n\n\n\n\nerror TS2694: Namespace 'NodeJS' has no exported member 'Timeout'.\nNeed dependence @type/node >= 12.0.2\n\n\nerror TS1086: An accessor cannot be declared in an ambient context.\nNeed dependence typescript >= 3.6.0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.You may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\nEND OF TERMS AND CONDITIONS\nAPPENDIX: How to apply the Apache License to your work.\nTo apply the Apache License to your work, attach the following\nboilerplate notice, with the fields enclosed by brackets \"[]\"\nreplaced with your own identifying information. (Don't include\nthe brackets!)  The text should be enclosed in the appropriate\ncomment syntax for the file format. We also recommend that a\nfile or class name and description of purpose be included on the\nsame \"printed page\" as the copyright notice for easier\nidentification within third-party archives.\nCopyright [yyyy] [name of copyright owner]\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        B3PropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompositePropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConsoleSpanExporterModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HttpTraceContextPropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JaegerHttpTracePropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NoopTextMapPropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OpenTelemetryInterceptorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OtelColExporterModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OtelWebTracerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ZipkinExporterModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OtelWebTracerModule\n\n\n\ncluster_OtelWebTracerModule_declarations\n\n\n\ncluster_OtelWebTracerModule_exports\n\n\n\n\nOtelWebTracerComponent\n\nOtelWebTracerComponent\n\n\n\nOtelWebTracerModule\n\nOtelWebTracerModule\n\nOtelWebTracerModule -->\n\nOtelWebTracerComponent->OtelWebTracerModule\n\n\n\n\n\nOtelWebTracerComponent \n\nOtelWebTracerComponent \n\nOtelWebTracerComponent  -->\n\nOtelWebTracerModule->OtelWebTracerComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        10 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTask for opentelemetry-angular-interceptor\nTodo in project...\nTodo\n\n Add more configuration for OpenTelemetry-collector : See here  \n Jaeger  \n Add Jaeger exporter (when it's available)  \n Add more configuration for Jaeger : here  \n\n\n Prepare baggage here  \n\nIn Progress\nDone ✓\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CUSTOM_SPAN   (projects/.../opentelemetry-config.ts)\n                        \n                        \n                            OpenTelemetryInjectConfig   (projects/.../opentelemetry-config.ts)\n                        \n                        \n                            OTELCOL_EXPORTER   (projects/.../exporter.interface.ts)\n                        \n                        \n                            OTELCOL_LOGGER   (projects/.../opentelemetry-config.ts)\n                        \n                        \n                            OTELCOL_PROPAGATOR   (projects/.../propagator.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CUSTOM_SPAN\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('otelcol.custom-span')\n                        \n                    \n\n                \n                    \n                        custom span \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OpenTelemetryInjectConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('opentelemetry.config')\n                        \n                    \n\n                \n                    \n                        OpenTelemetryInjectConfig : Config injection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OTELCOL_LOGGER\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('otelcol.logger')\n                        \n                    \n\n                \n                    \n                        Logger : injection for a logger compatible \n\n                    \n                \n\n            \n        \n\n    projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            OTELCOL_EXPORTER\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('otelcol.exporter')\n                        \n                    \n\n                \n                    \n                        injection for a Exporter \n\n                    \n                \n\n            \n        \n\n    projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            OTELCOL_PROPAGATOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('otelcol.propagator')\n                        \n                    \n\n                \n                    \n                        injection for a propagator \n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
