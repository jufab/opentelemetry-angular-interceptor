var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AwsXrayPropagatorModule.html",[0,1.19,1,2.395]],["body/modules/AwsXrayPropagatorModule.html",[1,4.132,2,1.529,3,0.345,4,0.345,5,0.265,6,0.265,7,3.842,8,4.415,9,3.467,10,2.918,11,0.338,12,0.023,13,2.179,14,0.345,15,2.316,16,1.943,17,3.776,18,3.167,19,2.705,20,1.828,21,1.943,22,1.722,23,1.002,24,1.943,25,0.345,26,0.822,27,0.019,28,0.019]],["title/injectables/AwsXrayPropagatorService.html",[17,2.189,29,0.649]],["body/injectables/AwsXrayPropagatorService.html",[3,0.318,4,0.318,5,0.244,6,0.301,7,4.356,8,4.565,9,3.931,11,0.34,12,0.023,14,0.318,16,1.79,17,4.062,18,2.917,25,0.318,26,0.758,27,0.018,28,0.018,29,1.065,30,1.79,31,2.491,32,0.865,33,0.81,34,1.634,35,3.468,36,1.251,37,4.702,38,0.984,39,6.845,40,1.327,41,3.562,42,2.203,43,1.251,44,3.193,45,1.79,46,1.79,47,1.684,48,0.81]],["title/interfaces/B3PropagatorConfig.html",[49,0.608,50,1.343]],["body/interfaces/B3PropagatorConfig.html",[3,0.172,4,0.172,5,0.132,6,0.132,11,0.263,12,0.024,14,0.172,23,0.5,25,0.453,27,0.012,28,0.012,32,0.469,33,0.439,38,0.383,43,0.678,48,0.979,49,1.043,50,2.24,51,0.912,52,1.099,53,1.099,54,1.746,55,1.14,56,1.143,57,2.33,58,2.403,59,0.601,60,2.048,61,2.034,62,1.632,63,1.541,64,1.72,65,1.915,66,1.754,67,1.209,68,1.845,69,1.845,70,1.845,71,1.845,72,1.099,73,1.845,74,1.256,75,1.099,76,1.754,77,1.031,78,1.099,79,0.912,80,1.256,81,1.173,82,1.031,83,1.363,84,1.754,85,0.566,86,0.969,87,0.747,88,1.754,89,1.173,90,0.969,91,1.256,92,1.173,93,1.173,94,1.734,95,2.336,96,1.541,97,1.031,98,1.256,99,1.256,100,1.754,101,1.541,102,1.031,103,1.031,104,1.143,105,1.099,106,1.173,107,1.541,108,1.173,109,1.256,110,1.924,111,2.1,112,1.173,113,2.1,114,1.173,115,1.173,116,1.173,117,1.642,118,1.754,119,1.173,120,1.173,121,1.099,122,1.173,123,1.173,124,1.173,125,1.173,126,1.031,127,1.099,128,1.173,129,1.173,130,1.099,131,1.173,132,1.099,133,1.031,134,1.541,135,1.924,136,1.256,137,1.811,138,2.048,139,1.173,140,1.173,141,1.173,142,1.173,143,1.099,144,1.173,145,1.031,146,0.678,147,1.173,148,0.969,149,1.173,150,1.173,151,0.969,152,1.541,153,1.173,154,1.256,155,2.192,156,0.859,157,1.099,158,1.845,159,1.967,160,1.173,161,1.173,162,1.173,163,2.182,164,1.754,165,1.173,166,1.256,167,1.256,168,1.173,169,1.099,170,1.076,171,1.541,172,1.642,173,1.642,174,1.528,175,1.44,176,1.363,177,1.825,178,1.173,179,1.448,180,1.173,181,0.969,182,1.173,183,0.969,184,1.173,185,0.969,186,1.173,187,0.969,188,0.912,189,0.859,190,2.192,191,1.099,192,1.754,193,1.541,194,1.754,195,1.283,196,1.541,197,1.173]],["title/modules/B3PropagatorModule.html",[0,1.19,198,2.395]],["body/modules/B3PropagatorModule.html",[2,1.539,3,0.347,4,0.347,5,0.267,6,0.267,10,2.938,11,0.339,12,0.023,13,2.188,14,0.347,15,2.325,16,1.956,19,2.723,20,1.84,21,1.956,22,1.733,23,1.008,24,1.956,25,0.347,26,0.828,27,0.02,28,0.02,198,4.149,199,3.867,200,3.49,201,3.79,202,3.49]],["title/injectables/B3PropagatorService.html",[29,0.649,201,2.189]],["body/injectables/B3PropagatorService.html",[3,0.239,4,0.239,5,0.184,6,0.319,11,0.319,12,0.024,14,0.239,16,1.343,25,0.239,26,0.569,27,0.015,28,0.015,29,0.885,30,1.343,31,1.87,32,1.006,33,0.608,34,1.357,35,3.109,36,1.561,38,0.974,40,1.357,41,3.253,42,1.829,43,0.939,44,2.397,45,1.343,46,1.343,47,1.264,48,0.608,50,2.511,54,1.357,55,1.44,56,1.205,58,2.199,59,1.29,60,2.565,61,2.268,62,2.362,63,2.486,65,1.979,67,1.527,85,1.068,170,1.495,174,0.996,175,1.561,199,4.619,200,4.169,201,3.641,202,2.397,203,2.982,204,3.264,205,4.089,206,3.356,207,4.113,208,4.806,209,2.518,210,2.018,211,4.806,212,2.074,213,4.806,214,3.529,215,2.748,216,2.982,217,3.711,218,6.139,219,3.529,220,1.741,221,1.741,222,2.547,223,2.397,224,3.529,225,3.529,226,3.529,227,3.529,228,3.529,229,3.529]],["title/interfaces/BatchSpanProcessorConfig.html",[49,0.608,110,1.343]],["body/interfaces/BatchSpanProcessorConfig.html",[3,0.165,4,0.165,5,0.127,6,0.127,11,0.257,12,0.024,14,0.165,23,0.479,25,0.456,27,0.012,28,0.012,32,0.449,33,0.421,38,0.367,43,0.65,48,0.963,49,1.03,50,2.023,51,0.874,52,1.054,53,1.054,54,1.726,55,1.105,56,1.533,57,1.125,58,2.464,59,1.169,60,1.493,61,1.591,62,1.321,63,0.989,64,1.573,65,1.793,66,1.125,67,0.776,68,1.8,69,1.8,70,1.8,71,1.8,72,1.054,73,1.8,74,1.204,75,1.054,76,1.699,77,0.989,78,1.054,79,0.874,80,1.204,81,1.125,82,0.989,83,1.321,84,1.699,85,0.543,86,0.929,87,0.724,88,1.699,89,1.125,90,0.929,91,1.204,92,1.125,93,1.125,94,1.691,95,2.294,96,1.493,97,0.989,98,1.204,99,1.204,100,1.699,101,1.493,102,0.989,103,0.989,104,1.114,105,1.054,106,1.125,107,1.493,108,1.125,109,1.819,110,2.023,111,2.449,112,1.699,113,2.575,114,1.699,115,1.699,116,1.699,117,2.412,118,2.048,119,1.699,120,1.699,121,2.137,122,1.699,123,1.699,124,1.699,125,1.699,126,1.493,127,2.137,128,1.699,129,1.699,130,1.591,131,1.699,132,2.137,133,0.989,134,1.493,135,1.884,136,1.204,137,1.773,138,2.005,139,1.125,140,1.125,141,1.125,142,1.125,143,1.054,144,1.125,145,0.989,146,0.65,147,1.125,148,0.929,149,1.125,150,1.125,151,0.929,152,1.493,153,1.125,154,1.204,155,2.153,156,0.823,157,1.054,158,1.8,159,1.918,160,1.125,161,1.125,162,1.125,163,2.137,164,1.699,165,1.125,166,1.204,167,1.204,168,1.125,169,1.054,170,1.049,171,1.493,172,1.591,173,1.591,174,1.501,175,1.414,176,1.321,177,1.793,178,1.125,179,1.404,180,1.125,181,0.929,182,1.125,183,0.929,184,1.125,185,0.929,186,1.125,187,0.929,188,0.874,189,0.823,190,2.153,191,1.054,192,1.699,193,1.493,194,1.699,195,1.244,196,1.493,197,1.125]],["title/interfaces/CommonCollectorConfig.html",[49,0.608,83,1.263]],["body/interfaces/CommonCollectorConfig.html",[3,0.16,4,0.16,5,0.123,6,0.123,11,0.253,12,0.024,14,0.16,23,0.464,25,0.448,27,0.011,28,0.011,32,0.435,33,0.408,38,0.355,43,0.629,48,0.951,49,1.019,50,1.995,51,0.847,52,1.02,53,1.02,54,1.711,55,1.078,56,1.616,57,1.09,58,2.405,59,1.355,60,1.458,61,1.561,62,1.289,63,0.958,64,1.548,65,1.768,66,1.09,67,0.751,68,1.765,69,1.765,70,1.765,71,1.765,72,1.02,73,1.765,74,1.166,75,1.02,76,2.244,77,0.958,78,1.02,79,0.847,80,1.166,81,1.09,82,1.458,83,1.561,84,2.544,85,0.8,86,1.37,87,0.956,88,2.544,89,1.658,90,1.37,91,1.775,92,1.658,93,2.008,94,2.252,95,2.782,96,2.236,97,1.458,98,1.775,99,1.775,100,2.544,101,1.972,102,1.458,103,1.458,104,1.221,105,2.102,106,1.658,107,1.765,108,2.244,109,1.166,110,1.854,111,2.008,112,1.09,113,2.008,114,1.09,115,1.09,116,1.09,117,1.553,118,1.658,119,1.09,120,1.09,121,1.02,122,1.09,123,1.09,124,1.09,125,1.09,126,0.958,127,1.02,128,1.09,129,1.09,130,1.02,131,1.09,132,1.02,133,0.958,134,1.458,135,1.854,136,1.166,137,1.744,138,1.972,139,1.09,140,1.09,141,1.09,142,1.09,143,1.02,144,1.09,145,0.958,146,0.629,147,1.09,148,0.9,149,1.09,150,1.09,151,0.9,152,1.458,153,1.09,154,1.166,155,2.122,156,0.797,157,1.02,158,1.765,159,1.88,160,1.09,161,1.09,162,1.09,163,2.102,164,1.658,165,1.09,166,1.166,167,1.166,168,1.09,169,1.02,170,1.029,171,1.458,172,1.553,173,1.553,174,1.48,175,1.395,176,1.289,177,1.768,178,1.09,179,1.37,180,1.09,181,0.9,182,1.09,183,0.9,184,1.09,185,0.9,186,1.09,187,0.9,188,0.847,189,0.797,190,2.122,191,1.02,192,1.658,193,1.458,194,1.658,195,1.214,196,1.458,197,1.09]],["title/modules/CompositePropagatorModule.html",[0,1.19,230,2.395]],["body/modules/CompositePropagatorModule.html",[2,1.539,3,0.347,4,0.347,5,0.267,6,0.267,10,2.938,11,0.339,12,0.023,13,2.188,14,0.347,15,2.325,16,1.956,19,2.723,20,1.84,21,1.956,22,1.733,23,1.008,24,1.956,25,0.347,26,0.828,27,0.02,28,0.02,230,4.149,231,3.867,232,3.867,233,4.149,234,3.867]],["title/injectables/CompositePropagatorService.html",[29,0.649,233,2.395]],["body/injectables/CompositePropagatorService.html",[3,0.268,4,0.268,5,0.206,6,0.301,8,3.527,9,2.691,11,0.352,12,0.024,14,0.268,16,1.509,17,4.14,18,2.459,19,3.257,25,0.268,26,0.639,27,0.017,28,0.017,29,0.956,30,1.509,31,2.1,32,0.729,33,0.683,34,1.466,35,3.257,36,1.382,38,0.924,40,1.119,41,3.381,42,1.977,43,1.055,45,1.509,46,1.509,47,1.419,48,0.683,56,0.994,59,0.936,85,0.881,87,1.206,200,2.691,201,4.063,202,2.691,206,3.257,209,2.833,212,1.71,220,1.955,231,4.359,232,4.359,233,4.175,235,3.963,236,4.14,237,4.14,238,3.963,239,3.963,240,6.549,241,2.691,242,3.372,243,2.752,244,2.691,245,2.266,246,2.241,247,2.691,248,3.963,249,3.963,250,3.963,251,3.963,252,3.372,253,3.963,254,3.963,255,3.963,256,3.963]],["title/modules/ConsoleSpanExporterModule.html",[0,1.19,257,2.395]],["body/modules/ConsoleSpanExporterModule.html",[2,1.536,3,0.347,4,0.347,5,0.267,6,0.267,11,0.339,12,0.023,13,2.185,14,0.347,20,1.836,21,1.952,22,1.729,23,1.006,24,1.952,25,0.347,26,0.826,27,0.019,28,0.019,94,1.952,104,1.53,257,4.143,258,3.858,259,3.482,260,4.143,261,3.482,262,2.633,263,2.529]],["title/injectables/ConsoleSpanExporterService.html",[29,0.649,260,2.395]],["body/injectables/ConsoleSpanExporterService.html",[3,0.32,4,0.32,5,0.246,6,0.302,11,0.327,12,0.023,14,0.32,25,0.32,26,0.762,27,0.019,28,0.019,29,1.069,30,1.801,32,0.871,33,0.815,34,1.641,36,1.259,38,0.986,40,1.336,45,1.801,46,1.801,47,1.694,48,0.815,64,1.847,87,0.928,104,1.645,146,1.546,258,4.373,260,4.455,263,2.333,264,2.935,265,4.07,266,4.025,267,4.936,268,4.178,269,2.508,270,2.506,271,2.506]],["title/interfaces/CustomSpan.html",[49,0.608,79,1.263]],["body/interfaces/CustomSpan.html",[3,0.299,4,0.299,5,0.23,6,0.29,11,0.29,12,0.023,25,0.299,27,0.018,28,0.018,32,1.026,33,0.762,34,1.574,36,1.177,40,1.249,43,1.177,47,1.996,49,1.138,51,1.584,56,1.109,59,1.045,79,1.996,85,0.983,103,2.594,104,1.798,212,1.909,222,3.233,272,4.742,273,3.764,274,4.742,275,4.194,276,3.572,277,3.975,278,4.742,279,4.821,280,5.073,281,5.073,282,4.821,283,4.424,284,4.742,285,4.742,286,3.004]],["title/interfaces/IExporter.html",[49,0.608,269,1.522]],["body/interfaces/IExporter.html",[3,0.325,4,0.325,5,0.25,6,0.305,11,0.305,12,0.023,14,0.325,25,0.397,27,0.019,28,0.019,32,0.885,33,0.829,34,1.657,36,1.28,38,0.723,40,1.358,48,0.829,49,1.092,51,1.722,64,1.865,72,2.075,87,0.944,146,1.8,176,1.722,177,1.622,215,3.355,262,2.075,265,4.093,268,4.323,269,2.533,270,2.548,271,2.548,287,3.619,288,4.809,289,4.417,290,5.87,291,4.091]],["title/interfaces/IPropagator.html",[42,1.343,49,0.608]],["body/interfaces/IPropagator.html",[3,0.329,4,0.329,5,0.253,6,0.308,11,0.308,12,0.023,14,0.329,15,1.853,25,0.4,27,0.019,28,0.019,32,0.896,33,0.839,34,1.67,35,3.511,36,1.296,38,0.732,40,1.375,41,3.375,42,2.251,43,1.296,48,0.839,49,1.098,51,1.744,72,2.101,156,2.29,176,1.744,177,1.642,215,3.381,289,4.451,292,3.664,293,4.87,294,5.032,295,5.915,296,4.143]],["title/interfaces/IgnoreUrlsConfig.html",[49,0.608,158,1.428]],["body/interfaces/IgnoreUrlsConfig.html",[3,0.172,4,0.172,5,0.132,6,0.132,11,0.263,12,0.024,14,0.172,23,0.499,25,0.453,27,0.012,28,0.012,32,0.468,33,0.438,38,0.382,43,0.677,48,0.978,49,1.042,50,2.059,51,0.911,52,1.098,53,1.098,54,1.746,55,1.139,56,1.142,57,1.172,58,2.366,59,0.6,60,1.54,61,1.631,62,1.362,63,1.03,64,1.606,65,1.824,66,1.172,67,0.808,68,1.844,69,1.844,70,1.844,71,1.844,72,1.098,73,1.844,74,1.255,75,1.098,76,1.752,77,1.03,78,1.098,79,0.911,80,1.255,81,1.172,82,1.03,83,1.362,84,1.752,85,0.565,86,0.968,87,0.746,88,1.752,89,1.172,90,0.968,91,1.255,92,1.172,93,1.172,94,1.733,95,2.334,96,1.54,97,1.03,98,1.255,99,1.255,100,1.752,101,1.54,102,1.03,103,1.03,104,1.142,105,1.098,106,1.172,107,1.54,108,1.172,109,1.255,110,1.923,111,2.098,112,1.172,113,2.098,114,1.172,115,1.172,116,1.172,117,1.641,118,1.752,119,1.172,120,1.172,121,1.098,122,1.172,123,1.172,124,1.172,125,1.172,126,1.03,127,1.098,128,1.172,129,1.172,130,1.098,131,1.172,132,1.098,133,1.03,134,1.54,135,1.923,136,1.255,137,1.81,138,2.047,139,1.172,140,1.172,141,1.172,142,1.172,143,1.098,144,1.172,145,1.03,146,0.677,147,1.172,148,0.968,149,1.172,150,1.172,151,0.968,152,1.54,153,1.172,154,1.255,155,2.191,156,0.858,157,1.098,158,2.191,159,2.61,160,1.752,161,1.752,162,1.752,163,2.449,164,2.329,165,1.752,166,1.255,167,1.255,168,1.752,169,1.965,170,1.075,171,1.54,172,1.641,173,1.641,174,1.527,175,1.439,176,1.362,177,1.824,178,1.172,179,1.447,180,1.172,181,0.968,182,1.172,183,0.968,184,1.172,185,0.968,186,1.172,187,0.968,188,0.911,189,0.858,190,2.191,191,1.098,192,1.752,193,1.54,194,1.752,195,1.282,196,1.54,197,1.172,297,2.164,298,2.164]],["title/injectables/InstrumentationService.html",[29,0.649,299,2.189]],["body/injectables/InstrumentationService.html",[3,0.146,4,0.146,5,0.112,6,0.319,11,0.314,12,0.024,14,0.146,15,0.823,25,0.146,26,0.348,27,0.011,28,0.011,29,0.618,30,0.823,32,0.926,33,0.373,34,0.948,36,1.605,38,0.835,40,1.785,42,1.768,45,0.823,46,1.279,48,0.99,54,1.312,55,1.006,56,1.394,58,1.802,59,1.357,64,1.309,65,1.567,67,1.309,77,2.488,78,0.933,82,1.361,83,1.664,85,1.235,86,1.279,87,0.659,90,2.187,94,2.407,95,2.729,96,2.443,104,1.441,146,1.683,156,0.729,169,2.005,170,1.097,171,1.669,174,0.61,175,1.605,185,0.823,189,1.875,206,3.665,209,1.899,210,1.236,212,2.399,215,1.92,216,2.084,220,1.066,221,1.066,222,3.306,223,1.468,262,0.933,267,2.528,269,2.651,270,1.78,271,1.146,276,1.78,277,2.084,299,2.883,300,1.839,301,2.528,302,4.532,303,5.326,304,2.858,305,2.858,306,2.798,307,4.646,308,2.858,309,2.858,310,3.505,311,3.505,312,3.953,313,3.953,314,3.36,315,2.858,316,2.162,317,2.858,318,4.441,319,2.858,320,2.162,321,2.528,322,4.889,323,2.858,324,3.953,325,2.858,326,2.162,327,4.646,328,2.162,329,3.36,330,2.162,331,4.54,332,2.528,333,2.084,334,6.144,335,3.36,336,2.162,337,2.858,338,3.953,339,2.162,340,2.162,341,3.1,342,3.1,343,2.281,344,1.839,345,2.162,346,2.858,347,4.12,348,3.496,349,2.162,350,1.839,351,1.839,352,1.627,353,1.839,354,2.858,355,1.839,356,1.839,357,3.36,358,1.839,359,2.858,360,2.858,361,1.839,362,1.627,363,2.858,364,1.627,365,1.839,366,1.627,367,1.839,368,1.839,369,1.839,370,2.162,371,2.162,372,2.858,373,1.839,374,1.839,375,1.839,376,2.162,377,3.36,378,2.162,379,1.839,380,1.839,381,2.162,382,2.162,383,1.839,384,2.162,385,1.839,386,1.839,387,2.162,388,2.162,389,1.839,390,1.839,391,1.839,392,2.162,393,2.162,394,1.839,395,1.839,396,2.162,397,2.162,398,2.162]],["title/modules/JaegerHttpTracePropagatorModule.html",[0,1.19,399,2.395]],["body/modules/JaegerHttpTracePropagatorModule.html",[2,1.519,3,0.343,4,0.343,5,0.264,6,0.264,10,2.899,11,0.337,12,0.023,13,2.171,14,0.343,15,2.307,16,1.93,19,2.687,20,1.816,21,1.93,22,1.71,23,0.995,24,1.93,25,0.343,26,0.817,27,0.019,28,0.019,87,1.272,237,3.761,245,2.899,246,2.798,247,3.444,399,4.116,400,3.816]],["title/injectables/JaegerHttpTracePropagatorService.html",[29,0.649,237,2.189]],["body/injectables/JaegerHttpTracePropagatorService.html",[3,0.272,4,0.272,5,0.209,6,0.322,11,0.342,12,0.024,14,0.272,16,1.532,25,0.272,26,0.648,27,0.017,28,0.017,29,0.965,30,1.532,31,2.133,32,0.965,33,0.694,34,1.481,35,3.277,36,1.553,38,0.929,40,1.136,41,3.398,42,1.997,43,1.071,44,2.733,45,1.532,46,1.532,47,1.442,48,0.694,55,1.571,56,1.009,58,1.879,59,1.239,62,1.879,85,0.894,87,1.333,137,1.879,157,2.519,170,1.553,174,1.136,175,1.646,206,3.092,209,2.689,210,2.301,212,1.737,220,1.986,221,1.986,222,2.133,223,2.733,237,3.837,245,2.301,246,2.931,247,4.2,306,2.733,400,4.654,401,4.463,402,4.025,403,5.457,404,2.733,405,4.025,406,4.025,407,4.025]],["title/interfaces/JaegerPropagatorConfig.html",[49,0.608,155,1.428]],["body/interfaces/JaegerPropagatorConfig.html",[3,0.174,4,0.174,5,0.134,6,0.134,11,0.264,12,0.024,14,0.174,23,0.505,25,0.454,27,0.012,28,0.012,32,0.473,33,0.443,38,0.386,43,0.684,48,0.982,49,1.046,50,2.069,51,0.921,52,1.11,53,1.11,54,1.751,55,1.148,56,1.149,57,1.185,58,2.407,59,0.607,60,1.553,61,1.642,62,1.642,63,1.041,64,1.615,65,1.833,66,1.185,67,0.817,68,1.856,69,1.856,70,1.856,71,1.856,72,1.11,73,1.856,74,1.268,75,1.11,76,1.767,77,1.041,78,1.11,79,0.921,80,1.268,81,1.185,82,1.041,83,1.373,84,1.767,85,0.571,86,0.979,87,0.752,88,1.767,89,1.185,90,0.979,91,1.268,92,1.185,93,1.185,94,1.745,95,2.345,96,1.553,97,1.041,98,1.268,99,1.268,100,1.767,101,1.553,102,1.041,103,1.041,104,1.149,105,1.11,106,1.185,107,1.553,108,1.185,109,1.268,110,1.934,111,2.112,112,1.185,113,2.112,114,1.185,115,1.185,116,1.185,117,1.655,118,1.767,119,1.185,120,1.185,121,1.11,122,1.185,123,1.185,124,1.185,125,1.185,126,1.041,127,1.11,128,1.185,129,1.185,130,1.11,131,1.185,132,1.11,133,1.041,134,1.553,135,1.934,136,1.268,137,1.946,138,2.058,139,1.185,140,1.185,141,1.185,142,1.185,143,1.11,144,1.185,145,1.041,146,0.684,147,1.185,148,0.979,149,1.185,150,1.185,151,0.979,152,1.553,153,1.185,154,1.268,155,2.391,156,1.293,157,2.193,158,1.856,159,1.978,160,1.185,161,1.185,162,1.185,163,2.193,164,1.767,165,1.185,166,1.268,167,1.268,168,1.185,169,1.11,170,1.082,171,1.553,172,1.655,173,1.655,174,1.534,175,1.446,176,1.373,177,1.833,178,1.185,179,1.459,180,1.185,181,0.979,182,1.185,183,0.979,184,1.185,185,0.979,186,1.185,187,0.979,188,0.921,189,0.867,190,2.201,191,1.11,192,1.767,193,1.553,194,1.767,195,1.293,196,1.553,197,1.185]],["title/modules/NoopSpanExporterModule.html",[0,1.19,408,2.395]],["body/modules/NoopSpanExporterModule.html",[2,1.509,3,0.34,4,0.34,5,0.262,6,0.262,11,0.348,12,0.023,13,2.162,14,0.34,20,1.804,21,1.918,22,1.699,23,0.989,24,1.918,25,0.34,26,0.812,27,0.019,28,0.019,104,1.514,259,3.422,261,3.422,262,2.606,263,2.485,408,4.1,409,3.791,410,3.791,411,6.038,412,3.791,413,4.1,414,4.287]],["title/injectables/NoopSpanExporterService.html",[29,0.649,413,2.395]],["body/injectables/NoopSpanExporterService.html",[3,0.32,4,0.32,5,0.246,6,0.302,11,0.327,12,0.023,14,0.32,25,0.32,26,0.762,27,0.019,28,0.019,29,1.069,30,1.801,32,0.871,33,0.815,34,1.641,36,1.259,38,0.986,40,1.336,45,1.801,46,1.801,47,1.694,87,0.928,104,1.645,146,1.546,189,2.121,263,2.333,264,2.935,265,4.07,266,4.025,268,4.178,269,2.508,270,2.506,271,2.506,409,4.373,410,4.373,413,4.455,415,5.811]],["title/modules/NoopTextMapPropagatorModule.html",[0,1.19,416,2.654]],["body/modules/NoopTextMapPropagatorModule.html",[2,1.519,3,0.343,4,0.343,5,0.264,6,0.264,10,2.899,11,0.337,12,0.023,13,2.171,14,0.343,15,2.307,16,1.93,19,2.687,20,1.816,21,1.93,22,1.71,23,0.995,24,1.93,25,0.343,26,0.817,27,0.019,28,0.019,246,2.189,414,4.315,416,4.561,417,3.816,418,4.402,419,3.816,420,4.561,421,4.116]],["title/injectables/NoopTextMapPropagatorService.html",[29,0.649,421,2.395]],["body/injectables/NoopTextMapPropagatorService.html",[3,0.32,4,0.32,5,0.246,6,0.303,11,0.327,12,0.023,14,0.32,16,1.804,25,0.32,26,0.764,27,0.019,28,0.019,29,1.071,30,1.804,31,2.512,32,0.872,33,0.817,34,1.643,35,3.478,36,1.261,38,0.987,40,1.338,41,3.57,42,2.215,43,1.261,45,1.804,46,1.804,47,1.698,188,2.413,246,2.511,417,4.378,418,4.458,419,4.378,420,4.378,421,3.951,422,5.818,423,4.74]],["title/interfaces/OpenTelemetryConfig.html",[49,0.608,170,0.833]],["body/interfaces/OpenTelemetryConfig.html",[3,0.164,4,0.164,5,0.126,6,0.126,11,0.256,12,0.024,14,0.164,23,0.476,25,0.45,27,0.012,28,0.012,32,0.446,33,0.418,38,0.364,43,0.645,48,0.961,49,1.027,50,2.406,51,0.868,52,1.046,53,1.046,54,1.683,55,1.098,56,1.625,57,1.117,58,2.344,59,1.367,60,1.485,61,1.584,62,1.313,63,0.982,64,1.567,65,1.787,66,1.117,67,0.77,68,1.792,69,1.792,70,1.792,71,1.792,72,1.046,73,1.792,74,1.196,75,1.046,76,1.69,77,0.982,78,1.046,79,0.868,80,1.196,81,1.117,82,0.982,83,1.767,84,1.69,85,0.539,86,0.923,87,0.72,88,1.69,89,1.117,90,0.923,91,1.196,92,1.117,93,1.117,94,1.684,95,2.286,96,1.485,97,0.982,98,1.196,99,1.196,100,1.69,101,1.485,102,0.982,103,0.982,104,1.109,105,1.046,106,1.117,107,1.485,108,1.117,109,1.196,110,2.368,111,2.038,112,1.117,113,2.038,114,1.117,115,1.117,116,1.117,117,1.583,118,1.69,119,1.117,120,1.117,121,1.046,122,1.117,123,1.117,124,1.117,125,1.117,126,0.982,127,1.046,128,1.117,129,1.117,130,1.046,131,1.117,132,1.046,133,0.982,134,1.998,135,1.877,136,1.196,137,1.767,138,1.998,139,1.117,140,1.117,141,1.117,142,1.117,143,1.046,144,1.117,145,0.982,146,0.645,147,1.117,148,0.923,149,1.117,150,1.117,151,0.923,152,1.998,153,1.117,154,1.196,155,2.56,156,0.817,157,1.046,158,2.146,159,1.909,160,1.117,161,1.117,162,1.117,163,2.572,164,1.69,165,1.117,166,1.196,167,1.196,168,1.117,169,1.046,170,1.251,171,2.257,172,2.405,173,2.405,174,1.496,175,1.41,176,1.313,177,1.787,178,1.117,179,1.396,180,1.117,181,0.923,182,1.117,183,0.923,184,1.117,185,0.923,186,1.117,187,0.923,188,0.868,189,0.817,190,2.146,191,1.046,192,1.69,193,1.485,194,1.69,195,1.237,196,1.485,197,1.117]],["title/interceptors/OpenTelemetryHttpInterceptor.html",[424,1.74,425,2.395]],["body/interceptors/OpenTelemetryHttpInterceptor.html",[3,0.108,4,0.108,5,0.083,6,0.318,11,0.325,12,0.024,14,0.108,15,0.611,25,0.108,26,0.544,27,0.008,28,0.008,29,0.487,32,0.858,33,0.277,34,0.747,36,1.608,38,0.865,40,1.592,42,1.49,43,0.704,45,0.611,46,1.007,47,0.575,48,0.92,49,0.456,54,1.105,55,0.792,56,1.413,58,1.209,59,1.298,62,1.402,64,1.073,65,0.892,67,1.073,75,1.69,79,2.019,81,0.739,83,1.402,85,1.186,86,1.007,87,0.519,90,1.774,94,1.007,96,1.071,101,1.071,102,1.367,103,1.586,104,1.617,105,1.457,117,0.692,121,0.692,127,0.692,132,0.692,137,0.947,146,1.042,148,0.611,156,1.461,170,0.924,171,1.071,174,0.453,175,1.312,177,1.572,179,1.774,181,0.611,183,0.611,188,0.947,189,1.138,195,0.541,206,3.599,209,1.804,210,0.917,212,2.223,215,2.238,216,1.641,220,0.792,221,1.305,222,2.987,241,1.09,243,1.402,246,0.692,262,0.692,267,1.991,269,1.69,270,1.402,271,0.85,274,3.331,275,2.946,276,2.075,277,2.892,279,4.883,280,4.333,281,3.259,282,3.259,286,1.09,302,3.685,304,2.251,305,2.251,308,3.331,309,3.331,310,3.331,311,2.872,312,3.331,313,3.331,315,1.365,317,1.365,318,3.508,319,2.251,321,1.991,322,3.966,323,2.251,324,3.331,325,2.251,331,3.508,332,3.71,333,1.641,337,2.251,338,2.251,341,2.54,342,2.54,343,1.796,344,1.365,346,2.251,348,2.946,354,2.251,355,1.365,356,1.365,358,1.365,359,2.251,360,2.251,361,1.365,362,1.207,363,2.251,364,1.207,366,3.508,372,2.251,373,1.365,374,1.365,375,1.365,379,1.365,380,1.365,383,1.365,385,2.251,386,1.365,389,1.365,390,1.365,391,1.365,394,1.365,395,1.365,404,1.09,412,1.207,424,1.305,425,1.796,426,1.605,427,5.206,428,1.365,429,2.251,430,3.916,431,2.646,432,3.375,433,2.872,434,2.646,435,5.152,436,2.646,437,2.646,438,2.646,439,2.646,440,2.646,441,1.605,442,1.605,443,1.605,444,3.331,445,2.646,446,2.646,447,2.251,448,2.646,449,1.605,450,2.251,451,2.646,452,1.605,453,1.605,454,2.646,455,2.251,456,1.605,457,1.605,458,1.605,459,1.605,460,3.916,461,1.605,462,2.646,463,1.991,464,1.512,465,3.375,466,1.605,467,1.605,468,1.605,469,1.365,470,3.916,471,1.605,472,2.646,473,2.251,474,1.605,475,1.605,476,1.365,477,1.605,478,1.605,479,3.916,480,1.365,481,2.646,482,1.605,483,2.646,484,3.375,485,2.646,486,2.646,487,2.646,488,2.646,489,2.646,490,2.646,491,1.605,492,1.605,493,2.646,494,2.646,495,1.605,496,1.605,497,1.605,498,1.605,499,1.605,500,1.365,501,1.605,502,1.605,503,2.646,504,1.605,505,1.605,506,1.605,507,2.646,508,1.605,509,1.605,510,1.605,511,1.605,512,1.605,513,1.605,514,2.646,515,1.365,516,1.605,517,1.207,518,1.605,519,1.605,520,1.605,521,1.605,522,1.605,523,2.946,524,2.646,525,2.646,526,1.605,527,1.605,528,1.605,529,2.646,530,1.991,531,1.605,532,2.646,533,2.646,534,1.605,535,1.605,536,1.605,537,1.605,538,1.605,539,1.605,540,1.605,541,1.605,542,1.605,543,1.605,544,1.605,545,1.605,546,1.605,547,1.605,548,1.605,549,1.605,550,1.605,551,1.605,552,1.605,553,1.605,554,1.605,555,1.605,556,1.605,557,1.365,558,1.605,559,3.375,560,1.605,561,1.605,562,1.605,563,1.605,564,1.605,565,1.605,566,3.375,567,1.605,568,1.605,569,1.605,570,1.605,571,1.605,572,1.605,573,1.605,574,1.605,575,1.605,576,1.605,577,1.605,578,1.605,579,1.605,580,1.605,581,1.605,582,1.605,583,1.605,584,1.605]],["title/modules/OpenTelemetryInterceptorModule.html",[0,1.19,585,2.395]],["body/modules/OpenTelemetryInterceptorModule.html",[2,1.208,3,0.272,4,0.272,5,0.21,6,0.273,11,0.334,12,0.024,13,2.092,14,0.272,20,1.444,21,1.535,22,1.36,23,0.791,24,1.535,25,0.272,26,0.65,27,0.017,28,0.017,34,1.138,36,1.073,38,0.606,40,1.138,48,0.695,56,1.465,59,0.952,61,1.444,68,2.506,69,2.506,70,2.506,71,2.506,73,2.506,85,0.896,126,1.633,170,1.461,175,1.554,177,1.36,187,1.535,188,2.092,189,1.97,190,2.599,193,1.633,195,1.36,207,3.952,209,1.858,212,1.74,221,1.989,286,2.738,306,2.738,333,2.502,424,1.989,425,3.567,585,4.358,586,5.252,587,4.032,588,4.468,589,3.43,590,4.032,591,3.43,592,4.97,593,4.468,594,4.468,595,4.468,596,4.032,597,4.032,598,4.468,599,3.43,600,3.43,601,3.034,602,5.252,603,4.032]],["title/modules/OtelColExporterModule.html",[0,1.19,604,2.395]],["body/modules/OtelColExporterModule.html",[2,1.543,3,0.348,4,0.348,5,0.268,6,0.268,11,0.339,12,0.023,13,2.191,14,0.348,20,1.845,21,1.96,22,1.737,23,1.011,24,1.96,25,0.348,26,0.83,27,0.02,28,0.02,259,3.497,261,3.497,262,2.64,263,2.541,604,4.154,605,3.876,606,4.154,607,3.876]],["title/interfaces/OtelCollectorConfig.html",[49,0.608,134,1.428]],["body/interfaces/OtelCollectorConfig.html",[3,0.165,4,0.165,5,0.127,6,0.127,11,0.258,12,0.024,14,0.165,23,0.48,25,0.453,27,0.012,28,0.012,32,0.45,33,0.422,38,0.368,43,0.651,48,0.964,49,1.03,50,2.025,51,0.876,52,1.056,53,1.056,54,1.727,55,1.106,56,1.563,57,1.127,58,2.443,59,1.17,60,1.496,61,1.593,62,1.323,63,0.991,64,1.778,65,1.959,66,1.127,67,0.778,68,1.802,69,1.802,70,1.802,71,1.802,72,1.056,73,1.802,74,1.207,75,1.056,76,1.702,77,0.991,78,1.056,79,0.876,80,1.207,81,1.127,82,0.991,83,1.323,84,1.702,85,0.544,86,0.931,87,0.725,88,1.702,89,1.127,90,0.931,91,1.207,92,1.127,93,1.127,94,1.693,95,2.296,96,1.496,97,0.991,98,1.207,99,1.207,100,1.702,101,1.496,102,0.991,103,0.991,104,1.116,105,1.056,106,1.127,107,1.802,108,1.127,109,1.207,110,1.886,111,2.284,112,1.127,113,2.05,114,1.127,115,1.127,116,1.127,117,1.594,118,2.05,119,1.127,120,1.127,121,1.056,122,1.127,123,1.127,124,1.127,125,1.127,126,0.991,127,1.056,128,1.127,129,1.127,130,1.056,131,1.127,132,1.056,133,1.496,134,1.802,135,2.275,136,1.822,137,1.905,138,2.421,139,2.05,140,1.702,141,1.702,142,1.702,143,2.139,144,1.702,145,1.496,146,0.983,147,1.702,148,1.406,149,1.702,150,2.284,151,0.931,152,1.496,153,1.127,154,1.207,155,2.155,156,0.825,157,1.056,158,1.802,159,1.92,160,1.127,161,1.127,162,1.127,163,2.139,164,1.702,165,1.127,166,1.207,167,1.207,168,1.127,169,1.056,170,1.051,171,1.496,172,1.594,173,1.594,174,1.502,175,1.416,176,1.323,177,1.794,178,1.127,179,1.406,180,1.127,181,0.931,182,1.127,183,0.931,184,1.127,185,0.931,186,1.127,187,0.931,188,0.876,189,0.825,190,2.155,191,1.056,192,1.702,193,1.496,194,1.702,195,1.246,196,1.496,197,1.127]],["title/modules/OtelWebTracerModule.html",[0,1.19,608,2.395]],["body/modules/OtelWebTracerModule.html",[2,1.201,3,0.271,4,0.271,5,0.209,6,0.272,11,0.321,12,0.024,13,2.087,14,0.271,22,1.353,23,0.787,25,0.354,26,0.646,27,0.017,28,0.017,34,1.132,36,1.067,38,0.787,40,1.132,48,0.691,56,1.461,59,0.947,61,1.437,68,2.501,69,2.501,70,2.501,71,2.501,73,2.501,85,0.891,170,1.458,175,1.55,177,1.765,187,1.527,188,2.087,189,1.965,190,2.661,193,1.624,195,1.353,207,3.939,209,1.848,212,1.731,221,1.979,299,3.975,306,2.724,333,2.489,588,4.453,589,3.413,591,3.413,592,4.957,593,4.453,598,4.453,599,3.413,600,3.413,601,3.018,608,4.351,609,3.939,610,3.018,611,4.011,612,4.453,613,4.011,614,3.939,615,4.453,616,3.413,617,4.011,618,4.011,619,4.011]],["title/injectables/OtelcolExporterService.html",[29,0.649,606,2.395]],["body/injectables/OtelcolExporterService.html",[3,0.279,4,0.279,5,0.215,6,0.325,11,0.344,12,0.024,14,0.279,25,0.279,26,0.952,27,0.017,28,0.017,29,0.982,30,1.573,32,0.982,33,0.712,34,1.507,36,1.573,38,0.621,40,1.167,45,1.573,46,1.573,47,1.48,54,1.167,55,1.598,56,1.338,59,1.26,85,0.918,87,1.047,135,1.573,138,1.674,143,1.783,145,1.674,146,1.1,170,1.564,172,2.551,174,1.167,175,1.662,206,3.132,209,2.878,210,2.362,212,1.783,217,2.806,220,2.039,221,2.039,222,2.19,246,1.783,263,2.039,264,2.564,265,3.667,268,3.311,269,2.303,270,2.19,271,2.828,364,3.11,365,3.516,366,3.11,367,3.516,368,3.516,369,3.516,500,3.516,605,4.701,606,4.242,620,5.337,621,4.133,622,5.337,623,5.911,624,5.337,625,4.133,626,3.11,627,4.133,628,4.133,629,4.133,630,4.133,631,4.133]],["title/modules/W3CTraceContextPropagatorModule.html",[0,1.19,632,2.395]],["body/modules/W3CTraceContextPropagatorModule.html",[2,1.519,3,0.343,4,0.343,5,0.264,6,0.264,10,2.899,11,0.337,12,0.023,13,2.171,14,0.343,15,2.307,16,1.93,19,2.687,20,1.816,21,1.93,22,1.71,23,0.995,24,1.93,25,0.343,26,0.817,27,0.019,28,0.019,87,1.272,236,3.761,242,4.315,243,3.435,244,3.444,632,4.116,633,3.816]],["title/injectables/W3CTraceContextPropagatorService.html",[29,0.649,236,2.189]],["body/injectables/W3CTraceContextPropagatorService.html",[3,0.316,4,0.316,5,0.243,6,0.3,11,0.34,12,0.023,14,0.316,16,1.782,25,0.316,26,0.754,27,0.018,28,0.018,29,1.063,30,1.782,31,2.481,32,0.862,33,0.807,34,1.63,35,3.464,36,1.246,38,0.982,40,1.322,41,3.557,42,2.198,43,1.246,45,1.782,46,1.782,47,1.677,48,0.807,87,1.283,236,4.342,241,3.18,243,3.464,244,3.922,401,3.984,633,4.345,634,5.775]],["title/interfaces/ZipkinCollectorConfig.html",[49,0.608,152,1.428]],["body/interfaces/ZipkinCollectorConfig.html",[3,0.171,4,0.171,5,0.132,6,0.132,11,0.262,12,0.024,14,0.171,23,0.497,25,0.453,27,0.012,28,0.012,32,0.466,33,0.436,38,0.381,43,0.674,48,0.977,49,1.041,50,2.055,51,0.907,52,1.093,53,1.093,54,1.744,55,1.135,56,1.354,57,1.167,58,2.401,59,1.191,60,1.535,61,1.627,62,1.357,63,1.026,64,1.716,65,1.911,66,1.167,67,0.805,68,1.839,69,1.839,70,1.839,71,1.839,72,1.093,73,1.839,74,1.249,75,1.093,76,1.746,77,1.026,78,1.093,79,0.907,80,1.249,81,1.167,82,1.026,83,1.357,84,1.746,85,0.563,86,0.964,87,0.744,88,1.746,89,1.167,90,0.964,91,1.249,92,1.167,93,1.167,94,1.729,95,2.33,96,1.535,97,1.026,98,1.249,99,1.249,100,1.746,101,1.535,102,1.026,103,1.026,104,1.139,105,1.093,106,1.167,107,1.535,108,1.167,109,1.249,110,1.919,111,2.093,112,1.167,113,2.093,114,1.167,115,1.167,116,1.167,117,1.636,118,1.746,119,1.167,120,1.167,121,1.093,122,1.167,123,1.167,124,1.167,125,1.167,126,1.026,127,1.093,128,1.167,129,1.167,130,1.093,131,1.167,132,1.093,133,1.026,134,1.535,135,2.299,136,1.249,137,1.934,138,2.446,139,1.167,140,1.167,141,1.167,142,1.167,143,1.093,144,1.167,145,1.026,146,0.674,147,1.167,148,0.964,149,1.167,150,1.167,151,1.443,152,1.839,153,1.746,154,1.249,155,2.187,156,0.854,157,1.093,158,1.839,159,1.96,160,1.167,161,1.167,162,1.167,163,2.176,164,1.746,165,1.167,166,1.249,167,1.249,168,1.167,169,1.093,170,1.072,171,1.535,172,1.636,173,1.636,174,1.524,175,1.437,176,1.357,177,1.821,178,1.167,179,1.443,180,1.167,181,0.964,182,1.167,183,0.964,184,1.167,185,0.964,186,1.167,187,0.964,188,0.907,189,0.854,190,2.187,191,1.093,192,1.746,193,1.535,194,1.746,195,1.278,196,1.535,197,1.167,635,3.79]],["title/modules/ZipkinExporterModule.html",[0,1.19,636,2.395]],["body/modules/ZipkinExporterModule.html",[2,1.543,3,0.348,4,0.348,5,0.268,6,0.268,11,0.339,12,0.023,13,2.191,14,0.348,20,1.845,21,1.96,22,1.737,23,1.011,24,1.96,25,0.348,26,0.83,27,0.02,28,0.02,151,1.96,259,3.497,261,3.497,262,2.64,263,2.541,636,4.154,637,3.876,638,4.154]],["title/injectables/ZipkinExporterService.html",[29,0.649,638,2.395]],["body/injectables/ZipkinExporterService.html",[3,0.278,4,0.278,5,0.214,6,0.324,11,0.336,12,0.024,14,0.278,25,0.278,26,0.951,27,0.017,28,0.017,29,0.98,30,1.567,32,0.98,33,0.71,34,1.503,36,1.57,38,0.938,40,1.163,45,1.567,46,1.567,47,1.475,48,0.71,55,1.595,56,1.032,59,1.257,85,0.915,87,0.808,135,1.567,138,1.668,151,1.567,170,1.562,173,2.906,174,1.163,175,1.66,206,3.126,209,2.719,210,2.354,212,1.777,220,2.031,221,2.031,222,2.182,223,2.796,263,2.031,264,2.555,265,3.871,268,4.008,269,2.298,270,2.182,271,2.182,626,3.099,637,4.694,638,4.236,639,5.325,640,4.118,641,5.901,642,5.325,643,5.325,644,5.901,645,4.118,646,4.118,647,4.118,648,4.118]],["title/changelog.html",[649,1.831,650,1.831,651,2.51]],["body/changelog.html",[5,0.188,11,0.092,12,0.009,18,1.101,27,0.009,28,0.009,38,0.267,48,0.717,54,1.289,60,1.163,61,1.028,62,0.635,63,1.163,64,0.564,65,0.598,67,1.99,77,1.684,85,0.804,87,0.348,90,0.675,93,0.817,97,1.684,101,0.718,102,0.718,104,1.042,107,1.163,110,1.093,130,0.765,133,1.465,135,0.675,137,0.635,139,0.817,145,0.718,146,0.764,148,0.675,151,0.675,156,1.402,159,0.765,163,0.765,175,0.963,176,0.635,195,1.648,196,0.718,203,1.101,234,2.722,243,1.917,245,1.641,246,1.561,276,3.589,277,1.781,301,1.335,318,1.335,321,1.335,352,1.335,403,1.509,404,1.95,424,1.784,447,1.509,463,1.335,464,2.794,480,1.509,517,1.335,530,2.722,607,3.128,651,3.078,652,1.774,653,1.774,654,1.335,655,1.774,656,1.774,657,3.759,658,1.774,659,1.774,660,2.443,661,1.774,662,4.157,663,4.567,664,6.666,665,6.026,666,1.509,667,1.509,668,1.774,669,1.774,670,4.887,671,6.026,672,4.157,673,3.885,674,5.535,675,5.357,676,4.558,677,6.875,678,6.875,679,1.781,680,1.774,681,1.774,682,5.357,683,4.558,684,2.871,685,4.157,686,3.617,687,6.114,688,3.537,689,5.815,690,3.617,691,4.558,692,4.567,693,1.774,694,1.774,695,1.774,696,5.357,697,3.617,698,4.567,699,4.887,700,5.686,701,5.145,702,3.617,703,3.617,704,2.443,705,5.535,706,1.774,707,1.774,708,1.774,709,1.774,710,4.567,711,2.871,712,2.871,713,1.774,714,1.774,715,5.357,716,2.871,717,1.774,718,4.887,719,2.871,720,5.145,721,1.774,722,2.871,723,4.567,724,1.774,725,1.774,726,2.823,727,1.774,728,1.774,729,3.617,730,1.774,731,1.774,732,2.871,733,1.774,734,3.617,735,1.774,736,1.774,737,3.617,738,2.871,739,1.509,740,1.774,741,1.774,742,1.774,743,2.871,744,1.774,745,2.443,746,1.774,747,1.774,748,1.774,749,2.871,750,1.774,751,1.774,752,1.774,753,1.774,754,1.774,755,6.38,756,1.774,757,1.509,758,1.774,759,2.161,760,1.774,761,1.509,762,3.617,763,1.774,764,4.567,765,1.774,766,1.774,767,4.158,768,1.774,769,2.871,770,1.774,771,1.774,772,1.774,773,1.774,774,1.774,775,1.774,776,1.774,777,3.617,778,1.335,779,1.509,780,4.567,781,1.774,782,1.774,783,1.774,784,1.774,785,1.774,786,1.774,787,1.774,788,1.774,789,1.774,790,1.774,791,1.774,792,1.774,793,1.774,794,1.774,795,1.774,796,2.871,797,1.509,798,1.774,799,1.774,800,1.774,801,1.774,802,4.157,803,1.774,804,1.774,805,2.871,806,1.509,807,1.335,808,1.774,809,2.871,810,1.774,811,1.774,812,1.774,813,1.774,814,1.335,815,1.509,816,1.774,817,3.617,818,1.774,819,1.774,820,1.774,821,1.774,822,1.774,823,1.774,824,1.774,825,2.871,826,3.617,827,1.774,828,3.617,829,1.774,830,1.774,831,1.774,832,1.774,833,1.774,834,2.871,835,1.774,836,1.774,837,2.871,838,2.161,839,1.774,840,1.774,841,2.871,842,6.38,843,1.509,844,1.774,845,1.774,846,1.774,847,1.774,848,3.617,849,1.774,850,4.157,851,1.774,852,1.774,853,1.774,854,1.774,855,1.774,856,1.774,857,4.567,858,3.617,859,1.774,860,1.774,861,1.774,862,1.774,863,1.509,864,1.774,865,1.774,866,1.509,867,1.774,868,1.509,869,1.774,870,1.774,871,1.774,872,1.774,873,1.774,874,1.774,875,1.774,876,1.774,877,1.774,878,1.774,879,1.774,880,1.774,881,1.774,882,1.774,883,4.567,884,1.774,885,1.774,886,1.774,887,1.774,888,1.774,889,1.774,890,1.774,891,1.774,892,1.774,893,1.774,894,2.871,895,1.774,896,1.774,897,1.774,898,1.774,899,1.509,900,1.774,901,1.774,902,3.617,903,2.871,904,2.871,905,2.443,906,2.871,907,4.157,908,1.774,909,2.871,910,1.774,911,1.774,912,1.774,913,1.774,914,1.774,915,1.774,916,1.774,917,1.774,918,1.774,919,1.774,920,1.774,921,1.774,922,1.774,923,5.145,924,1.774,925,1.509,926,1.774,927,1.774,928,1.509,929,1.774,930,1.774,931,1.774,932,1.774,933,1.774,934,1.774,935,1.774,936,1.774,937,1.335,938,1.774,939,1.774,940,1.774,941,1.774,942,1.509,943,1.774,944,1.774,945,1.774,946,1.774,947,2.871,948,2.871,949,1.774,950,1.774,951,1.774,952,2.443,953,2.871,954,2.871,955,1.774,956,1.774,957,1.774,958,1.774,959,1.774,960,1.774,961,1.774,962,2.871,963,1.774,964,1.774]],["title/coverage.html",[965,4.087]],["body/coverage.html",[5,0.177,6,0.377,7,2.562,8,3.185,9,2.312,12,0.023,15,1.296,17,2.113,27,0.015,28,0.015,29,1.248,31,3.32,42,1.296,48,0.587,49,1.169,50,1.296,52,2.973,53,2.973,59,0.804,79,1.22,83,1.22,87,1.134,104,1.176,110,1.296,134,1.379,152,1.379,155,1.379,158,1.379,170,0.804,174,0.961,181,1.296,183,1.296,185,1.296,187,1.296,199,2.562,200,2.312,201,2.113,217,3.643,231,2.562,232,2.562,233,2.312,236,2.113,237,2.113,243,2.485,244,2.312,246,2.315,247,2.312,258,2.562,260,2.312,262,1.47,264,3.586,269,1.47,272,2.897,273,2.897,287,3.529,292,3.529,299,2.113,300,2.897,400,2.562,409,2.562,410,2.562,413,2.312,417,2.562,418,3.185,419,2.562,420,2.562,421,2.312,424,1.68,425,2.312,427,2.897,428,2.897,605,2.562,606,2.312,609,2.562,610,2.562,614,2.562,633,2.562,637,2.562,638,2.312,807,2.562,965,2.897,966,3.405,967,3.405,968,7.219,969,6.784,970,5.364,971,4.69,972,4.69,973,6.54,974,5.364,975,6.062,976,3.405,977,5.364,978,3.405,979,3.405,980,2.897]],["title/dependencies.html",[679,2.631,726,2.003]],["body/dependencies.html",[12,0.023,14,0.339,27,0.019,28,0.019,179,1.909,412,3.775,464,2.868,476,4.268,679,3.113,797,4.268,838,3.775,981,5.017,982,5.017,983,5.017,984,7.087,985,5.017,986,6.022,987,5.017,988,5.017,989,5.017,990,6.022,991,5.123,992,5.017,993,5.123,994,5.017,995,4.268,996,5.017,997,5.017,998,5.017,999,5.017,1000,5.017,1001,5.017]],["title/index.html",[33,0.508,649,1.831,650,1.831]],["body/index.html",[0,2.159,1,0.862,2,0.853,3,0.404,6,0.066,11,0.215,12,0.023,13,1.582,14,0.086,15,0.483,18,0.788,20,0.778,21,1.084,22,1.279,23,0.662,24,0.483,25,0.329,26,0.543,27,0.007,28,0.007,38,0.327,42,0.483,43,1.009,44,1.475,47,1.02,48,0.219,49,0.374,50,0.827,54,1.764,56,1.22,57,0.585,58,1.955,59,0.3,60,0.88,61,1.02,62,1.582,63,0.514,64,1.072,65,1.137,66,0.585,67,0.905,75,0.548,76,1.312,77,2.446,78,1.907,79,1.02,82,1.366,83,0.455,84,1.312,85,0.633,86,1.284,87,1.112,88,1.312,89,1.312,90,1.084,92,1.312,94,1.682,95,1.636,96,1.674,97,2.331,100,1.312,101,1.366,102,1.153,103,1.535,104,1.338,105,0.938,106,1.001,107,2.421,108,1.312,110,1.084,111,1.747,112,1.001,113,1.904,114,1.001,115,1.001,116,1.001,117,1.455,118,1.312,119,1.001,120,1.001,121,0.938,122,1.001,123,1.747,124,1.747,125,1.001,126,0.88,127,0.938,128,1.001,129,2.147,130,0.938,131,1.001,132,0.938,133,2.211,134,0.514,135,1.92,137,1.358,138,0.88,140,0.585,141,0.585,142,0.585,143,0.548,144,1.001,145,1.535,146,1.508,147,0.585,148,0.483,149,0.585,150,0.585,151,1.682,152,0.514,153,0.585,155,1.153,156,1.994,157,0.938,158,0.514,159,1.229,160,0.585,161,0.585,162,0.585,163,1.229,164,1.001,165,0.585,168,0.585,169,0.938,170,0.796,171,1.535,172,1.229,173,0.548,174,0.358,176,1.02,179,1.443,181,1.284,183,1.084,185,1.084,191,0.548,195,1.279,196,2.106,198,0.862,202,2.574,203,3.311,204,4.06,215,1.242,216,0.788,217,1.475,220,2.039,230,2.574,234,0.955,241,1.475,243,0.673,245,2.363,246,2.01,252,1.08,257,0.862,262,0.548,269,0.548,275,0.955,276,2.672,277,2.741,278,1.848,279,3.11,280,1.635,281,1.635,282,1.635,284,2.423,285,2.423,286,0.862,294,2.423,297,1.08,298,1.08,301,2.538,331,3.11,332,0.955,333,3.226,341,3.11,342,2.143,343,1.475,348,0.955,350,1.08,351,1.08,352,0.955,353,1.08,362,1.635,399,0.862,404,0.862,408,0.862,424,3.103,429,1.08,433,1.08,444,2.869,450,1.08,463,1.635,464,3.517,469,1.848,473,2.423,515,1.08,517,2.143,523,0.955,585,2.29,594,1.08,595,2.869,601,2.143,604,3.303,607,1.635,608,2.29,612,1.08,626,2.143,632,0.862,636,0.862,649,1.348,650,1.348,654,2.538,657,1.475,666,1.08,673,1.08,676,1.08,679,3.018,691,1.848,704,1.08,726,0.862,739,1.848,745,1.848,757,2.869,759,4.967,761,1.08,767,1.08,778,1.635,779,2.423,814,1.635,815,1.08,838,1.635,843,1.848,863,2.423,866,1.08,905,1.08,925,1.08,937,1.635,942,1.08,980,1.848,991,1.08,993,1.848,995,1.08,1002,2.848,1003,3.791,1004,1.269,1005,4.865,1006,2.173,1007,1.269,1008,1.848,1009,1.848,1010,2.173,1011,2.173,1012,2.173,1013,3.791,1014,2.869,1015,2.173,1016,4.418,1017,1.269,1018,1.269,1019,2.173,1020,1.269,1021,1.269,1022,1.269,1023,4.133,1024,1.269,1025,4.133,1026,2.173,1027,2.173,1028,3.372,1029,1.269,1030,2.423,1031,3.372,1032,1.848,1033,1.269,1034,1.269,1035,2.173,1036,2.173,1037,2.848,1038,1.269,1039,2.848,1040,1.269,1041,1.269,1042,1.269,1043,1.269,1044,2.848,1045,1.269,1046,1.269,1047,1.269,1048,2.173,1049,1.269,1050,1.269,1051,1.269,1052,1.269,1053,1.269,1054,1.269,1055,1.269,1056,1.08,1057,2.848,1058,1.08,1059,5.199,1060,5.199,1061,2.848,1062,4.133,1063,1.269,1064,2.173,1065,1.269,1066,1.269,1067,2.848,1068,1.269,1069,1.269,1070,1.269,1071,2.173,1072,1.269,1073,1.269,1074,1.269,1075,1.269,1076,1.269,1077,1.08,1078,1.269,1079,1.269,1080,3.791,1081,1.269,1082,1.269,1083,1.269,1084,1.269,1085,1.269,1086,1.848,1087,1.269,1088,1.08,1089,1.269,1090,1.269,1091,1.269,1092,1.269,1093,1.269,1094,1.269,1095,2.869,1096,1.269,1097,1.269,1098,1.269,1099,1.269,1100,1.269,1101,1.269,1102,1.269,1103,1.269,1104,1.269,1105,1.269,1106,1.269,1107,1.269,1108,1.269,1109,1.269,1110,1.269,1111,1.269,1112,1.475,1113,2.848,1114,2.173,1115,1.269,1116,1.269,1117,1.269,1118,1.08,1119,1.269,1120,1.269,1121,1.269,1122,1.269,1123,1.269,1124,1.269,1125,2.848,1126,2.848,1127,2.173,1128,2.173,1129,2.173,1130,2.173,1131,1.269,1132,1.269,1133,2.173,1134,2.173,1135,1.269,1136,1.269,1137,1.269,1138,1.269,1139,1.269,1140,1.269,1141,1.08,1142,1.08,1143,1.269,1144,3.791,1145,3.791,1146,3.791,1147,2.173,1148,5.043,1149,3.791,1150,3.225,1151,3.791,1152,3.791,1153,3.791,1154,2.173,1155,1.269,1156,1.269,1157,1.269,1158,1.269,1159,1.269,1160,1.269,1161,1.269,1162,1.269,1163,1.269,1164,1.269,1165,1.269,1166,1.269,1167,1.269,1168,1.269,1169,1.269,1170,1.269,1171,1.269]],["title/license.html",[649,1.831,650,1.831,1172,2.51]],["body/license.html",[4,0.4,5,0.278,11,0.092,12,0.016,23,0.348,26,0.286,27,0.009,28,0.009,32,0.326,36,0.472,51,0.635,54,0.5,67,0.563,82,0.718,85,0.803,86,0.675,97,2.302,148,1.582,203,1.1,204,1.204,205,1.508,276,1.52,289,1.334,343,3.318,418,2.822,455,2.441,523,1.334,530,2.721,557,2.441,657,2.455,667,3.076,759,3.127,778,1.334,806,1.508,807,2.721,814,1.334,899,1.508,937,4.839,952,2.441,1008,1.508,1009,1.508,1014,1.508,1030,2.441,1032,1.508,1056,1.508,1058,1.508,1077,1.508,1088,1.508,1095,1.508,1112,1.204,1118,1.508,1142,3.884,1150,2.441,1172,5.848,1173,4.156,1174,1.772,1175,1.772,1176,1.772,1177,5.533,1178,6.025,1179,4.156,1180,4.565,1181,1.772,1182,6.19,1183,5.684,1184,1.772,1185,1.772,1186,5.684,1187,6.025,1188,4.886,1189,5.684,1190,2.87,1191,1.772,1192,4.565,1193,1.772,1194,1.772,1195,1.772,1196,4.156,1197,1.772,1198,5.533,1199,4.156,1200,2.87,1201,2.87,1202,1.772,1203,3.615,1204,2.87,1205,1.772,1206,1.772,1207,6.38,1208,4.156,1209,2.87,1210,1.772,1211,2.87,1212,1.772,1213,1.772,1214,1.772,1215,1.772,1216,1.772,1217,1.772,1218,1.772,1219,3.615,1220,1.772,1221,3.615,1222,2.87,1223,6.025,1224,1.772,1225,1.772,1226,4.886,1227,5.533,1228,4.156,1229,2.87,1230,3.615,1231,4.886,1232,1.772,1233,1.772,1234,1.772,1235,1.772,1236,1.772,1237,2.87,1238,1.772,1239,1.772,1240,1.772,1241,6.874,1242,3.615,1243,2.87,1244,1.772,1245,5.533,1246,2.87,1247,1.772,1248,4.565,1249,2.87,1250,1.772,1251,6.38,1252,1.772,1253,1.772,1254,1.772,1255,1.772,1256,1.772,1257,1.772,1258,2.87,1259,3.615,1260,1.772,1261,1.772,1262,1.772,1263,1.772,1264,4.156,1265,4.565,1266,1.772,1267,2.87,1268,4.156,1269,2.87,1270,1.772,1271,4.565,1272,2.87,1273,1.772,1274,1.772,1275,3.615,1276,1.772,1277,1.772,1278,1.772,1279,1.772,1280,2.87,1281,1.772,1282,1.772,1283,1.772,1284,3.615,1285,1.772,1286,1.772,1287,3.615,1288,1.772,1289,1.772,1290,1.772,1291,4.156,1292,5.684,1293,1.772,1294,1.772,1295,2.87,1296,5.356,1297,3.615,1298,2.87,1299,2.87,1300,2.87,1301,2.87,1302,3.615,1303,2.87,1304,3.615,1305,2.87,1306,2.87,1307,2.87,1308,2.87,1309,1.508,1310,2.87,1311,1.772,1312,1.772,1313,4.565,1314,5.144,1315,3.615,1316,2.87,1317,1.772,1318,2.87,1319,2.87,1320,1.772,1321,3.615,1322,2.87,1323,1.772,1324,1.772,1325,1.772,1326,3.615,1327,1.772,1328,1.772,1329,1.772,1330,2.87,1331,2.87,1332,1.772,1333,1.772,1334,1.772,1335,1.772,1336,1.772,1337,1.772,1338,1.772,1339,2.87,1340,1.772,1341,1.772,1342,1.772,1343,1.772,1344,1.772,1345,1.772,1346,1.772,1347,1.772,1348,3.615,1349,1.772,1350,3.615,1351,1.772,1352,1.772,1353,1.772,1354,1.772,1355,5.356,1356,1.772,1357,1.772,1358,1.772,1359,1.772,1360,1.772,1361,4.156,1362,2.87,1363,4.156,1364,1.772,1365,1.772,1366,1.772,1367,1.772,1368,1.772,1369,3.615,1370,1.772,1371,1.772,1372,2.87,1373,2.87,1374,1.772,1375,1.772,1376,1.772,1377,2.87,1378,1.772,1379,1.772,1380,4.565,1381,1.772,1382,1.772,1383,1.772,1384,1.772,1385,1.772,1386,1.772,1387,3.615,1388,4.156,1389,1.772,1390,1.772,1391,1.772,1392,1.772,1393,1.772,1394,1.772,1395,1.772,1396,1.772,1397,1.772,1398,1.772,1399,2.87,1400,1.772,1401,1.772,1402,2.87,1403,1.772,1404,1.772,1405,4.156,1406,1.772,1407,1.772,1408,1.772,1409,1.772,1410,1.772,1411,1.772,1412,4.156,1413,3.615,1414,3.615,1415,3.615,1416,2.87,1417,2.87,1418,3.615,1419,2.87,1420,2.87,1421,2.87,1422,1.772,1423,1.772,1424,1.772,1425,1.772,1426,1.772,1427,1.772,1428,1.772,1429,1.772,1430,1.772,1431,2.87,1432,1.772,1433,1.772,1434,1.772,1435,1.772,1436,4.565,1437,1.772,1438,1.772,1439,1.772,1440,1.772,1441,1.772,1442,1.772,1443,1.772,1444,1.772,1445,4.565,1446,1.772,1447,1.772,1448,1.772,1449,1.772,1450,1.772,1451,1.508,1452,1.772,1453,1.772,1454,1.772,1455,1.772,1456,1.772,1457,1.772,1458,1.772,1459,1.772,1460,1.772,1461,1.772,1462,1.772,1463,1.772,1464,3.615,1465,1.772,1466,1.772,1467,1.772,1468,1.772,1469,1.772,1470,2.87,1471,1.772,1472,1.772,1473,1.772,1474,1.772,1475,1.772,1476,1.772,1477,1.772,1478,1.772,1479,1.772,1480,1.772,1481,1.772,1482,1.772,1483,1.772,1484,1.772,1485,1.772,1486,2.87,1487,1.772,1488,1.772,1489,1.772,1490,2.87,1491,2.87,1492,1.772,1493,1.772,1494,1.772,1495,1.772,1496,1.772,1497,1.772,1498,1.772,1499,1.772,1500,1.772,1501,1.772,1502,1.772,1503,1.772,1504,1.772,1505,1.772,1506,1.772,1507,1.772,1508,1.772,1509,1.772,1510,1.772,1511,1.772]],["title/modules.html",[2,1.439]],["body/modules.html",[1,3.459,2,1.526,12,0.019,27,0.019,28,0.019,198,3.459,230,3.459,257,3.459,399,3.459,408,3.459,416,3.833,585,3.459,604,3.459,608,3.459,632,3.459,636,3.459,1112,4.918,1512,7.242,1513,7.242]],["title/overview.html",[1514,4.087]],["body/overview.html",[0,1.843,2,1.637,12,0.02,20,1.957,22,1.843,27,0.02,28,0.02,30,2.08,51,1.957,126,2.213,679,3.391,683,4.65,688,5.389,868,4.65,1086,4.65,1451,4.65,1514,4.65,1515,5.466,1516,6.334]],["title/properties.html",[55,1.27,726,2.003]],["body/properties.html",[12,0.022,27,0.02,28,0.02,55,1.653,67,1.753,424,2.722,464,3.154,657,3.747,660,4.694,1517,5.518,1518,5.518,1519,5.518,1520,5.518,1521,5.518]],["title/todo.html",[649,1.831,650,1.831,1522,2.51]],["body/todo.html",[12,0.022,27,0.02,28,0.02,54,1.752,107,2.514,133,2.138,146,1.405,203,3.275,204,4.215,216,3.275,245,3.769,276,3.494,424,2.604,464,3.018,654,3.973,928,4.491,1112,3.585,1141,5.61,1309,4.491,1522,5.281,1523,5.279,1524,5.279,1525,5.279]],["title/miscellaneous/variables.html",[1526,2.51,1527,3.607]],["body/miscellaneous/variables.html",[6,0.319,12,0.024,15,1.968,23,0.772,27,0.017,28,0.017,33,0.678,38,0.777,48,1.165,52,1.699,53,2.821,54,1.111,64,2.148,65,2.306,68,2.094,69,2.094,70,2.094,71,2.094,73,2.094,104,1.296,137,1.41,146,1.047,156,1.328,170,0.929,174,1.845,175,1.694,176,2.196,177,1.328,178,1.814,179,1.968,180,1.814,181,1.968,182,1.814,183,1.968,184,1.814,185,1.968,186,1.814,187,1.968,188,1.41,189,1.328,190,2.579,191,1.699,192,2.382,193,2.094,194,2.382,195,1.744,196,2.094,197,1.814,262,2.231,287,2.962,291,3.349,292,2.962,296,3.349,299,3.208,609,2.962,610,3.891,614,3.891,615,4.399,616,3.349,1526,3.349,1527,3.349,1528,6.368,1529,3.936,1530,3.936,1531,3.936]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":217,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{},"index.html":{}}}],["0.10.0",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["0.10.1",{"_index":894,"title":{},"body":{"changelog.html":{}}}],["0.10.2",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["0.11.0",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["0.11.4",{"_index":1001,"title":{},"body":{"dependencies.html":{}}}],["0.13.0",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["0.14.0",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["0.15.0",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["0.16.0",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["0.17.0",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["0.18.0",{"_index":828,"title":{},"body":{"changelog.html":{}}}],["0.18.2",{"_index":825,"title":{},"body":{"changelog.html":{}}}],["0.19.0",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["0.20.0",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["0.21.0",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["0.22.0",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["0.23.0",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["0.24.0",{"_index":777,"title":{},"body":{"changelog.html":{}}}],["0.25.0",{"_index":762,"title":{},"body":{"changelog.html":{}}}],["0.4.0",{"_index":898,"title":{},"body":{"changelog.html":{}}}],["0.7",{"_index":1034,"title":{},"body":{"index.html":{}}}],["0.75",{"_index":1049,"title":{},"body":{"index.html":{}}}],["0.8.2",{"_index":920,"title":{},"body":{"changelog.html":{}}}],["0.8.3",{"_index":907,"title":{},"body":{"changelog.html":{}}}],["0.9.0",{"_index":902,"title":{},"body":{"changelog.html":{}}}],["0/1",{"_index":974,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":685,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":718,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":682,"title":{},"body":{"changelog.html":{}}}],["0319eee",{"_index":906,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":662,"title":{},"body":{"changelog.html":{}}}],["042898e",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":674,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":705,"title":{},"body":{"changelog.html":{}}}],["0615f02",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["06cb6de",{"_index":867,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":675,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":689,"title":{},"body":{"changelog.html":{}}}],["0885b40",{"_index":932,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":671,"title":{},"body":{"changelog.html":{}}}],["09dd1bb",{"_index":879,"title":{},"body":{"changelog.html":{}}}],["0a2ccc5",{"_index":870,"title":{},"body":{"changelog.html":{}}}],["0f35b5c",{"_index":939,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":67,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["1.0.0",{"_index":761,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["1.0.1",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["1.1.0",{"_index":737,"title":{},"body":{"changelog.html":{}}}],["1.2.0",{"_index":732,"title":{},"body":{"changelog.html":{}}}],["1.3.0",{"_index":719,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["1.4.1",{"_index":696,"title":{},"body":{"changelog.html":{}}}],["1.6.0",{"_index":690,"title":{},"body":{"changelog.html":{}}}],["1.7.0",{"_index":684,"title":{},"body":{"changelog.html":{}}}],["1.8.0",{"_index":672,"title":{},"body":{"changelog.html":{}}}],["1.9.0",{"_index":660,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["1/1",{"_index":975,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":691,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["10.2",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["100",{"_index":968,"title":{},"body":{"coverage.html":{}}}],["10000ms",{"_index":149,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["106",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":688,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["11/11",{"_index":978,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":683,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["12.0.2",{"_index":1166,"title":{},"body":{"index.html":{}}}],["12/typescript",{"_index":941,"title":{},"body":{"changelog.html":{}}}],["1229a9d",{"_index":919,"title":{},"body":{"changelog.html":{}}}],["13.0.0",{"_index":995,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["14.2.12",{"_index":982,"title":{},"body":{"dependencies.html":{}}}],["14.2.7",{"_index":986,"title":{},"body":{"dependencies.html":{}}}],["14.3.0",{"_index":984,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":698,"title":{},"body":{"changelog.html":{}}}],["151",{"_index":716,"title":{},"body":{"changelog.html":{}}}],["154",{"_index":708,"title":{},"body":{"changelog.html":{}}}],["156",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["157",{"_index":713,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["16/16",{"_index":976,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":692,"title":{},"body":{"changelog.html":{}}}],["179",{"_index":694,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":663,"title":{},"body":{"changelog.html":{}}}],["18d04fd",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":738,"title":{},"body":{"changelog.html":{}}}],["1a1299b",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["1a56037",{"_index":824,"title":{},"body":{"changelog.html":{}}}],["1c7c0c0",{"_index":798,"title":{},"body":{"changelog.html":{}}}],["1f22380",{"_index":781,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":676,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["2.0",{"_index":667,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2.6.0",{"_index":999,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":969,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":686,"title":{},"body":{"changelog.html":{}}}],["2004",{"_index":1175,"title":{},"body":{"license.html":{}}}],["2020",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":755,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["2023",{"_index":687,"title":{},"body":{"changelog.html":{}}}],["2024",{"_index":670,"title":{},"body":{"changelog.html":{}}}],["2025",{"_index":661,"title":{},"body":{"changelog.html":{}}}],["2048",{"_index":1040,"title":{},"body":{"index.html":{}}}],["21",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["219",{"_index":668,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":742,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":706,"title":{},"body":{"changelog.html":{}}}],["23e35d1",{"_index":775,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":763,"title":{},"body":{"changelog.html":{}}}],["24f4d6f",{"_index":728,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":733,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["26a2e27",{"_index":717,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["2965c35",{"_index":808,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":673,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["3.6.0",{"_index":942,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["3/3",{"_index":972,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["30000",{"_index":1043,"title":{},"body":{"index.html":{}}}],["31",{"_index":721,"title":{},"body":{"changelog.html":{}}}],["332baf7",{"_index":844,"title":{},"body":{"changelog.html":{}}}],["34",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["3516488",{"_index":934,"title":{},"body":{"changelog.html":{}}}],["351ce3e",{"_index":890,"title":{},"body":{"changelog.html":{}}}],["371886a",{"_index":957,"title":{},"body":{"changelog.html":{}}}],["3ae307e",{"_index":768,"title":{},"body":{"changelog.html":{}}}],["3b4c792",{"_index":669,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":704,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["4/4",{"_index":977,"title":{},"body":{"coverage.html":{}}}],["40f33cc",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["412d2fd",{"_index":961,"title":{},"body":{"changelog.html":{}}}],["41c8947",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["4318",{"_index":773,"title":{},"body":{"changelog.html":{}}}],["47aba25",{"_index":956,"title":{},"body":{"changelog.html":{}}}],["47c249b",{"_index":959,"title":{},"body":{"changelog.html":{}}}],["4a000b9",{"_index":951,"title":{},"body":{"changelog.html":{}}}],["4bddf3a",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["4d886fb",{"_index":893,"title":{},"body":{"changelog.html":{}}}],["4d9a061",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["4fcec62",{"_index":766,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":697,"title":{},"body":{"changelog.html":{}}}],["5.0.12",{"_index":996,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":970,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1214,"title":{},"body":{"license.html":{}}}],["5000",{"_index":1042,"title":{},"body":{"index.html":{}}}],["51",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["510be78",{"_index":703,"title":{},"body":{"changelog.html":{}}}],["512",{"_index":1041,"title":{},"body":{"index.html":{}}}],["563071d",{"_index":943,"title":{},"body":{"changelog.html":{}}}],["59ac6ca",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["5a29d29",{"_index":735,"title":{},"body":{"changelog.html":{}}}],["5a7c375",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":905,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["6.6.3",{"_index":997,"title":{},"body":{"dependencies.html":{}}}],["613c16d",{"_index":958,"title":{},"body":{"changelog.html":{}}}],["62e0d77",{"_index":888,"title":{},"body":{"changelog.html":{}}}],["640d901",{"_index":724,"title":{},"body":{"changelog.html":{}}}],["64ab01a",{"_index":714,"title":{},"body":{"changelog.html":{}}}],["66ca86c",{"_index":822,"title":{},"body":{"changelog.html":{}}}],["6763f97",{"_index":740,"title":{},"body":{"changelog.html":{}}}],["68d7aee",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["6d94094",{"_index":695,"title":{},"body":{"changelog.html":{}}}],["6e5c19a",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["7023a31",{"_index":736,"title":{},"body":{"changelog.html":{}}}],["735b05d",{"_index":964,"title":{},"body":{"changelog.html":{}}}],["75",{"_index":1050,"title":{},"body":{"index.html":{}}}],["7a5b07e",{"_index":921,"title":{},"body":{"changelog.html":{}}}],["7b4c031",{"_index":904,"title":{},"body":{"changelog.html":{}}}],["7bab017",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["7bbaf2e",{"_index":758,"title":{},"body":{"changelog.html":{}}}],["7f3aba9",{"_index":731,"title":{},"body":{"changelog.html":{}}}],["7f7c66a",{"_index":885,"title":{},"body":{"changelog.html":{}}}],["8/8",{"_index":971,"title":{},"body":{"coverage.html":{}}}],["80d2ada",{"_index":900,"title":{},"body":{"changelog.html":{}}}],["80f7bf8",{"_index":963,"title":{},"body":{"changelog.html":{}}}],["83fc1f3",{"_index":922,"title":{},"body":{"changelog.html":{}}}],["8442349",{"_index":727,"title":{},"body":{"changelog.html":{}}}],["8b1b7b5",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["8d45a2c",{"_index":908,"title":{},"body":{"changelog.html":{}}}],["8e268a9",{"_index":914,"title":{},"body":{"changelog.html":{}}}],["8faa4c9",{"_index":859,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":899,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["9/node",{"_index":940,"title":{},"body":{"changelog.html":{}}}],["92330f9",{"_index":929,"title":{},"body":{"changelog.html":{}}}],["94e0b44",{"_index":897,"title":{},"body":{"changelog.html":{}}}],["95167b9",{"_index":955,"title":{},"body":{"changelog.html":{}}}],["96da55f",{"_index":946,"title":{},"body":{"changelog.html":{}}}],["97579f0",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["9783c0d",{"_index":681,"title":{},"body":{"changelog.html":{}}}],["99",{"_index":1051,"title":{},"body":{"index.html":{}}}],["_currentcontext",{"_index":563,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["_exact",{"_index":166,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["a1746bf",{"_index":950,"title":{},"body":{"changelog.html":{}}}],["a517094",{"_index":960,"title":{},"body":{"changelog.html":{}}}],["a6307f2",{"_index":785,"title":{},"body":{"changelog.html":{}}}],["a73e382",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":1392,"title":{},"body":{"license.html":{}}}],["ac3d9ab",{"_index":702,"title":{},"body":{"changelog.html":{}}}],["acceptance",{"_index":1467,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":1464,"title":{},"body":{"license.html":{}}}],["accessor",{"_index":1168,"title":{},"body":{"index.html":{}}}],["act",{"_index":1474,"title":{},"body":{"license.html":{}}}],["acting",{"_index":1194,"title":{},"body":{"license.html":{}}}],["action",{"_index":701,"title":{},"body":{"changelog.html":{}}}],["activate",{"_index":1067,"title":{},"body":{"index.html":{}}}],["acts",{"_index":1443,"title":{},"body":{"license.html":{}}}],["ad03334",{"_index":926,"title":{},"body":{"changelog.html":{}}}],["add",{"_index":276,"title":{},"body":{"interfaces/CustomSpan.html":{},"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["add(span",{"_index":278,"title":{},"body":{"interfaces/CustomSpan.html":{},"index.html":{}}}],["addendum",{"_index":1379,"title":{},"body":{"license.html":{}}}],["adding",{"_index":1120,"title":{},"body":{"index.html":{}}}],["addition",{"_index":165,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["additional",{"_index":1380,"title":{},"body":{"license.html":{}}}],["additions",{"_index":1266,"title":{},"body":{"license.html":{}}}],["advised",{"_index":1462,"title":{},"body":{"license.html":{}}}],["again",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["against",{"_index":1331,"title":{},"body":{"license.html":{}}}],["agent",{"_index":866,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["agree",{"_index":1477,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":1415,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":1396,"title":{},"body":{"license.html":{}}}],["alleging",{"_index":1336,"title":{},"body":{"license.html":{}}}],["allow",{"_index":562,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["allowedcommonjsdependencies",{"_index":1159,"title":{},"body":{"index.html":{}}}],["alone",{"_index":1327,"title":{},"body":{"license.html":{}}}],["along",{"_index":1370,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":1378,"title":{},"body":{"license.html":{}}}],["already",{"_index":599,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["althought",{"_index":1123,"title":{},"body":{"index.html":{}}}],["always",{"_index":323,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["alwaysoffsampler",{"_index":358,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["alwaysonsampler",{"_index":359,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["ambient",{"_index":1170,"title":{},"body":{"index.html":{}}}],["amd",{"_index":1149,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":1471,"title":{},"body":{"license.html":{}}}],["angular",{"_index":464,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"properties.html":{},"todo.html":{}}}],["angular.json",{"_index":1157,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":983,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":985,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":412,"title":{},"body":{"modules/NoopSpanExporterModule.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":286,"title":{},"body":{"interfaces/CustomSpan.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["angular/compiler",{"_index":987,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":14,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"dependencies.html":{},"index.html":{}}}],["angular/forms",{"_index":988,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":989,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":990,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":992,"title":{},"body":{"dependencies.html":{}}}],["annotations",{"_index":1255,"title":{},"body":{"license.html":{}}}],["apache",{"_index":1173,"title":{},"body":{"license.html":{}}}],["api",{"_index":404,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{}}}],["api.defaulttextmapsetter",{"_index":568,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api.diag.setlogger(logger",{"_index":509,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api.propagation.inject",{"_index":567,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api.trace.setspan",{"_index":565,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["apis",{"_index":440,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["app",{"_index":1019,"title":{},"body":{"index.html":{}}}],["app.component",{"_index":1081,"title":{},"body":{"index.html":{}}}],["app.module.ts",{"_index":1069,"title":{},"body":{"index.html":{}}}],["app_initializer",{"_index":612,"title":{},"body":{"modules/OtelWebTracerModule.html":{},"index.html":{}}}],["appcomponent",{"_index":1080,"title":{},"body":{"index.html":{}}}],["appear",{"_index":1375,"title":{},"body":{"license.html":{}}}],["appendix",{"_index":1249,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":1413,"title":{},"body":{"license.html":{}}}],["application",{"_index":1005,"title":{},"body":{"index.html":{}}}],["applications",{"_index":1124,"title":{},"body":{"index.html":{}}}],["applies",{"_index":1058,"title":{},"body":{"index.html":{},"license.html":{}}}],["apply",{"_index":1486,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":601,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{},"index.html":{}}}],["appropriate",{"_index":1494,"title":{},"body":{"license.html":{}}}],["appropriateness",{"_index":1429,"title":{},"body":{"license.html":{}}}],["archives",{"_index":1502,"title":{},"body":{"license.html":{}}}],["arising",{"_index":1450,"title":{},"body":{"license.html":{}}}],["array",{"_index":169,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["array.of(new",{"_index":394,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["array.of(this.insertspanprocessorproductionmode",{"_index":574,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["array.of(this.insertspanprocessorproductionmode(production",{"_index":392,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["asserted",{"_index":1483,"title":{},"body":{"license.html":{}}}],["associated",{"_index":1434,"title":{},"body":{"license.html":{}}}],["assume",{"_index":1432,"title":{},"body":{"license.html":{}}}],["async",{"_index":1054,"title":{},"body":{"index.html":{}}}],["attach",{"_index":1487,"title":{},"body":{"license.html":{}}}],["attached",{"_index":1247,"title":{},"body":{"license.html":{}}}],["attr_error_type",{"_index":485,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["attr_http_request_header",{"_index":491,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["attr_http_request_method",{"_index":486,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["attr_http_response_status_code",{"_index":484,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["attr_server_address",{"_index":489,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["attr_server_port",{"_index":490,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["attr_service_name",{"_index":354,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["attr_service_version",{"_index":1033,"title":{},"body":{"index.html":{}}}],["attr_url_full",{"_index":487,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["attr_url_path",{"_index":482,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["attr_url_query",{"_index":483,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["attr_url_scheme",{"_index":488,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["attr_user_agent_original",{"_index":481,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["attribute",{"_index":91,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["attributes",{"_index":277,"title":{},"body":{"interfaces/CustomSpan.html":{},"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{}}}],["attributevalue",{"_index":74,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["attribution",{"_index":1361,"title":{},"body":{"license.html":{}}}],["author",{"_index":1519,"title":{},"body":{"properties.html":{}}}],["authorized",{"_index":1190,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":1242,"title":{},"body":{"license.html":{}}}],["available",{"_index":1112,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{},"todo.html":{}}}],["aws",{"_index":18,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"changelog.html":{},"index.html":{}}}],["awsxraypropagator",{"_index":39,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{}}}],["awsxraypropagatormodule",{"_index":1,"title":{"modules/AwsXrayPropagatorModule.html":{}},"body":{"modules/AwsXrayPropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["awsxraypropagatorservice",{"_index":17,"title":{"injectables/AwsXrayPropagatorService.html":{}},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["b",{"_index":1351,"title":{},"body":{"license.html":{}}}],["b112065",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["b3",{"_index":202,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"index.html":{}}}],["b3e15af",{"_index":795,"title":{},"body":{"changelog.html":{}}}],["b3injectencoding",{"_index":218,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b3injectencoding.multi_header",{"_index":228,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b3injectencoding.single_header",{"_index":227,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b3propagator",{"_index":63,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["b3propagator(this.b3propagatorconfig",{"_index":229,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b3propagatorconfig",{"_index":50,"title":{"interfaces/B3PropagatorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["b3propagatormodule",{"_index":198,"title":{"modules/B3PropagatorModule.html":{}},"body":{"modules/B3PropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["b3propagatorservice",{"_index":201,"title":{"injectables/B3PropagatorService.html":{}},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["b3propagatorservice.defineb3encoding(config.b3propagatorconfig?.multiheader",{"_index":226,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b63afc1",{"_index":935,"title":{},"body":{"changelog.html":{}}}],["b679883",{"_index":936,"title":{},"body":{"changelog.html":{}}}],["b6dcaf7",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["backendapp.get('/api/config",{"_index":1045,"title":{},"body":{"index.html":{}}}],["bad",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["baggage",{"_index":1524,"title":{},"body":{"todo.html":{}}}],["bailouts",{"_index":1152,"title":{},"body":{"index.html":{}}}],["base",{"_index":271,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/InstrumentationService.html":{},"injectables/NoopSpanExporterService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["based",{"_index":1118,"title":{},"body":{"index.html":{},"license.html":{}}}],["basis",{"_index":1417,"title":{},"body":{"license.html":{}}}],["batch",{"_index":118,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["batchspanexporter",{"_index":109,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["batchspanexporter(async",{"_index":98,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["batchspanprocessor",{"_index":341,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["batchspanprocessor(exporter.getexporter",{"_index":396,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["batchspanprocessor(this.exporterservice.getexporter",{"_index":581,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["batchspanprocessorconfig",{"_index":110,"title":{"interfaces/BatchSpanProcessorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["bca88a0",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["bd69598",{"_index":918,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":130,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["behalf",{"_index":1271,"title":{},"body":{"license.html":{}}}],["below",{"_index":1250,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":1218,"title":{},"body":{"license.html":{}}}],["between",{"_index":123,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["bfc26ae",{"_index":895,"title":{},"body":{"changelog.html":{}}}],["bind",{"_index":1263,"title":{},"body":{"license.html":{}}}],["body",{"_index":102,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["boilerplate",{"_index":1488,"title":{},"body":{"license.html":{}}}],["boolean",{"_index":95,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["boolean)send",{"_index":1052,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":1086,"title":{},"body":{"index.html":{},"overview.html":{}}}],["brackets",{"_index":1491,"title":{},"body":{"license.html":{}}}],["branch",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["breaking",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1513,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":991,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["bufferconfig",{"_index":479,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["bug",{"_index":677,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":1358,"title":{},"body":{"license.html":{}}}],["c2b4209",{"_index":782,"title":{},"body":{"changelog.html":{}}}],["c36e295",{"_index":741,"title":{},"body":{"changelog.html":{}}}],["c53447a",{"_index":832,"title":{},"body":{"changelog.html":{}}}],["c6368c9",{"_index":916,"title":{},"body":{"changelog.html":{}}}],["c71ba73",{"_index":852,"title":{},"body":{"changelog.html":{}}}],["c9f8667",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["caab7a9",{"_index":801,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":517,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{}}}],["calls",{"_index":438,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["cancelled",{"_index":131,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["carrier",{"_index":566,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["carrier[key",{"_index":570,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["carry",{"_index":1353,"title":{},"body":{"license.html":{}}}],["catch",{"_index":1020,"title":{},"body":{"index.html":{}}}],["cause",{"_index":1150,"title":{},"body":{"index.html":{},"license.html":{}}}],["change",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["changed",{"_index":1357,"title":{},"body":{"license.html":{}}}],["changelog",{"_index":651,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":653,"title":{},"body":{"changelog.html":{}}}],["character",{"_index":1449,"title":{},"body":{"license.html":{}}}],["charge",{"_index":1304,"title":{},"body":{"license.html":{}}}],["choices",{"_index":1066,"title":{},"body":{"index.html":{}}}],["choose",{"_index":1465,"title":{},"body":{"license.html":{}}}],["ci",{"_index":699,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":1333,"title":{},"body":{"license.html":{}}}],["claims",{"_index":1322,"title":{},"body":{"license.html":{}}}],["class",{"_index":26,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{},"license.html":{}}}],["classprovider",{"_index":68,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["client",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["closes",{"_index":715,"title":{},"body":{"changelog.html":{}}}],["code",{"_index":530,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"license.html":{}}}],["collector",{"_index":133,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["collector/build/src/platform/browser",{"_index":1155,"title":{},"body":{"index.html":{}}}],["collector/docker",{"_index":1136,"title":{},"body":{"index.html":{}}}],["collectorexporter",{"_index":622,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectorexporterconfigbase",{"_index":624,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["combination",{"_index":1328,"title":{},"body":{"license.html":{}}}],["command",{"_index":1126,"title":{},"body":{"index.html":{}}}],["comment",{"_index":1495,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":1459,"title":{},"body":{"license.html":{}}}],["commit",{"_index":658,"title":{},"body":{"changelog.html":{}}}],["common",{"_index":82,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{},"license.html":{}}}],["commoncollectorconfig",{"_index":83,"title":{"interfaces/CommonCollectorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["commonconfig",{"_index":171,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["commonconfig?.resourceattributes",{"_index":390,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["commonconfig?.servicename",{"_index":389,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["commonjs",{"_index":1148,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":411,"title":{},"body":{"modules/NoopSpanExporterModule.html":{}}}],["commons",{"_index":1012,"title":{},"body":{"index.html":{}}}],["communication",{"_index":1275,"title":{},"body":{"license.html":{}}}],["compatible",{"_index":180,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["compiled",{"_index":1236,"title":{},"body":{"license.html":{}}}],["compliance",{"_index":1505,"title":{},"body":{"license.html":{}}}],["complies",{"_index":1385,"title":{},"body":{"license.html":{}}}],["component",{"_index":301,"title":{},"body":{"injectables/InstrumentationService.html":{},"changelog.html":{},"index.html":{}}}],["compose",{"_index":1134,"title":{},"body":{"index.html":{}}}],["compose.yaml",{"_index":1137,"title":{},"body":{"index.html":{}}}],["composite",{"_index":234,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"changelog.html":{},"index.html":{}}}],["compositepropagator",{"_index":240,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["compositepropagatormodule",{"_index":230,"title":{"modules/CompositePropagatorModule.html":{}},"body":{"modules/CompositePropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["compositepropagatorservice",{"_index":233,"title":{"injectables/CompositePropagatorService.html":{}},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["computer",{"_index":1456,"title":{},"body":{"license.html":{}}}],["concurencylimit",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["concurrencylimit",{"_index":143,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["conditions",{"_index":1178,"title":{},"body":{"license.html":{}}}],["config",{"_index":175,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["config.commonconfig.logbody",{"_index":508,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["config.commonconfig.loglevel",{"_index":510,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["config.jaegerpropagatorconfig?.customheader",{"_index":406,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["config.otelcolconfig?.headers",{"_index":630,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.otelcolconfig?.url",{"_index":629,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.ts",{"_index":53,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config.zipkinconfig?.headers",{"_index":647,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["config.zipkinconfig?.url",{"_index":646,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["configprovider",{"_index":190,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["configprovider.provide",{"_index":192,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["configurable",{"_index":843,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["configuration",{"_index":54,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["configuration/opentelemetry",{"_index":221,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["configure",{"_index":1025,"title":{},"body":{"index.html":{}}}],["configured",{"_index":642,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["consecutive",{"_index":125,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["consequential",{"_index":1448,"title":{},"body":{"license.html":{}}}],["conserve",{"_index":454,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["consistent",{"_index":1473,"title":{},"body":{"license.html":{}}}],["console",{"_index":94,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/ConsoleSpanExporterModule.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["consolespanexporter",{"_index":267,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["consolespanexportermodule",{"_index":257,"title":{"modules/ConsoleSpanExporterModule.html":{}},"body":{"modules/ConsoleSpanExporterModule.html":{},"index.html":{},"modules.html":{}}}],["consolespanexporterservice",{"_index":260,"title":{"injectables/ConsoleSpanExporterService.html":{}},"body":{"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"coverage.html":{}}}],["conspicuously",{"_index":1288,"title":{},"body":{"license.html":{}}}],["const",{"_index":177,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["constitutes",{"_index":1337,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":209,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["constructor(@inject(otel_config",{"_index":223,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/ZipkinExporterService.html":{}}}],["constructor(b3propagatorservice",{"_index":235,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["constructor(config",{"_index":210,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["constructorprovider",{"_index":69,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["construed",{"_index":1381,"title":{},"body":{"license.html":{}}}],["contained",{"_index":1367,"title":{},"body":{"license.html":{}}}],["content",{"_index":1009,"title":{},"body":{"index.html":{},"license.html":{}}}],["contents",{"_index":1008,"title":{},"body":{"index.html":{},"license.html":{}}}],["context",{"_index":243,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["contextmanager",{"_index":302,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["contract",{"_index":1209,"title":{},"body":{"license.html":{}}}],["contribution",{"_index":1265,"title":{},"body":{"license.html":{}}}],["contribution(s",{"_index":1326,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":1387,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":1292,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":1338,"title":{},"body":{"license.html":{}}}],["control",{"_index":1196,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":1197,"title":{},"body":{"license.html":{}}}],["conventions",{"_index":356,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["conversions",{"_index":1238,"title":{},"body":{"license.html":{}}}],["convert",{"_index":317,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["convertstringtonumber",{"_index":304,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["convertstringtonumber(value",{"_index":315,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["copies",{"_index":1345,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1350,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1187,"title":{},"body":{"license.html":{}}}],["core",{"_index":1073,"title":{},"body":{"index.html":{}}}],["counterclaim",{"_index":1334,"title":{},"body":{"license.html":{}}}],["cours",{"_index":931,"title":{},"body":{"changelog.html":{}}}],["coverage",{"_index":965,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1119,"title":{},"body":{"index.html":{}}}],["cross",{"_index":1332,"title":{},"body":{"license.html":{}}}],["current",{"_index":444,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["custom",{"_index":137,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["customary",{"_index":1407,"title":{},"body":{"license.html":{}}}],["customheader",{"_index":157,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["customize",{"_index":1101,"title":{},"body":{"index.html":{}}}],["customspan",{"_index":79,"title":{"interfaces/CustomSpan.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/CustomSpan.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["customspanimpl",{"_index":1114,"title":{},"body":{"index.html":{}}}],["cypress",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["d",{"_index":1364,"title":{},"body":{"license.html":{}}}],["d2ecbb8",{"_index":901,"title":{},"body":{"changelog.html":{}}}],["d8b9f3c",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":1445,"title":{},"body":{"license.html":{}}}],["dangle",{"_index":561,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["date",{"_index":1342,"title":{},"body":{"license.html":{}}}],["dbaec60",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["dcde5bb",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["dd7a0e5",{"_index":933,"title":{},"body":{"changelog.html":{}}}],["dda5d54",{"_index":949,"title":{},"body":{"changelog.html":{}}}],["de09c4d",{"_index":884,"title":{},"body":{"changelog.html":{}}}],["de1f141",{"_index":853,"title":{},"body":{"changelog.html":{}}}],["de50104",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["debug",{"_index":1107,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":20,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopSpanExporterModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{},"overview.html":{}}}],["declare",{"_index":1087,"title":{},"body":{"index.html":{}}}],["declared",{"_index":1169,"title":{},"body":{"index.html":{}}}],["default",{"_index":64,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defend",{"_index":1479,"title":{},"body":{"license.html":{}}}],["define",{"_index":215,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["defineb3encoding",{"_index":208,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["defineb3encoding(value",{"_index":213,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["defineconfigprovider",{"_index":187,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defineconfigprovider(config",{"_index":617,"title":{},"body":{"modules/OtelWebTracerModule.html":{}}}],["defineconfigprovider(config,configprovider",{"_index":603,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["defined",{"_index":36,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"injectables/ZipkinExporterService.html":{},"license.html":{}}}],["defineprobabilitysampler",{"_index":305,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["defineprobabilitysampler(sampleconfig",{"_index":319,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["definition",{"_index":1200,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":1181,"title":{},"body":{"license.html":{}}}],["del",{"_index":944,"title":{},"body":{"changelog.html":{}}}],["delete",{"_index":947,"title":{},"body":{"changelog.html":{}}}],["deliberate",{"_index":1440,"title":{},"body":{"license.html":{}}}],["dep",{"_index":353,"title":{},"body":{"injectables/InstrumentationService.html":{},"index.html":{}}}],["dependence",{"_index":745,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dependencies",{"_index":679,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["dependenciesadd",{"_index":1156,"title":{},"body":{"index.html":{}}}],["depends",{"_index":1146,"title":{},"body":{"index.html":{}}}],["deploy",{"_index":1004,"title":{},"body":{"index.html":{}}}],["deprecated",{"_index":725,"title":{},"body":{"changelog.html":{}}}],["deps",{"_index":619,"title":{},"body":{"modules/OtelWebTracerModule.html":{}}}],["derivative",{"_index":1251,"title":{},"body":{"license.html":{}}}],["derived",{"_index":1252,"title":{},"body":{"license.html":{}}}],["describing",{"_index":1408,"title":{},"body":{"license.html":{}}}],["description",{"_index":32,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"license.html":{}}}],["designated",{"_index":1290,"title":{},"body":{"license.html":{}}}],["determining",{"_index":1428,"title":{},"body":{"license.html":{}}}],["devkit/core",{"_index":981,"title":{},"body":{"dependencies.html":{}}}],["dgo",{"_index":1139,"title":{},"body":{"index.html":{}}}],["diaglogger",{"_index":75,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["diagloglevel",{"_index":76,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["different",{"_index":1384,"title":{},"body":{"license.html":{}}}],["dir",{"_index":945,"title":{},"body":{"changelog.html":{}}}],["direct",{"_index":1203,"title":{},"body":{"license.html":{}}}],["direction",{"_index":1205,"title":{},"body":{"license.html":{}}}],["disable",{"_index":365,"title":{},"body":{"injectables/InstrumentationService.html":{},"injectables/OtelcolExporterService.html":{}}}],["disclaimer",{"_index":1411,"title":{},"body":{"license.html":{}}}],["discussing",{"_index":1285,"title":{},"body":{"license.html":{}}}],["display",{"_index":1030,"title":{},"body":{"index.html":{},"license.html":{}}}],["distribute",{"_index":1313,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":1369,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":1180,"title":{},"body":{"license.html":{}}}],["doc",{"_index":850,"title":{},"body":{"changelog.html":{}}}],["docker",{"_index":1133,"title":{},"body":{"index.html":{}}}],["docs",{"_index":917,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":778,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["documentation",{"_index":807,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["documented",{"_index":655,"title":{},"body":{"changelog.html":{}}}],["dom",{"_index":439,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["don't",{"_index":814,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["done",{"_index":1525,"title":{},"body":{"todo.html":{}}}],["downgrade",{"_index":927,"title":{},"body":{"changelog.html":{}}}],["dropped",{"_index":116,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["during",{"_index":284,"title":{},"body":{"interfaces/CustomSpan.html":{},"index.html":{}}}],["dynamic",{"_index":797,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["e29c839",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["e2e",{"_index":903,"title":{},"body":{"changelog.html":{}}}],["e5eb09e",{"_index":924,"title":{},"body":{"changelog.html":{}}}],["e6073bf",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["e9dc64b",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":148,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["ead3251",{"_index":830,"title":{},"body":{"changelog.html":{}}}],["easier",{"_index":1500,"title":{},"body":{"license.html":{}}}],["ec28651",{"_index":938,"title":{},"body":{"changelog.html":{}}}],["editorial",{"_index":1253,"title":{},"body":{"license.html":{}}}],["ee08e85",{"_index":772,"title":{},"body":{"changelog.html":{}}}],["efa9083",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["elaborations",{"_index":1256,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":1272,"title":{},"body":{"license.html":{}}}],["en",{"_index":930,"title":{},"body":{"changelog.html":{}}}],["encapsulates",{"_index":437,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["enclosed",{"_index":1490,"title":{},"body":{"license.html":{}}}],["end",{"_index":1485,"title":{},"body":{"license.html":{}}}],["entities",{"_index":1195,"title":{},"body":{"license.html":{}}}],["entity",{"_index":1189,"title":{},"body":{"license.html":{}}}],["enum",{"_index":1039,"title":{},"body":{"index.html":{}}}],["environment",{"_index":1082,"title":{},"body":{"index.html":{}}}],["environments/environment",{"_index":1083,"title":{},"body":{"index.html":{}}}],["equal",{"_index":120,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["error",{"_index":195,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["error(`configuration",{"_index":194,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["eslint",{"_index":364,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{}}}],["even",{"_index":1461,"title":{},"body":{"license.html":{}}}],["event",{"_index":523,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{},"license.html":{}}}],["event.body",{"_index":526,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.error",{"_index":538,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.message",{"_index":536,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.name",{"_index":533,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.status",{"_index":525,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["exact",{"_index":297,"title":{},"body":{"interfaces/IgnoreUrlsConfig.html":{},"index.html":{}}}],["example",{"_index":759,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["exampleand",{"_index":1128,"title":{},"body":{"index.html":{}}}],["except",{"_index":1315,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":1287,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":1303,"title":{},"body":{"license.html":{}}}],["executed",{"_index":1397,"title":{},"body":{"license.html":{}}}],["exercise",{"_index":1435,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":1220,"title":{},"body":{"license.html":{}}}],["existing",{"_index":1104,"title":{},"body":{"index.html":{}}}],["existingprovider",{"_index":70,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["explicitly",{"_index":1389,"title":{},"body":{"license.html":{}}}],["export",{"_index":25,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["exported",{"_index":1162,"title":{},"body":{"index.html":{}}}],["exporter",{"_index":146,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopSpanExporterService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["exporter.interface",{"_index":263,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{}}}],["exporter.module.ts",{"_index":259,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"modules/NoopSpanExporterModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{}}}],["exporter.service",{"_index":261,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"modules/NoopSpanExporterModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{}}}],["exporter.service.ts",{"_index":264,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["exporter.service.ts:17",{"_index":639,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["exporter.service.ts:18",{"_index":266,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"injectables/NoopSpanExporterService.html":{}}}],["exporter.service.ts:21",{"_index":620,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["exporter.service.ts:36",{"_index":640,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["exporter.service.ts:45",{"_index":621,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["exporter/exporter.interface",{"_index":370,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["exporter/noop",{"_index":410,"title":{},"body":{"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"coverage.html":{}}}],["exporterconfig",{"_index":644,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["exporters",{"_index":1070,"title":{},"body":{"index.html":{}}}],["exporterservice",{"_index":312,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["exports",{"_index":126,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{},"overview.html":{}}}],["exporttimeoutmillis",{"_index":132,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["exposes",{"_index":1099,"title":{},"body":{"index.html":{}}}],["express",{"_index":1419,"title":{},"body":{"license.html":{}}}],["external",{"_index":757,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["extra",{"_index":89,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["f",{"_index":1135,"title":{},"body":{"index.html":{}}}],["f0a18ea",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["f195a50",{"_index":912,"title":{},"body":{"changelog.html":{}}}],["f206c5e",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["fabre",{"_index":1521,"title":{},"body":{"properties.html":{}}}],["factoryprovider",{"_index":71,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["fad044a",{"_index":913,"title":{},"body":{"changelog.html":{}}}],["failure",{"_index":1457,"title":{},"body":{"license.html":{}}}],["fake",{"_index":1071,"title":{},"body":{"index.html":{}}}],["false",{"_index":473,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["features",{"_index":664,"title":{},"body":{"changelog.html":{}}}],["fee",{"_index":1466,"title":{},"body":{"license.html":{}}}],["fetch",{"_index":1026,"title":{},"body":{"index.html":{}}}],["ff373c0",{"_index":887,"title":{},"body":{"changelog.html":{}}}],["field",{"_index":643,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["fields",{"_index":1489,"title":{},"body":{"license.html":{}}}],["fifty",{"_index":1212,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"license.html":{}}}],["filed",{"_index":1343,"title":{},"body":{"license.html":{}}}],["files",{"_index":1230,"title":{},"body":{"license.html":{}}}],["finalize",{"_index":494,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["fitness",{"_index":1424,"title":{},"body":{"license.html":{}}}],["fix",{"_index":515,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["fixes",{"_index":678,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":1348,"title":{},"body":{"license.html":{}}}],["forget",{"_index":815,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["form",{"_index":1223,"title":{},"body":{"license.html":{}}}],["format",{"_index":1497,"title":{},"body":{"license.html":{}}}],["forroot",{"_index":588,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["forroot(config",{"_index":589,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["free",{"_index":1306,"title":{},"body":{"license.html":{}}}],["functions",{"_index":1105,"title":{},"body":{"index.html":{}}}],["generally",{"_index":1068,"title":{},"body":{"index.html":{}}}],["generate",{"_index":346,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["generated",{"_index":1237,"title":{},"body":{"license.html":{}}}],["getexporter",{"_index":265,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["getpropagator",{"_index":35,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"injectables/W3CTraceContextPropagatorService.html":{}}}],["getting",{"_index":649,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["gettracer(infolibrary.name",{"_index":546,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["geturl",{"_index":430,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["github",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["give",{"_index":289,"title":{},"body":{"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"license.html":{}}}],["global",{"_index":1011,"title":{},"body":{"index.html":{}}}],["going",{"_index":1097,"title":{},"body":{"index.html":{}}}],["goodwill",{"_index":1454,"title":{},"body":{"license.html":{}}}],["governing",{"_index":1510,"title":{},"body":{"license.html":{}}}],["grant",{"_index":1297,"title":{},"body":{"license.html":{}}}],["granted",{"_index":1222,"title":{},"body":{"license.html":{}}}],["granting",{"_index":1191,"title":{},"body":{"license.html":{}}}],["grants",{"_index":1299,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1512,"title":{},"body":{"modules.html":{}}}],["grossly",{"_index":1441,"title":{},"body":{"license.html":{}}}],["guidelines",{"_index":659,"title":{},"body":{"changelog.html":{}}}],["harmless",{"_index":1481,"title":{},"body":{"license.html":{}}}],["header",{"_index":62,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["headers",{"_index":138,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["here",{"_index":1141,"title":{},"body":{"index.html":{},"todo.html":{}}}],["hereby",{"_index":1298,"title":{},"body":{"license.html":{}}}],["herein",{"_index":1393,"title":{},"body":{"license.html":{}}}],["highlight",{"_index":994,"title":{},"body":{"dependencies.html":{}}}],["hold",{"_index":1480,"title":{},"body":{"license.html":{}}}],["homepage",{"_index":1517,"title":{},"body":{"properties.html":{}}}],["hostname",{"_index":446,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http",{"_index":246,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["http.interceptor",{"_index":597,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["http.interceptor.ts",{"_index":428,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{}}}],["http.interceptor.ts:121",{"_index":461,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:176",{"_index":443,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:183",{"_index":466,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:196",{"_index":449,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:229",{"_index":453,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:249",{"_index":457,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:261",{"_index":456,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:271",{"_index":458,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:289",{"_index":442,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:306",{"_index":441,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:318",{"_index":468,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:68",{"_index":474,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:72",{"_index":471,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:76",{"_index":436,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http://localhost:16686",{"_index":1140,"title":{},"body":{"index.html":{}}}],["http://localhost:4200",{"_index":1130,"title":{},"body":{"index.html":{}}}],["http://localhost:4318/v1/trace",{"_index":136,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["http://localhost:4318/v1/traces",{"_index":1044,"title":{},"body":{"index.html":{}}}],["http://localhost:9411/api/v2/spans",{"_index":153,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["http://www.apache.org/licenses",{"_index":1176,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":1507,"title":{},"body":{"license.html":{}}}],["http_interceptors",{"_index":594,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["httpclient",{"_index":1021,"title":{},"body":{"index.html":{}}}],["httpclientmodule",{"_index":595,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["httperrorresponse",{"_index":282,"title":{},"body":{"interfaces/CustomSpan.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["httpevent",{"_index":475,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httphandler",{"_index":460,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httpinterceptor",{"_index":275,"title":{},"body":{"interfaces/CustomSpan.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["httprequest",{"_index":280,"title":{},"body":{"interfaces/CustomSpan.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["httpresponse",{"_index":281,"title":{},"body":{"interfaces/CustomSpan.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["https://angular.io/guide/build#configuring",{"_index":1153,"title":{},"body":{"index.html":{}}}],["https://github.com/jufab/opentelemetry",{"_index":1518,"title":{},"body":{"properties.html":{}}}],["https://github.com/open",{"_index":1059,"title":{},"body":{"index.html":{}}}],["https://jufab.github.io/opentelemetry",{"_index":1007,"title":{},"body":{"index.html":{}}}],["httptextpropagator",{"_index":295,"title":{},"body":{"interfaces/IPropagator.html":{}}}],["id",{"_index":911,"title":{},"body":{"changelog.html":{}}}],["identification",{"_index":1501,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":966,"title":{},"body":{"coverage.html":{}}}],["identifying",{"_index":1493,"title":{},"body":{"license.html":{}}}],["iexporter",{"_index":269,"title":{"interfaces/IExporter.html":{}},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/InstrumentationService.html":{},"injectables/NoopSpanExporterService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"index.html":{}}}],["ignore",{"_index":739,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ignoreurls",{"_index":163,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["ignoreurlsconfig",{"_index":158,"title":{"interfaces/IgnoreUrlsConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["ii",{"_index":1210,"title":{},"body":{"license.html":{}}}],["iii",{"_index":1217,"title":{},"body":{"license.html":{}}}],["implement",{"_index":1113,"title":{},"body":{"index.html":{}}}],["implementation",{"_index":294,"title":{},"body":{"interfaces/IPropagator.html":{},"index.html":{}}}],["implements",{"_index":47,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["implied",{"_index":1420,"title":{},"body":{"license.html":{}}}],["import",{"_index":11,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["imports",{"_index":21,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopSpanExporterModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{}}}],["improving",{"_index":1286,"title":{},"body":{"license.html":{}}}],["inability",{"_index":1452,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":1447,"title":{},"body":{"license.html":{}}}],["include",{"_index":1259,"title":{},"body":{"license.html":{}}}],["included",{"_index":1246,"title":{},"body":{"license.html":{}}}],["includes",{"_index":1365,"title":{},"body":{"license.html":{}}}],["including",{"_index":1227,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":1269,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":1295,"title":{},"body":{"license.html":{}}}],["incurred",{"_index":1482,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":1478,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":1469,"title":{},"body":{"license.html":{}}}],["index",{"_index":33,"title":{"index.html":{}},"body":{"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"miscellaneous/variables.html":{}}}],["indicated",{"_index":1244,"title":{},"body":{"license.html":{}}}],["indirect",{"_index":1204,"title":{},"body":{"license.html":{}}}],["individual",{"_index":1219,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["infolibrary",{"_index":496,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["infolibrary.version",{"_index":547,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["infor",{"_index":1103,"title":{},"body":{"index.html":{}}}],["information",{"_index":205,"title":{},"body":{"injectables/B3PropagatorService.html":{},"license.html":{}}}],["informational",{"_index":1376,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":1325,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":1339,"title":{},"body":{"license.html":{}}}],["init",{"_index":327,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["initialise",{"_index":450,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["initinstrumentation",{"_index":307,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["initspan",{"_index":431,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["initspan(request",{"_index":448,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject",{"_index":220,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["inject(awsxraypropagatorservice",{"_index":251,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(b3propagatorservice",{"_index":248,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(jaegerhttptracepropagatorservice",{"_index":250,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(otel_config",{"_index":500,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{}}}],["inject(otel_custom_span",{"_index":502,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject(otel_exporter",{"_index":374,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject(otel_instrumentation_plugins",{"_index":376,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["inject(otel_logger",{"_index":501,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject(otel_propagator",{"_index":375,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject(w3ctracecontextpropagatorservice",{"_index":249,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["injectable",{"_index":29,"title":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"injectables/ZipkinExporterService.html":{}},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["injectables",{"_index":30,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"injectables/ZipkinExporterService.html":{},"overview.html":{}}}],["injectcontextandheader",{"_index":432,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injectcontextandheader(request",{"_index":452,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injected",{"_index":274,"title":{},"body":{"interfaces/CustomSpan.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injectencoding",{"_index":225,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["injection",{"_index":176,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":72,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["injectiontoken('opentelemetry.config",{"_index":178,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('otelcol.custom",{"_index":184,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('otelcol.exporter",{"_index":291,"title":{},"body":{"interfaces/IExporter.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('otelcol.instrumentation.plugins",{"_index":186,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('otelcol.logger",{"_index":182,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('otelcol.propagator",{"_index":296,"title":{},"body":{"interfaces/IPropagator.html":{},"miscellaneous/variables.html":{}}}],["inmplementation",{"_index":290,"title":{},"body":{"interfaces/IExporter.html":{}}}],["insert",{"_index":331,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["insertconsolespanexporter",{"_index":308,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertconsolespanexporter(console",{"_index":329,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["insertornotspanexporter",{"_index":309,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertornotspanexporter(production",{"_index":335,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["insertspanprocessorproductionmode",{"_index":310,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertspanprocessorproductionmode(production",{"_index":339,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["install",{"_index":1024,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1010,"title":{},"body":{"index.html":{}}}],["institute",{"_index":1329,"title":{},"body":{"license.html":{}}}],["instrumentation",{"_index":77,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["instrumentationoption",{"_index":1102,"title":{},"body":{"index.html":{}}}],["instrumentations",{"_index":387,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["instrumentationservice",{"_index":299,"title":{"injectables/InstrumentationService.html":{}},"body":{"injectables/InstrumentationService.html":{},"modules/OtelWebTracerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["instrumentationservice.initinstrumentation",{"_index":616,"title":{},"body":{"modules/OtelWebTracerModule.html":{},"miscellaneous/variables.html":{}}}],["instruserviceloader",{"_index":614,"title":{},"body":{"modules/OtelWebTracerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["integration",{"_index":765,"title":{},"body":{"changelog.html":{}}}],["intentionally",{"_index":1267,"title":{},"body":{"license.html":{}}}],["intercept",{"_index":433,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["intercept(request",{"_index":459,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["intercepted",{"_index":451,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["interception",{"_index":285,"title":{},"body":{"interfaces/CustomSpan.html":{},"index.html":{}}}],["interceptor",{"_index":424,"title":{"interceptors/OpenTelemetryHttpInterceptor.html":{}},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"properties.html":{},"todo.html":{}}}],["interceptor.js",{"_index":1145,"title":{},"body":{"index.html":{}}}],["interceptor.module.ts",{"_index":587,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor.module.ts:36",{"_index":590,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/custom",{"_index":80,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["interceptor/opentelemetry",{"_index":596,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/src/lib/configuration/opentelemetry",{"_index":52,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptor/src/lib/interceptor/custom",{"_index":272,"title":{},"body":{"interfaces/CustomSpan.html":{},"coverage.html":{}}}],["interceptor/src/lib/interceptor/opentelemetry",{"_index":427,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{}}}],["interceptor/src/lib/opentelemetry",{"_index":586,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/src/lib/otel",{"_index":609,"title":{},"body":{"modules/OtelWebTracerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptor/src/lib/services/exporter/console/console",{"_index":258,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/exporter.interface.ts",{"_index":287,"title":{},"body":{"interfaces/IExporter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptor/src/lib/services/exporter/exporter.interface.ts:13",{"_index":288,"title":{},"body":{"interfaces/IExporter.html":{}}}],["interceptor/src/lib/services/exporter/noop",{"_index":409,"title":{},"body":{"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/otelcol/otelcol",{"_index":605,"title":{},"body":{"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/zipkin/zipkin",{"_index":637,"title":{},"body":{"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts",{"_index":300,"title":{},"body":{"injectables/InstrumentationService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:103",{"_index":336,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:118",{"_index":330,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:132",{"_index":340,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:147",{"_index":316,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:158",{"_index":320,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:38",{"_index":349,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:43",{"_index":314,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:70",{"_index":326,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:87",{"_index":345,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/propagator/aws",{"_index":7,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/b3",{"_index":199,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/composite",{"_index":231,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/jaeger",{"_index":400,"title":{},"body":{"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/noop",{"_index":417,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/propagator.interface.ts",{"_index":292,"title":{},"body":{"interfaces/IPropagator.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptor/src/lib/services/propagator/propagator.interface.ts:13",{"_index":293,"title":{},"body":{"interfaces/IPropagator.html":{}}}],["interceptor/src/lib/services/propagator/w3c",{"_index":633,"title":{},"body":{"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/public",{"_index":1089,"title":{},"body":{"index.html":{}}}],["interceptorconfiguration",{"_index":1029,"title":{},"body":{"index.html":{}}}],["interceptorprovider",{"_index":602,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptors",{"_index":426,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["interface",{"_index":49,"title":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":51,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"license.html":{},"overview.html":{}}}],["interval",{"_index":122,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["ipropagator",{"_index":42,"title":{"interfaces/IPropagator.html":{}},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"coverage.html":{},"index.html":{}}}],["irrevocable",{"_index":1307,"title":{},"body":{"license.html":{}}}],["issue",{"_index":1281,"title":{},"body":{"license.html":{}}}],["issue#38",{"_index":802,"title":{},"body":{"changelog.html":{}}}],["issue#4",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["issue#41",{"_index":796,"title":{},"body":{"changelog.html":{}}}],["issue#42",{"_index":809,"title":{},"body":{"changelog.html":{}}}],["issue#80",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["isurlignored",{"_index":480,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{}}}],["isurlignored(request.url",{"_index":511,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["it's",{"_index":216,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{},"todo.html":{}}}],["jaeger",{"_index":245,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["jaegerhttppropagator",{"_index":1076,"title":{},"body":{"index.html":{}}}],["jaegerhttptracepropagatormodule",{"_index":399,"title":{"modules/JaegerHttpTracePropagatorModule.html":{}},"body":{"modules/JaegerHttpTracePropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["jaegerhttptracepropagatorservice",{"_index":237,"title":{"injectables/JaegerHttpTracePropagatorService.html":{}},"body":{"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["jaegerpropagator",{"_index":403,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"changelog.html":{}}}],["jaegerpropagator(this.customheader",{"_index":407,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["jaegerpropagatorconfig",{"_index":155,"title":{"interfaces/JaegerPropagatorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["january",{"_index":1174,"title":{},"body":{"license.html":{}}}],["jest",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["js",{"_index":838,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["js/tree/main/experimental/packages/exporter",{"_index":1061,"title":{},"body":{"index.html":{}}}],["js/tree/main/experimental/packages/opentelemetry",{"_index":1072,"title":{},"body":{"index.html":{}}}],["js/tree/main/packages/opentelemetry",{"_index":1062,"title":{},"body":{"index.html":{}}}],["json.stringify(event.body",{"_index":528,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["jsonp",{"_index":953,"title":{},"body":{"changelog.html":{}}}],["jufab/opentelemetry",{"_index":1002,"title":{},"body":{"index.html":{}}}],["julien",{"_index":1520,"title":{},"body":{"properties.html":{}}}],["key",{"_index":154,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["kind",{"_index":557,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"license.html":{}}}],["language",{"_index":1509,"title":{},"body":{"license.html":{}}}],["last",{"_index":1065,"title":{},"body":{"index.html":{}}}],["law",{"_index":1414,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":1335,"title":{},"body":{"license.html":{}}}],["legal",{"_index":1192,"title":{},"body":{"license.html":{}}}],["legend",{"_index":1515,"title":{},"body":{"overview.html":{}}}],["len",{"_index":369,"title":{},"body":{"injectables/InstrumentationService.html":{},"injectables/OtelcolExporterService.html":{}}}],["level",{"_index":106,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["liability",{"_index":1436,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1444,"title":{},"body":{"license.html":{}}}],["lib",{"_index":680,"title":{},"body":{"changelog.html":{}}}],["library",{"_index":1003,"title":{},"body":{"index.html":{}}}],["licensable",{"_index":1323,"title":{},"body":{"license.html":{}}}],["license",{"_index":1172,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":1504,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":1340,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":1186,"title":{},"body":{"license.html":{}}}],["limit",{"_index":140,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["limitation",{"_index":1421,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":1511,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1228,"title":{},"body":{"license.html":{}}}],["line",{"_index":367,"title":{},"body":{"injectables/InstrumentationService.html":{},"injectables/OtelcolExporterService.html":{}}}],["link",{"_index":806,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["list",{"_index":1057,"title":{},"body":{"index.html":{}}}],["lists",{"_index":1279,"title":{},"body":{"license.html":{}}}],["literal",{"_index":635,"title":{},"body":{"interfaces/ZipkinCollectorConfig.html":{}}}],["litigation",{"_index":1330,"title":{},"body":{"license.html":{}}}],["load",{"_index":779,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["loaded",{"_index":600,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["loader",{"_index":615,"title":{},"body":{"modules/OtelWebTracerModule.html":{},"miscellaneous/variables.html":{}}}],["loadresourceattributes",{"_index":311,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["loadresourceattributes(commonconfig",{"_index":344,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["lock",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["lock.json",{"_index":752,"title":{},"body":{"changelog.html":{}}}],["log",{"_index":101,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["logbody",{"_index":105,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["logger",{"_index":179,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["loggermodule",{"_index":1108,"title":{},"body":{"index.html":{}}}],["loggermodule.forroot(environment.loggerconfig",{"_index":1109,"title":{},"body":{"index.html":{}}}],["logging",{"_index":863,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["loglevel",{"_index":108,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["loglevel:diagloglevel.all",{"_index":1038,"title":{},"body":{"index.html":{}}}],["long",{"_index":128,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["loss",{"_index":1453,"title":{},"body":{"license.html":{}}}],["losses",{"_index":1460,"title":{},"body":{"license.html":{}}}],["made",{"_index":1243,"title":{},"body":{"license.html":{}}}],["mailing",{"_index":1278,"title":{},"body":{"license.html":{}}}],["main",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["make",{"_index":1317,"title":{},"body":{"license.html":{}}}],["making",{"_index":1225,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":1458,"title":{},"body":{"license.html":{}}}],["managed",{"_index":1283,"title":{},"body":{"license.html":{}}}],["management",{"_index":1206,"title":{},"body":{"license.html":{}}}],["manager",{"_index":472,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["map",{"_index":420,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["marked",{"_index":1289,"title":{},"body":{"license.html":{}}}],["marks",{"_index":1403,"title":{},"body":{"license.html":{}}}],["match",{"_index":161,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["matches",{"_index":298,"title":{},"body":{"interfaces/IgnoreUrlsConfig.html":{},"index.html":{}}}],["matches_",{"_index":167,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["matching",{"_index":28,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":368,"title":{},"body":{"injectables/InstrumentationService.html":{},"injectables/OtelcolExporterService.html":{}}}],["maxexportbatchsize",{"_index":121,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["maximum",{"_index":111,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["maxqueuesize",{"_index":117,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["mean",{"_index":1183,"title":{},"body":{"license.html":{}}}],["means",{"_index":1201,"title":{},"body":{"license.html":{}}}],["mechanical",{"_index":1233,"title":{},"body":{"license.html":{}}}],["media",{"_index":1239,"title":{},"body":{"license.html":{}}}],["medium",{"_index":1346,"title":{},"body":{"license.html":{}}}],["meet",{"_index":1347,"title":{},"body":{"license.html":{}}}],["member",{"_index":1163,"title":{},"body":{"index.html":{}}}],["merchantability",{"_index":1423,"title":{},"body":{"license.html":{}}}],["merely",{"_index":1262,"title":{},"body":{"license.html":{}}}],["merge",{"_index":886,"title":{},"body":{"changelog.html":{}}}],["message",{"_index":535,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["method",{"_index":463,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{}}}],["methods",{"_index":34,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"injectables/ZipkinExporterService.html":{}}}],["miscellaneous",{"_index":1526,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":338,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["modifications",{"_index":1226,"title":{},"body":{"license.html":{}}}],["modified",{"_index":1352,"title":{},"body":{"license.html":{}}}],["modify",{"_index":1377,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":1382,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopSpanExporterModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/OtelWebTracerModule.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"modules/ZipkinExporterModule.html":{}},"body":{"index.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopSpanExporterModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/OtelWebTracerModule.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":592,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["more",{"_index":204,"title":{},"body":{"injectables/B3PropagatorService.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["multi",{"_index":61,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["multi:true",{"_index":1092,"title":{},"body":{"index.html":{}}}],["multiheader",{"_index":57,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["name",{"_index":85,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["names",{"_index":1402,"title":{},"body":{"license.html":{}}}],["namespace",{"_index":1048,"title":{},"body":{"index.html":{}}}],["necessarily",{"_index":1324,"title":{},"body":{"license.html":{}}}],["need",{"_index":1023,"title":{},"body":{"index.html":{}}}],["needs",{"_index":1093,"title":{},"body":{"index.html":{}}}],["negligence",{"_index":1439,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":1442,"title":{},"body":{"license.html":{}}}],["new",{"_index":48,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":366,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{}}}],["next.handle(request",{"_index":513,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["next.handle(tracedreq).pipe",{"_index":522,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["ngcc",{"_index":891,"title":{},"body":{"changelog.html":{}}}],["ngmodule",{"_index":13,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopSpanExporterModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/OtelWebTracerModule.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{}}}],["ngx",{"_index":993,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ngxlogger",{"_index":1013,"title":{},"body":{"index.html":{}}}],["nodejs",{"_index":1161,"title":{},"body":{"index.html":{}}}],["non",{"_index":1302,"title":{},"body":{"license.html":{}}}],["noop",{"_index":414,"title":{},"body":{"modules/NoopSpanExporterModule.html":{},"modules/NoopTextMapPropagatorModule.html":{}}}],["noophttptextpropagatormodule",{"_index":1074,"title":{},"body":{"index.html":{}}}],["noophttptextpropagatorservice",{"_index":422,"title":{},"body":{"injectables/NoopTextMapPropagatorService.html":{}}}],["noopspanexportermodule",{"_index":408,"title":{"modules/NoopSpanExporterModule.html":{}},"body":{"modules/NoopSpanExporterModule.html":{},"index.html":{},"modules.html":{}}}],["noopspanexporterservice",{"_index":413,"title":{"injectables/NoopSpanExporterService.html":{}},"body":{"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"coverage.html":{}}}],["noopspanprocessor",{"_index":363,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["nooptextmappropagator",{"_index":730,"title":{},"body":{"changelog.html":{}}}],["nooptextmappropagatormodule",{"_index":416,"title":{"modules/NoopTextMapPropagatorModule.html":{}},"body":{"modules/NoopTextMapPropagatorModule.html":{},"modules.html":{}}}],["nooptextmappropagatorservice",{"_index":421,"title":{"injectables/NoopTextMapPropagatorService.html":{}},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["normally",{"_index":1374,"title":{},"body":{"license.html":{}}}],["notable",{"_index":652,"title":{},"body":{"changelog.html":{}}}],["nothing",{"_index":1032,"title":{},"body":{"index.html":{},"license.html":{}}}],["notice",{"_index":1245,"title":{},"body":{"license.html":{}}}],["notices",{"_index":1355,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":1391,"title":{},"body":{"license.html":{}}}],["now",{"_index":1094,"title":{},"body":{"index.html":{}}}],["npm",{"_index":1028,"title":{},"body":{"index.html":{}}}],["null",{"_index":188,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":318,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{}}}],["number(config.otelcolconfig?.concurrencylimit",{"_index":631,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["number(value",{"_index":398,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["o",{"_index":66,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["object",{"_index":1231,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":1470,"title":{},"body":{"license.html":{}}}],["observable",{"_index":465,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["obtain",{"_index":1506,"title":{},"body":{"license.html":{}}}],["offer",{"_index":1318,"title":{},"body":{"license.html":{}}}],["offers",{"_index":1017,"title":{},"body":{"index.html":{}}}],["ok",{"_index":923,"title":{},"body":{"changelog.html":{}}}],["old",{"_index":770,"title":{},"body":{"changelog.html":{}}}],["one",{"_index":1077,"title":{},"body":{"index.html":{},"license.html":{}}}],["op",{"_index":415,"title":{},"body":{"injectables/NoopSpanExporterService.html":{}}}],["open",{"_index":1129,"title":{},"body":{"index.html":{}}}],["opentelemetry",{"_index":107,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["opentelemetry/api",{"_index":43,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["opentelemetry/context",{"_index":350,"title":{},"body":{"injectables/InstrumentationService.html":{},"index.html":{}}}],["opentelemetry/core",{"_index":241,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"index.html":{}}}],["opentelemetry/exporter",{"_index":626,"title":{},"body":{"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["opentelemetry/instrumentation",{"_index":78,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["opentelemetry/otlp",{"_index":627,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["opentelemetry/propagator",{"_index":44,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"index.html":{}}}],["opentelemetry/resources",{"_index":373,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["opentelemetry/sdk",{"_index":270,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/InstrumentationService.html":{},"injectables/NoopSpanExporterService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["opentelemetry/semantic",{"_index":355,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["opentelemetry/tracing",{"_index":1154,"title":{},"body":{"index.html":{}}}],["opentelemetry/web",{"_index":1147,"title":{},"body":{"index.html":{}}}],["opentelemetryconfig",{"_index":170,"title":{"interfaces/OpenTelemetryConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["opentelemetryhttpinterceptor",{"_index":425,"title":{"interceptors/OpenTelemetryHttpInterceptor.html":{}},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"coverage.html":{}}}],["opentelemetryinterceptor",{"_index":429,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["opentelemetryinterceptormodule",{"_index":585,"title":{"modules/OpenTelemetryInterceptorModule.html":{}},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{},"modules.html":{}}}],["opentelemetryinterceptormodule.forroot(environment.opentelemetryconfig",{"_index":1085,"title":{},"body":{"index.html":{}}}],["opentelemtery",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["opentelemtry",{"_index":896,"title":{},"body":{"changelog.html":{}}}],["optimization",{"_index":1151,"title":{},"body":{"index.html":{}}}],["option",{"_index":1111,"title":{},"body":{"index.html":{}}}],["optional",{"_index":56,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["options",{"_index":1158,"title":{},"body":{"index.html":{}}}],["origin",{"_index":1409,"title":{},"body":{"license.html":{}}}],["original",{"_index":455,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"license.html":{}}}],["os",{"_index":744,"title":{},"body":{"changelog.html":{}}}],["otel",{"_index":666,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["otel_config",{"_index":174,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["otel_custom_span",{"_index":183,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["otel_exporter",{"_index":262,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"interfaces/IExporter.html":{},"injectables/InstrumentationService.html":{},"modules/NoopSpanExporterModule.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["otel_instrumentation_plugins",{"_index":185,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["otel_logger",{"_index":181,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["otel_propagator",{"_index":15,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["otelcol",{"_index":607,"title":{},"body":{"modules/OtelColExporterModule.html":{},"changelog.html":{},"index.html":{}}}],["otelcolconfig",{"_index":172,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["otelcolexportermodule",{"_index":604,"title":{"modules/OtelColExporterModule.html":{}},"body":{"modules/OtelColExporterModule.html":{},"index.html":{},"modules.html":{}}}],["otelcolexporterservice",{"_index":606,"title":{"injectables/OtelcolExporterService.html":{}},"body":{"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{}}}],["otelcollectorconfig",{"_index":134,"title":{"interfaces/OtelCollectorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["otelwebtracermodule",{"_index":608,"title":{"modules/OtelWebTracerModule.html":{}},"body":{"modules/OtelWebTracerModule.html":{},"index.html":{},"modules.html":{}}}],["otelwebtracermodule.forroot(environment.opentelemetryconfig",{"_index":1090,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":343,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{},"license.html":{}}}],["otlp",{"_index":145,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["otlpexporterconfigbase",{"_index":623,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["otlptraceexporter",{"_index":625,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["out",{"_index":1451,"title":{},"body":{"license.html":{},"overview.html":{}}}],["outstanding",{"_index":1215,"title":{},"body":{"license.html":{}}}],["overide",{"_index":462,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["override",{"_index":1100,"title":{},"body":{"index.html":{}}}],["overview",{"_index":1514,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":1188,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":1211,"title":{},"body":{"license.html":{}}}],["package",{"_index":726,"title":{"dependencies.html":{},"properties.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["page",{"_index":1499,"title":{},"body":{"license.html":{}}}],["param",{"_index":222,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CustomSpan.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["parameter",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["parameters",{"_index":212,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/CustomSpan.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["parent",{"_index":910,"title":{},"body":{"changelog.html":{}}}],["parentbasedsampler",{"_index":360,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["parentmodule",{"_index":598,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["part",{"_index":1363,"title":{},"body":{"license.html":{}}}],["partial",{"_index":93,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{}}}],["partially",{"_index":160,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["particular",{"_index":1425,"title":{},"body":{"license.html":{}}}],["party",{"_index":1373,"title":{},"body":{"license.html":{}}}],["patent",{"_index":1314,"title":{},"body":{"license.html":{}}}],["peer",{"_index":352,"title":{},"body":{"injectables/InstrumentationService.html":{},"changelog.html":{},"index.html":{}}}],["peerdependecies",{"_index":693,"title":{},"body":{"changelog.html":{}}}],["peerdependencies",{"_index":734,"title":{},"body":{"changelog.html":{}}}],["pending",{"_index":141,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["percent",{"_index":1213,"title":{},"body":{"license.html":{}}}],["percentage",{"_index":1036,"title":{},"body":{"index.html":{}}}],["perform",{"_index":1311,"title":{},"body":{"license.html":{}}}],["permission",{"_index":1400,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":1221,"title":{},"body":{"license.html":{}}}],["perpetual",{"_index":1300,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":1362,"title":{},"body":{"license.html":{}}}],["places",{"_index":1368,"title":{},"body":{"license.html":{}}}],["platformlocation",{"_index":435,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["plugin",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["plugins",{"_index":1022,"title":{},"body":{"index.html":{}}}],["port",{"_index":447,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{}}}],["possibilities",{"_index":1018,"title":{},"body":{"index.html":{}}}],["possibility",{"_index":1463,"title":{},"body":{"license.html":{}}}],["power",{"_index":1202,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":1224,"title":{},"body":{"license.html":{}}}],["prepare",{"_index":1309,"title":{},"body":{"license.html":{},"todo.html":{}}}],["previous",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["printed",{"_index":1498,"title":{},"body":{"license.html":{}}}],["private",{"_index":206,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["probability",{"_index":321,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{}}}],["probabilitysampler",{"_index":100,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["problem",{"_index":909,"title":{},"body":{"changelog.html":{}}}],["product",{"_index":1404,"title":{},"body":{"license.html":{}}}],["production",{"_index":96,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["progress",{"_index":928,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["project",{"_index":654,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{}}}],["projects/.../exporter.interface.ts",{"_index":1530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../opentelemetry",{"_index":1528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../otel",{"_index":1529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../propagator.interface.ts",{"_index":1531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/instrumentation",{"_index":1122,"title":{},"body":{"index.html":{}}}],["projects/interceptor",{"_index":1121,"title":{},"body":{"index.html":{}}}],["projects/opentelemetry",{"_index":6,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["prominent",{"_index":1354,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":1064,"title":{},"body":{"index.html":{}}}],["propagator",{"_index":156,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["propagator.interface",{"_index":16,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{}}}],["propagator.module.ts",{"_index":10,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/W3CTraceContextPropagatorModule.html":{}}}],["propagator.service",{"_index":19,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/W3CTraceContextPropagatorModule.html":{}}}],["propagator.service.ts",{"_index":31,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"coverage.html":{}}}],["propagator.service.ts:15",{"_index":238,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["propagator.service.ts:16",{"_index":423,"title":{},"body":{"injectables/NoopTextMapPropagatorService.html":{}}}],["propagator.service.ts:17",{"_index":37,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{}}}],["propagator.service.ts:18",{"_index":401,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/W3CTraceContextPropagatorService.html":{}}}],["propagator.service.ts:24",{"_index":211,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["propagator.service.ts:33",{"_index":402,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["propagator.service.ts:35",{"_index":239,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["propagator.service.ts:43",{"_index":214,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["propagator.service.ts:55",{"_index":219,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["propagator/aws",{"_index":9,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["propagator/b3",{"_index":200,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["propagator/composite",{"_index":232,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["propagator/jaeger",{"_index":247,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["propagator/noop",{"_index":419,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["propagator/propagator.interface",{"_index":371,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["propagator/w3c",{"_index":244,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"coverage.html":{}}}],["propagators",{"_index":252,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"index.html":{}}}],["propagatorservice",{"_index":313,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["properties",{"_index":55,"title":{"properties.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"properties.html":{}}}],["protocol",{"_index":823,"title":{},"body":{"changelog.html":{}}}],["provide",{"_index":23,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"interfaces/IgnoreUrlsConfig.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopSpanExporterModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":1248,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":45,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"injectables/ZipkinExporterService.html":{}}}],["provider",{"_index":756,"title":{},"body":{"changelog.html":{}}}],["providers",{"_index":22,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopSpanExporterModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/OtelWebTracerModule.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{},"overview.html":{}}}],["provides",{"_index":1416,"title":{},"body":{"license.html":{}}}],["public",{"_index":306,"title":{},"body":{"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["publicly",{"_index":1310,"title":{},"body":{"license.html":{}}}],["publish",{"_index":700,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":1284,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":1199,"title":{},"body":{"license.html":{}}}],["queue",{"_index":112,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["ray",{"_index":1079,"title":{},"body":{"index.html":{}}}],["reached",{"_index":114,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["readable",{"_index":1366,"title":{},"body":{"license.html":{}}}],["readme",{"_index":723,"title":{},"body":{"changelog.html":{}}}],["reason",{"_index":1484,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":1406,"title":{},"body":{"license.html":{}}}],["received",{"_index":1293,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":1349,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":1056,"title":{},"body":{"index.html":{},"license.html":{}}}],["record",{"_index":139,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{}}}],["redistributing",{"_index":1431,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":1344,"title":{},"body":{"license.html":{}}}],["redo",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["reference",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["regarding",{"_index":1398,"title":{},"body":{"license.html":{}}}],["regex",{"_index":162,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["registerinstrumentations",{"_index":357,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["reinit",{"_index":516,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["release",{"_index":780,"title":{},"body":{"changelog.html":{}}}],["remain",{"_index":1260,"title":{},"body":{"license.html":{}}}],["remove",{"_index":729,"title":{},"body":{"changelog.html":{}}}],["rename",{"_index":749,"title":{},"body":{"changelog.html":{}}}],["replaced",{"_index":1492,"title":{},"body":{"license.html":{}}}],["represent",{"_index":1257,"title":{},"body":{"license.html":{}}}],["representatives",{"_index":1277,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":1308,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":1410,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":1179,"title":{},"body":{"license.html":{}}}],["req,res",{"_index":1046,"title":{},"body":{"index.html":{}}}],["request",{"_index":279,"title":{},"body":{"interfaces/CustomSpan.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["request.clone",{"_index":572,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.headers.get(key",{"_index":571,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.headers.keys().map(key",{"_index":569,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.method",{"_index":550,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.method.touppercase",{"_index":549,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.params",{"_index":1116,"title":{},"body":{"index.html":{}}}],["request.urlwithparams",{"_index":553,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.urlwithparams.startswith('http",{"_index":543,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["requests",{"_index":142,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["required",{"_index":1405,"title":{},"body":{"license.html":{}}}],["res.status(200).send",{"_index":1047,"title":{},"body":{"index.html":{}}}],["reset",{"_index":868,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["resource",{"_index":90,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["resourceattributes",{"_index":88,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["resourcefromattributes",{"_index":372,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["response",{"_index":103,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/CustomSpan.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["response.status",{"_index":1117,"title":{},"body":{"index.html":{}}}],["responsibility",{"_index":1476,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":1427,"title":{},"body":{"license.html":{}}}],["restart",{"_index":810,"title":{},"body":{"changelog.html":{}}}],["result",{"_index":1014,"title":{},"body":{"index.html":{},"license.html":{}}}],["resulting",{"_index":1232,"title":{},"body":{"license.html":{}}}],["results",{"_index":27,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":1359,"title":{},"body":{"license.html":{}}}],["return",{"_index":38,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":40,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"injectables/ZipkinExporterService.html":{}}}],["review",{"_index":764,"title":{},"body":{"changelog.html":{}}}],["revisions",{"_index":1254,"title":{},"body":{"license.html":{}}}],["rights",{"_index":1472,"title":{},"body":{"license.html":{}}}],["risks",{"_index":1433,"title":{},"body":{"license.html":{}}}],["root",{"_index":46,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"injectables/ZipkinExporterService.html":{}}}],["royalty",{"_index":1305,"title":{},"body":{"license.html":{}}}],["run",{"_index":129,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["rxjs",{"_index":476,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":495,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["same",{"_index":1095,"title":{},"body":{"index.html":{},"license.html":{}}}],["sample",{"_index":325,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["sampleconfig",{"_index":324,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["sampler",{"_index":322,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["samples",{"_index":1035,"title":{},"body":{"index.html":{}}}],["sampling",{"_index":925,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["scheduleddelaymillis",{"_index":127,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["scheme",{"_index":445,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["section",{"_index":1088,"title":{},"body":{"index.html":{},"license.html":{}}}],["sections",{"_index":1184,"title":{},"body":{"license.html":{}}}],["see",{"_index":203,"title":{},"body":{"injectables/B3PropagatorService.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["sell",{"_index":1319,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":707,"title":{},"body":{"changelog.html":{}}}],["semattrs_error_type",{"_index":492,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["send",{"_index":1031,"title":{},"body":{"index.html":{}}}],["sending",{"_index":1143,"title":{},"body":{"index.html":{}}}],["sent",{"_index":1276,"title":{},"body":{"license.html":{}}}],["separable",{"_index":1261,"title":{},"body":{"license.html":{}}}],["separate",{"_index":1395,"title":{},"body":{"license.html":{}}}],["service",{"_index":86,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{},"license.html":{}}}],["service.namespace",{"_index":92,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["servicename",{"_index":84,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["services/exporter/exporter.interface",{"_index":498,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["services/instrumentation/instrumentation.service",{"_index":613,"title":{},"body":{"modules/OtelWebTracerModule.html":{}}}],["services/propagator/propagator.interface",{"_index":499,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["set",{"_index":469,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["setcustomspan",{"_index":434,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["setcustomspan(span",{"_index":467,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["setheaders",{"_index":573,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["shall",{"_index":1182,"title":{},"body":{"license.html":{}}}],["shares",{"_index":1216,"title":{},"body":{"license.html":{}}}],["show",{"_index":1063,"title":{},"body":{"index.html":{}}}],["simplespanexporter(sync",{"_index":99,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["simplespanprocessor",{"_index":342,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["simplespanprocessor(exporter.getexporter",{"_index":397,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["simplespanprocessor(new",{"_index":395,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["simplespanprocessor(this.exporterservice.getexporter",{"_index":582,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["single",{"_index":60,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["size",{"_index":113,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["skipself",{"_index":593,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["smaller",{"_index":119,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["software",{"_index":1229,"title":{},"body":{"license.html":{}}}],["sole",{"_index":1475,"title":{},"body":{"license.html":{}}}],["solely",{"_index":1426,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"license.html":{}}}],["span",{"_index":104,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["span.addevent('response",{"_index":527,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.end",{"_index":540,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.interface",{"_index":81,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["span.interface.ts",{"_index":273,"title":{},"body":{"interfaces/CustomSpan.html":{},"coverage.html":{}}}],["span.interface.ts:16",{"_index":283,"title":{},"body":{"interfaces/CustomSpan.html":{}}}],["span.kind",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["span.recordexception",{"_index":534,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.setattribute('mycustom.key",{"_index":1115,"title":{},"body":{"index.html":{}}}],["span.setattributes",{"_index":524,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.setstatus",{"_index":529,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["spanexporter",{"_index":268,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["spankind",{"_index":478,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["spankind.client",{"_index":558,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["spanprocessor",{"_index":334,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["spanprocessors",{"_index":380,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["spans",{"_index":115,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["spanstatuscode",{"_index":477,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["spanstatuscode.error",{"_index":539,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["spanstatuscode.unset",{"_index":531,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["special",{"_index":1446,"title":{},"body":{"license.html":{}}}],["specific",{"_index":1508,"title":{},"body":{"license.html":{}}}],["specify",{"_index":197,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":537,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["stackcontextmanager",{"_index":470,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["standard",{"_index":656,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":1125,"title":{},"body":{"index.html":{}}}],["start:complete",{"_index":1127,"title":{},"body":{"index.html":{}}}],["started",{"_index":650,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["startspan",{"_index":548,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["state",{"_index":1390,"title":{},"body":{"license.html":{}}}],["stated",{"_index":1316,"title":{},"body":{"license.html":{}}}],["statement",{"_index":1383,"title":{},"body":{"license.html":{}}}],["statements",{"_index":967,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":207,"title":{},"body":{"injectables/B3PropagatorService.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["stating",{"_index":1356,"title":{},"body":{"license.html":{}}}],["status.code",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["stoppage",{"_index":1455,"title":{},"body":{"license.html":{}}}],["string",{"_index":58,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["strings",{"_index":168,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["subject",{"_index":952,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["sublicense",{"_index":1312,"title":{},"body":{"license.html":{}}}],["submission",{"_index":1386,"title":{},"body":{"license.html":{}}}],["submit",{"_index":1270,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":1268,"title":{},"body":{"license.html":{}}}],["subsequently",{"_index":1294,"title":{},"body":{"license.html":{}}}],["such",{"_index":1207,"title":{},"body":{"license.html":{}}}],["supersede",{"_index":1394,"title":{},"body":{"license.html":{}}}],["support",{"_index":1468,"title":{},"body":{"license.html":{}}}],["sync",{"_index":1055,"title":{},"body":{"index.html":{}}}],["syntax",{"_index":1496,"title":{},"body":{"license.html":{}}}],["systems",{"_index":1280,"title":{},"body":{"license.html":{}}}],["table",{"_index":980,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":979,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":493,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["task",{"_index":1523,"title":{},"body":{"todo.html":{}}}],["telemetry/opentelemetry",{"_index":1060,"title":{},"body":{"index.html":{}}}],["terminate",{"_index":1341,"title":{},"body":{"license.html":{}}}],["terms",{"_index":1177,"title":{},"body":{"license.html":{}}}],["test",{"_index":767,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["text",{"_index":418,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{},"license.html":{}}}],["textmappropagator",{"_index":41,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"injectables/W3CTraceContextPropagatorService.html":{}}}],["theory",{"_index":1437,"title":{},"body":{"license.html":{}}}],["there's",{"_index":1132,"title":{},"body":{"index.html":{}}}],["thereof",{"_index":1264,"title":{},"body":{"license.html":{}}}],["third",{"_index":1372,"title":{},"body":{"license.html":{}}}],["this.awsxraypropagatorservice.getpropagator",{"_index":256,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.b3propagatorconfig",{"_index":224,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["this.b3propagatorservice.getpropagator",{"_index":253,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.config.commonconfig.console",{"_index":383,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.config.commonconfig.production",{"_index":580,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.config.ignoreurls?.urls",{"_index":512,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager",{"_index":385,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager._currentcontext",{"_index":564,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager.active",{"_index":559,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager.disable",{"_index":514,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager.enable",{"_index":518,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.convertstringtonumber(this.config.batchspanprocessorconfig?.exporttimeoutmillis",{"_index":578,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.convertstringtonumber(this.config.batchspanprocessorconfig?.maxexportbatchsize",{"_index":576,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.convertstringtonumber(this.config.batchspanprocessorconfig?.maxqueuesize",{"_index":579,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.convertstringtonumber(this.config.batchspanprocessorconfig?.scheduleddelaymillis",{"_index":577,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.customheader",{"_index":405,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["this.customspan",{"_index":583,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.customspan.add(span",{"_index":584,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.defineprobabilitysampler(this.convertstringtonumber(config.commonconfig.probabilitysampler",{"_index":504,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.defineprobabilitysampler(this.convertstringtonumber(this.config.commonconfig.probabilitysampler",{"_index":378,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.exporterservice",{"_index":382,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.exporterservice.getexporter",{"_index":391,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.initspan(request",{"_index":519,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.injectcontextandheader(request",{"_index":521,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.insertconsolespanexporter",{"_index":575,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.insertconsolespanexporter(console",{"_index":393,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.insertornotspanexporter",{"_index":505,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.insertornotspanexporter(this.config.commonconfig.production",{"_index":381,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.instrumentation",{"_index":388,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.jaegerhttptracepropagatorservice.getpropagator",{"_index":255,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.loadresourceattributes(this.config.commonconfig",{"_index":379,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.logbody",{"_index":507,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.otelcolconfig",{"_index":628,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["this.platformlocation.href",{"_index":541,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.propagatorservice.getpropagator",{"_index":386,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.setcustomspan(span",{"_index":532,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer",{"_index":503,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer.register",{"_index":506,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracerprovider",{"_index":377,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.tracerprovider.register",{"_index":384,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.w3ctracecontextpropagatorservice.getpropagator",{"_index":254,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.zipkinconfig",{"_index":645,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["those",{"_index":1321,"title":{},"body":{"license.html":{}}}],["through",{"_index":1185,"title":{},"body":{"license.html":{}}}],["throw",{"_index":193,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["time",{"_index":144,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["timeout",{"_index":1164,"title":{},"body":{"index.html":{}}}],["timeoutmillis",{"_index":150,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["title",{"_index":1422,"title":{},"body":{"license.html":{}}}],["todo",{"_index":1522,"title":{"todo.html":{}},"body":{"todo.html":{}}}],["token",{"_index":196,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["tort",{"_index":1438,"title":{},"body":{"license.html":{}}}],["trace",{"_index":87,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopSpanExporterService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["traced",{"_index":164,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["tracedreq",{"_index":520,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["traceid",{"_index":915,"title":{},"body":{"changelog.html":{}}}],["traceidratiobasedsampler",{"_index":361,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["tracer",{"_index":332,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["tracerprovider",{"_index":303,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["traces",{"_index":1037,"title":{},"body":{"index.html":{}}}],["tracking",{"_index":1282,"title":{},"body":{"license.html":{}}}],["trade",{"_index":1401,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":1360,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":1399,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":1320,"title":{},"body":{"license.html":{}}}],["transformation",{"_index":1234,"title":{},"body":{"license.html":{}}}],["translation",{"_index":1235,"title":{},"body":{"license.html":{}}}],["trouble",{"_index":892,"title":{},"body":{"changelog.html":{}}}],["troubleshoot",{"_index":1015,"title":{},"body":{"index.html":{}}}],["true",{"_index":333,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{},"index.html":{}}}],["ts",{"_index":880,"title":{},"body":{"changelog.html":{}}}],["ts1086",{"_index":1167,"title":{},"body":{"index.html":{}}}],["ts2694",{"_index":1160,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":998,"title":{},"body":{"dependencies.html":{}}}],["twice",{"_index":1098,"title":{},"body":{"index.html":{}}}],["two",{"_index":124,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["type",{"_index":59,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"index.html":{}}}],["type/node",{"_index":1165,"title":{},"body":{"index.html":{}}}],["types",{"_index":1240,"title":{},"body":{"license.html":{}}}],["typescript",{"_index":1171,"title":{},"body":{"index.html":{}}}],["typo",{"_index":962,"title":{},"body":{"changelog.html":{}}}],["umdmoduleids",{"_index":849,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":189,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopSpanExporterService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":1198,"title":{},"body":{"license.html":{}}}],["underscore",{"_index":560,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["union",{"_index":1193,"title":{},"body":{"license.html":{}}}],["unless",{"_index":1388,"title":{},"body":{"license.html":{}}}],["unset",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["unused",{"_index":948,"title":{},"body":{"changelog.html":{}}}],["up",{"_index":1138,"title":{},"body":{"index.html":{}}}],["update",{"_index":665,"title":{},"body":{"changelog.html":{}}}],["upgrade",{"_index":889,"title":{},"body":{"changelog.html":{}}}],["upgrate",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["url",{"_index":135,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"index.html":{}}}],["url(request.urlwithparams",{"_index":544,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["url(this.geturl",{"_index":545,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest",{"_index":542,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.host",{"_index":551,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.port",{"_index":552,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.protocol.replace",{"_index":554,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.search",{"_index":555,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urls",{"_index":159,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["use",{"_index":97,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["useclass",{"_index":24,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopSpanExporterModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{}}}],["used",{"_index":1084,"title":{},"body":{"index.html":{}}}],["useexisting",{"_index":1110,"title":{},"body":{"index.html":{}}}],["usefactory",{"_index":618,"title":{},"body":{"modules/OtelWebTracerModule.html":{}}}],["useless",{"_index":743,"title":{},"body":{"changelog.html":{}}}],["user",{"_index":865,"title":{},"body":{"changelog.html":{}}}],["uses",{"_index":1006,"title":{},"body":{"index.html":{}}}],["usevalue",{"_index":191,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["using",{"_index":1430,"title":{},"body":{"license.html":{}}}],["value",{"_index":65,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["valueprovider",{"_index":73,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":973,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1527,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verbal",{"_index":1273,"title":{},"body":{"license.html":{}}}],["verify",{"_index":337,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["version",{"_index":657,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["version.json",{"_index":497,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["via",{"_index":1053,"title":{},"body":{"index.html":{}}}],["void",{"_index":328,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["w3c",{"_index":242,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/W3CTraceContextPropagatorModule.html":{}}}],["w3ctracecontext",{"_index":1075,"title":{},"body":{"index.html":{}}}],["w3ctracecontextpropagator",{"_index":634,"title":{},"body":{"injectables/W3CTraceContextPropagatorService.html":{}}}],["w3ctracecontextpropagatormodule",{"_index":632,"title":{"modules/W3CTraceContextPropagatorModule.html":{}},"body":{"modules/W3CTraceContextPropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["w3ctracecontextpropagatorservice",{"_index":236,"title":{"injectables/W3CTraceContextPropagatorService.html":{}},"body":{"injectables/CompositePropagatorService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"coverage.html":{}}}],["wait",{"_index":147,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["want",{"_index":1131,"title":{},"body":{"index.html":{}}}],["warn",{"_index":1106,"title":{},"body":{"index.html":{}}}],["warning",{"_index":1016,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":1418,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1412,"title":{},"body":{"license.html":{}}}],["web",{"_index":362,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["webtracer.module.ts",{"_index":610,"title":{},"body":{"modules/OtelWebTracerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["webtracer.module.ts:38",{"_index":611,"title":{},"body":{"modules/OtelWebTracerModule.html":{}}}],["webtracerprovider",{"_index":348,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["wherever",{"_index":1371,"title":{},"body":{"license.html":{}}}],["whether",{"_index":1208,"title":{},"body":{"license.html":{}}}],["whole",{"_index":1258,"title":{},"body":{"license.html":{}}}],["window.navigator.useragent",{"_index":556,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["within",{"_index":1296,"title":{},"body":{"license.html":{}}}],["without",{"_index":1142,"title":{},"body":{"index.html":{},"license.html":{}}}],["work",{"_index":1241,"title":{},"body":{"license.html":{}}}],["works",{"_index":937,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["worldwide",{"_index":1301,"title":{},"body":{"license.html":{}}}],["writing",{"_index":1291,"title":{},"body":{"license.html":{}}}],["written",{"_index":1274,"title":{},"body":{"license.html":{}}}],["x",{"_index":1078,"title":{},"body":{"index.html":{}}}],["xml",{"_index":1027,"title":{},"body":{"index.html":{}}}],["xmlhttprequestinstrumentation",{"_index":1091,"title":{},"body":{"index.html":{}}}],["xray",{"_index":8,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["xsrf",{"_index":954,"title":{},"body":{"changelog.html":{}}}],["xxx/fesm2015/jufab",{"_index":1144,"title":{},"body":{"index.html":{}}}],["yes",{"_index":591,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["you're",{"_index":1096,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":1503,"title":{},"body":{"license.html":{}}}],["zipkin",{"_index":151,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"index.html":{}}}],["zipkincollectorconfig",{"_index":152,"title":{"interfaces/ZipkinCollectorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["zipkinconfig",{"_index":173,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["zipkinexporter",{"_index":641,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["zipkinexporter(this.zipkinconfig",{"_index":648,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["zipkinexportermodule",{"_index":636,"title":{"modules/ZipkinExporterModule.html":{}},"body":{"modules/ZipkinExporterModule.html":{},"index.html":{},"modules.html":{}}}],["zipkinexporterservice",{"_index":638,"title":{"injectables/ZipkinExporterService.html":{}},"body":{"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["zone",{"_index":351,"title":{},"body":{"injectables/InstrumentationService.html":{},"index.html":{}}}],["zone.js",{"_index":1000,"title":{},"body":{"dependencies.html":{}}}],["zonecontextmanager",{"_index":347,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["zoom",{"_index":1516,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AwsXrayPropagatorModule.html":{"url":"modules/AwsXrayPropagatorModule.html","title":"module - AwsXrayPropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    AwsXrayPropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/aws-xray-propagator/aws-xray-propagator.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { OTEL_PROPAGATOR } from '../propagator.interface';\nimport { AwsXrayPropagatorService } from './aws-xray-propagator.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  providers: [\n    { provide: OTEL_PROPAGATOR, useClass: AwsXrayPropagatorService }\n  ]\n})\nexport class AwsXrayPropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AwsXrayPropagatorService.html":{"url":"injectables/AwsXrayPropagatorService.html","title":"injectable - AwsXrayPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AwsXrayPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/aws-xray-propagator/aws-xray-propagator.service.ts\n        \n\n\n            \n                Description\n            \n            \n                AwsXrayPropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPropagator\n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/aws-xray-propagator/aws-xray-propagator.service.ts:17\n                        \n                    \n\n\n            \n                \n                        Return an AwsXrayPropagator\n\n\n                        \n                            Returns :     TextMapPropagator\n\n                        \n                            \n                                TextMapPropagator as AwsXrayPropagator\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { AWSXRayPropagator } from '@opentelemetry/propagator-aws-xray';\n/**\n * AwsXrayPropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AwsXrayPropagatorService implements IPropagator {\n  /**\n   * Return an AwsXrayPropagator\n   *\n   * @return TextMapPropagator as AwsXrayPropagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new AWSXRayPropagator();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/B3PropagatorConfig.html":{"url":"interfaces/B3PropagatorConfig.html","title":"interface - B3PropagatorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  B3PropagatorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Configuration for B3PropagatorConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            multiHeader\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        multiHeader\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        multiHeader:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Single or Multi Header for b3propagator (default: multi)\nValue : 'O' (single), '1' (multi)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ClassProvider, ConstructorProvider, ExistingProvider, FactoryProvider, InjectionToken, ValueProvider } from '@angular/core';\nimport { AttributeValue, DiagLogger, DiagLogLevel } from '@opentelemetry/api';\nimport { Instrumentation } from '@opentelemetry/instrumentation';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** resourceAttributes: Extra resource attribute like service.namespace ...*/\n  resourceAttributes?: Partial>;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:4318/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Record;\n  /**\n   * An optional limit on pending requests\n   */\n  concurrencyLimit?: string;\n  /**\n   * Maximum time the OTLP exporter will wait for each batch export.\n   * The default value is 10000ms.\n   * */\n  timeoutMillis?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n\n/**\n * Configuration for IgnoreUrlsConfig\n */\nexport interface IgnoreUrlsConfig {\n  /**\n   * URLs that partially match any regex in ignoreUrls will not be traced.\n   * In addition, URLs that are _exact matches_ of strings in ignoreUrls will\n   * also not be traced.\n   */\n  urls?: Array;\n}\n\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n  /** ignoreUrls */\n  ignoreUrls?: IgnoreUrlsConfig;\n}\n\n/** OTEL_CONFIG : Config injection */\nexport const OTEL_CONFIG = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTEL_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const OTEL_CUSTOM_SPAN = new InjectionToken('otelcol.custom-span');\n\nexport const OTEL_INSTRUMENTATION_PLUGINS = new InjectionToken('otelcol.instrumentation.plugins');\n\nexport const defineConfigProvider = (\n  config: OpenTelemetryConfig | null | undefined,\n  configProvider: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider\n): ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider => {\n  if (config) {\n    configProvider = { provide: OTEL_CONFIG, useValue: config };\n  } else {\n    if (configProvider) {\n      if (configProvider.provide !== OTEL_CONFIG) {\n        throw new Error(`Configuration error. token must be : ${OTEL_CONFIG} ,  your token value is : ${configProvider.provide}`);\n      }\n    } else {\n      throw new Error(`Configuration error. you must specify a configuration in config or configProvider`);\n    }\n  }\n  return configProvider;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/B3PropagatorModule.html":{"url":"modules/B3PropagatorModule.html","title":"module - B3PropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    B3PropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { B3PropagatorService } from './b3-propagator.service';\nimport { OTEL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  providers: [\n    { provide: OTEL_PROPAGATOR, useClass: B3PropagatorService }\n  ]\n})\nexport class B3PropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/B3PropagatorService.html":{"url":"injectables/B3PropagatorService.html","title":"injectable - B3PropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  B3PropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts\n        \n\n\n            \n                Description\n            \n            \n                B3PropagatorService\nCan be a single or multi header.\nSee Configuration for more information\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                b3PropagatorConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                defineB3Encoding\n                            \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts:24\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        defineB3Encoding\n                        \n                    \n                \n            \n            \n                \n                        \n                    defineB3Encoding(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts:43\n                        \n                    \n\n\n            \n                \n                        Define if it's a single or multi header\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    string (0 => single header, 1 => Multi Header)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     B3InjectEncoding\n\n                        \n                            \n                                B3InjectEncoding\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPropagator\n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts:55\n                        \n                    \n\n\n            \n                \n                        Return an B3Propagator\n\n\n                        \n                            Returns :     TextMapPropagator\n\n                        \n                            \n                                TextMapPropagator as B3Propagator\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        b3PropagatorConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         B3PropagatorConfig\n\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts:24\n                        \n                    \n\n            \n                \n                    B3PropagatorConfig\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { B3Propagator, B3PropagatorConfig, B3InjectEncoding } from '@opentelemetry/propagator-b3';\nimport {\n  OpenTelemetryConfig,\n  OTEL_CONFIG,\n} from '../../../configuration/opentelemetry-config';\n\n/**\n * B3PropagatorService\n *\n * Can be a single or multi header.\n *\n * See Configuration for more information\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class B3PropagatorService implements IPropagator {\n  /**\n   * B3PropagatorConfig\n   */\n  private b3PropagatorConfig: B3PropagatorConfig;\n\n  /**\n   * Constructor\n   *\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OTEL_CONFIG) config: OpenTelemetryConfig) {\n    this.b3PropagatorConfig = {\n      injectEncoding: B3PropagatorService.defineB3Encoding(config.b3PropagatorConfig?.multiHeader)\n    };\n  }\n\n  /**\n   * Define if it's a single or multi header\n   *\n   * @param value string (0 => single header, 1 => Multi Header)\n   * @return B3InjectEncoding\n   */\n  private static defineB3Encoding(value: string): B3InjectEncoding {\n    if (value && '0' === value) {\n      return B3InjectEncoding.SINGLE_HEADER;\n    }\n    return B3InjectEncoding.MULTI_HEADER;\n  }\n\n  /**\n   * Return an B3Propagator\n   *\n   * @return TextMapPropagator as B3Propagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new B3Propagator(this.b3PropagatorConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BatchSpanProcessorConfig.html":{"url":"interfaces/BatchSpanProcessorConfig.html","title":"interface - BatchSpanProcessorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BatchSpanProcessorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n\n            \n                Description\n            \n            \n                BatchSpanExporter Configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            exportTimeoutMillis\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxExportBatchSize\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxQueueSize\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            scheduledDelayMillis\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exportTimeoutMillis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exportTimeoutMillis:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    How long the export can run before it is cancelled\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxExportBatchSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxExportBatchSize:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The maximum batch size of every export. It must be smaller or equal to maxQueueSize.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxQueueSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxQueueSize:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The maximum queue size. After the size is reached spans are dropped.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scheduledDelayMillis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scheduledDelayMillis:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The interval between two consecutive exports\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ClassProvider, ConstructorProvider, ExistingProvider, FactoryProvider, InjectionToken, ValueProvider } from '@angular/core';\nimport { AttributeValue, DiagLogger, DiagLogLevel } from '@opentelemetry/api';\nimport { Instrumentation } from '@opentelemetry/instrumentation';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** resourceAttributes: Extra resource attribute like service.namespace ...*/\n  resourceAttributes?: Partial>;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:4318/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Record;\n  /**\n   * An optional limit on pending requests\n   */\n  concurrencyLimit?: string;\n  /**\n   * Maximum time the OTLP exporter will wait for each batch export.\n   * The default value is 10000ms.\n   * */\n  timeoutMillis?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n\n/**\n * Configuration for IgnoreUrlsConfig\n */\nexport interface IgnoreUrlsConfig {\n  /**\n   * URLs that partially match any regex in ignoreUrls will not be traced.\n   * In addition, URLs that are _exact matches_ of strings in ignoreUrls will\n   * also not be traced.\n   */\n  urls?: Array;\n}\n\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n  /** ignoreUrls */\n  ignoreUrls?: IgnoreUrlsConfig;\n}\n\n/** OTEL_CONFIG : Config injection */\nexport const OTEL_CONFIG = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTEL_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const OTEL_CUSTOM_SPAN = new InjectionToken('otelcol.custom-span');\n\nexport const OTEL_INSTRUMENTATION_PLUGINS = new InjectionToken('otelcol.instrumentation.plugins');\n\nexport const defineConfigProvider = (\n  config: OpenTelemetryConfig | null | undefined,\n  configProvider: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider\n): ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider => {\n  if (config) {\n    configProvider = { provide: OTEL_CONFIG, useValue: config };\n  } else {\n    if (configProvider) {\n      if (configProvider.provide !== OTEL_CONFIG) {\n        throw new Error(`Configuration error. token must be : ${OTEL_CONFIG} ,  your token value is : ${configProvider.provide}`);\n      }\n    } else {\n      throw new Error(`Configuration error. you must specify a configuration in config or configProvider`);\n    }\n  }\n  return configProvider;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommonCollectorConfig.html":{"url":"interfaces/CommonCollectorConfig.html","title":"interface - CommonCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CommonCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Common configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            console\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            logBody\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            logLevel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            probabilitySampler\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            production\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            resourceAttributes\n                                        \n                                \n                                \n                                        \n                                            serviceName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        console\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        console:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    console : boolean to trace in console\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logBody\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logBody:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    log or not body response in span\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logLevel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logLevel:     DiagLogLevel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DiagLogLevel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    log level for opentelemetry\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        probabilitySampler\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        probabilitySampler:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    probabilitySampler\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        production\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        production:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resourceAttributes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resourceAttributes:     Partial>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Partial>\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    resourceAttributes: Extra resource attribute like service.namespace ...\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serviceName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        serviceName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    serviceName : Name of service in trace\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ClassProvider, ConstructorProvider, ExistingProvider, FactoryProvider, InjectionToken, ValueProvider } from '@angular/core';\nimport { AttributeValue, DiagLogger, DiagLogLevel } from '@opentelemetry/api';\nimport { Instrumentation } from '@opentelemetry/instrumentation';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** resourceAttributes: Extra resource attribute like service.namespace ...*/\n  resourceAttributes?: Partial>;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:4318/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Record;\n  /**\n   * An optional limit on pending requests\n   */\n  concurrencyLimit?: string;\n  /**\n   * Maximum time the OTLP exporter will wait for each batch export.\n   * The default value is 10000ms.\n   * */\n  timeoutMillis?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n\n/**\n * Configuration for IgnoreUrlsConfig\n */\nexport interface IgnoreUrlsConfig {\n  /**\n   * URLs that partially match any regex in ignoreUrls will not be traced.\n   * In addition, URLs that are _exact matches_ of strings in ignoreUrls will\n   * also not be traced.\n   */\n  urls?: Array;\n}\n\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n  /** ignoreUrls */\n  ignoreUrls?: IgnoreUrlsConfig;\n}\n\n/** OTEL_CONFIG : Config injection */\nexport const OTEL_CONFIG = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTEL_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const OTEL_CUSTOM_SPAN = new InjectionToken('otelcol.custom-span');\n\nexport const OTEL_INSTRUMENTATION_PLUGINS = new InjectionToken('otelcol.instrumentation.plugins');\n\nexport const defineConfigProvider = (\n  config: OpenTelemetryConfig | null | undefined,\n  configProvider: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider\n): ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider => {\n  if (config) {\n    configProvider = { provide: OTEL_CONFIG, useValue: config };\n  } else {\n    if (configProvider) {\n      if (configProvider.provide !== OTEL_CONFIG) {\n        throw new Error(`Configuration error. token must be : ${OTEL_CONFIG} ,  your token value is : ${configProvider.provide}`);\n      }\n    } else {\n      throw new Error(`Configuration error. you must specify a configuration in config or configProvider`);\n    }\n  }\n  return configProvider;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompositePropagatorModule.html":{"url":"modules/CompositePropagatorModule.html","title":"module - CompositePropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    CompositePropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CompositePropagatorService } from './composite-propagator.service';\nimport { OTEL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  providers: [\n    { provide: OTEL_PROPAGATOR, useClass: CompositePropagatorService }\n  ]\n})\nexport class  CompositePropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompositePropagatorService.html":{"url":"injectables/CompositePropagatorService.html","title":"injectable - CompositePropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CompositePropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts\n        \n\n\n            \n                Description\n            \n            \n                CompositePropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(b3PropagatorService: B3PropagatorService, w3cTraceContextPropagatorService: W3CTraceContextPropagatorService, jaegerHttpTracePropagatorService: JaegerHttpTracePropagatorService, awsXrayPropagatorService: AwsXrayPropagatorService)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts:15\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        b3PropagatorService\n                                                  \n                                                        \n                                                                        B3PropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        w3cTraceContextPropagatorService\n                                                  \n                                                        \n                                                                        W3CTraceContextPropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jaegerHttpTracePropagatorService\n                                                  \n                                                        \n                                                                        JaegerHttpTracePropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        awsXrayPropagatorService\n                                                  \n                                                        \n                                                                        AwsXrayPropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPropagator\n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts:35\n                        \n                    \n\n\n            \n                \n                        Return an CompositePropagator\n\n\n                        \n                            Returns :     TextMapPropagator\n\n                        \n                            \n                                TextMapPropagator as CompositePropagator\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { CompositePropagator } from '@opentelemetry/core';\nimport { B3PropagatorService } from '../b3-propagator/b3-propagator.service';\nimport { W3CTraceContextPropagatorService } from '../w3c-trace-context-propagator/w3c-trace-context-propagator.service';\nimport { JaegerHttpTracePropagatorService } from '../jaeger-http-trace-propagator/jaeger-http-trace-propagator.service';\nimport { AwsXrayPropagatorService } from '../aws-xray-propagator/aws-xray-propagator.service';\n/**\n * CompositePropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CompositePropagatorService implements IPropagator {\n  /**\n   * Constructor\n   */\n  constructor(\n    @Inject(B3PropagatorService)\n    private b3PropagatorService: B3PropagatorService,\n    @Inject(W3CTraceContextPropagatorService)\n    private w3cTraceContextPropagatorService: W3CTraceContextPropagatorService,\n    @Inject(JaegerHttpTracePropagatorService)\n    private jaegerHttpTracePropagatorService: JaegerHttpTracePropagatorService,\n    @Inject(AwsXrayPropagatorService)\n    private awsXrayPropagatorService: AwsXrayPropagatorService\n  ) {}\n\n  /**\n   * Return an CompositePropagator\n   *\n   * @return TextMapPropagator as CompositePropagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new CompositePropagator({\n      propagators: [\n        this.b3PropagatorService.getPropagator(),\n        this.w3cTraceContextPropagatorService.getPropagator(),\n        this.jaegerHttpTracePropagatorService.getPropagator(),\n        this.awsXrayPropagatorService.getPropagator()\n      ],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConsoleSpanExporterModule.html":{"url":"modules/ConsoleSpanExporterModule.html","title":"module - ConsoleSpanExporterModule","body":"\n                   \n\n\n\n\n    Modules\n    ConsoleSpanExporterModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ConsoleSpanExporterService } from './console-span-exporter.service';\nimport { OTEL_EXPORTER } from '../exporter.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  providers: [\n    { provide: OTEL_EXPORTER, useClass: ConsoleSpanExporterService }\n  ]\n})\nexport class ConsoleSpanExporterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsoleSpanExporterService.html":{"url":"injectables/ConsoleSpanExporterService.html","title":"injectable - ConsoleSpanExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConsoleSpanExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.service.ts\n        \n\n\n            \n                Description\n            \n            \n                ConsoleSpanExporterService\nA default span exporter\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getExporter\n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.service.ts:18\n                        \n                    \n\n\n            \n                \n                        Return a ConsoleSpanExporter\n\n\n                        \n                            Returns :     SpanExporter\n\n                        \n                            \n                                SpanExporter\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IExporter } from '../exporter.interface';\nimport { SpanExporter, ConsoleSpanExporter } from '@opentelemetry/sdk-trace-base';\n\n/**\n * ConsoleSpanExporterService\n * A default span exporter\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConsoleSpanExporterService implements IExporter {\n  /**\n   * Return a ConsoleSpanExporter\n   *\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter {\n    return new ConsoleSpanExporter();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CustomSpan.html":{"url":"interfaces/CustomSpan.html","title":"interface - CustomSpan","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CustomSpan\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/interceptor/custom-span.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface Injected in HttpInterceptor to add attributes in a Span.\nImplements this interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        add\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(span: Span, request: HttpRequest<>, response: HttpResponse<> | HttpErrorResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/opentelemetry-interceptor/src/lib/interceptor/custom-span.interface.ts:16\n                        \n                    \n\n\n            \n                \n                        To add Attributes in a Span during interception.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                span\n                                            \n                                                        Span\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Span\n\n                                            \n                                        \n                                        \n                                                request\n                                            \n                                                        HttpRequest<>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    an HttpRequest\n\n                                            \n                                        \n                                        \n                                                response\n                                            \n                                                        HttpResponse<> | HttpErrorResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    an HttpResponse\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Span\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpErrorResponse, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Span } from '@opentelemetry/api';\n\n/**\n * Interface Injected in HttpInterceptor to add attributes in a Span.\n * Implements this interface\n */\nexport interface CustomSpan {\n  /**\n   * To add Attributes in a Span during interception.\n   *\n   * @param span Span\n   * @param request an HttpRequest\n   * @param response an HttpResponse\n   */\n  add(span: Span, request: HttpRequest, response: HttpResponse | HttpErrorResponse): Span;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IExporter.html":{"url":"interfaces/IExporter.html","title":"interface - IExporter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IExporter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Exporter interface to define a default exporter\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getExporter\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getExporter\n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts:13\n                        \n                    \n\n\n            \n                \n                        give an inmplementation of SpanExporter\n\n\n                        \n                            Returns :     SpanExporter\n\n                        \n                            \n                                SpanExporter\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { SpanExporter } from '@opentelemetry/sdk-trace-base';\n\n/**\n * Exporter interface to define a default exporter\n */\nexport interface IExporter {\n  /**\n   * give an inmplementation of SpanExporter\n   *\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter;\n}\n\n/** injection for a Exporter */\nexport const OTEL_EXPORTER = new InjectionToken('otelcol.exporter');\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPropagator.html":{"url":"interfaces/IPropagator.html","title":"interface - IPropagator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPropagator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface to define propagator\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getPropagator\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPropagator\n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts:13\n                        \n                    \n\n\n            \n                \n                        give an implementation of a propagator\n\n\n                        \n                            Returns :     TextMapPropagator\n\n                        \n                            \n                                HttpTextPropagator\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { TextMapPropagator } from '@opentelemetry/api';\n\n/**\n * Interface to define propagator\n */\nexport interface IPropagator {\n  /**\n   * give an implementation of a propagator\n   *\n   * @return HttpTextPropagator\n   */\n  getPropagator(): TextMapPropagator;\n}\n\n/** injection for a propagator */\nexport const OTEL_PROPAGATOR = new InjectionToken('otelcol.propagator');\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IgnoreUrlsConfig.html":{"url":"interfaces/IgnoreUrlsConfig.html","title":"interface - IgnoreUrlsConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IgnoreUrlsConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Configuration for IgnoreUrlsConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            urls\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        urls\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        urls:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    URLs that partially match any regex in ignoreUrls will not be traced.\nIn addition, URLs that are exact matches of strings in ignoreUrls will\nalso not be traced.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ClassProvider, ConstructorProvider, ExistingProvider, FactoryProvider, InjectionToken, ValueProvider } from '@angular/core';\nimport { AttributeValue, DiagLogger, DiagLogLevel } from '@opentelemetry/api';\nimport { Instrumentation } from '@opentelemetry/instrumentation';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** resourceAttributes: Extra resource attribute like service.namespace ...*/\n  resourceAttributes?: Partial>;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:4318/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Record;\n  /**\n   * An optional limit on pending requests\n   */\n  concurrencyLimit?: string;\n  /**\n   * Maximum time the OTLP exporter will wait for each batch export.\n   * The default value is 10000ms.\n   * */\n  timeoutMillis?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n\n/**\n * Configuration for IgnoreUrlsConfig\n */\nexport interface IgnoreUrlsConfig {\n  /**\n   * URLs that partially match any regex in ignoreUrls will not be traced.\n   * In addition, URLs that are _exact matches_ of strings in ignoreUrls will\n   * also not be traced.\n   */\n  urls?: Array;\n}\n\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n  /** ignoreUrls */\n  ignoreUrls?: IgnoreUrlsConfig;\n}\n\n/** OTEL_CONFIG : Config injection */\nexport const OTEL_CONFIG = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTEL_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const OTEL_CUSTOM_SPAN = new InjectionToken('otelcol.custom-span');\n\nexport const OTEL_INSTRUMENTATION_PLUGINS = new InjectionToken('otelcol.instrumentation.plugins');\n\nexport const defineConfigProvider = (\n  config: OpenTelemetryConfig | null | undefined,\n  configProvider: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider\n): ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider => {\n  if (config) {\n    configProvider = { provide: OTEL_CONFIG, useValue: config };\n  } else {\n    if (configProvider) {\n      if (configProvider.provide !== OTEL_CONFIG) {\n        throw new Error(`Configuration error. token must be : ${OTEL_CONFIG} ,  your token value is : ${configProvider.provide}`);\n      }\n    } else {\n      throw new Error(`Configuration error. you must specify a configuration in config or configProvider`);\n    }\n  }\n  return configProvider;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InstrumentationService.html":{"url":"injectables/InstrumentationService.html","title":"injectable - InstrumentationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InstrumentationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts\n        \n\n\n            \n                Description\n            \n            \n                InstrumentationService.\nService for component to add instrumentation.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                contextManager\n                            \n                            \n                                    Private\n                                tracerProvider\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                convertStringToNumber\n                            \n                            \n                                    Private\n                                defineProbabilitySampler\n                            \n                            \n                                    Public\n                                initInstrumentation\n                            \n                            \n                                    Private\n                                insertConsoleSpanExporter\n                            \n                            \n                                    Private\n                                insertOrNotSpanExporter\n                            \n                            \n                                    Private\n                                insertSpanProcessorProductionMode\n                            \n                            \n                                    Private\n                                loadResourceAttributes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig, exporterService: IExporter, propagatorService: IPropagator, instrumentation: Instrumentation[])\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:43\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        exporterService\n                                                  \n                                                        \n                                                                        IExporter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        propagatorService\n                                                  \n                                                        \n                                                                        IPropagator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        instrumentation\n                                                  \n                                                        \n                                                                    Instrumentation[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        convertStringToNumber\n                        \n                    \n                \n            \n            \n                \n                        \n                    convertStringToNumber(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:147\n                        \n                    \n\n\n            \n                \n                        convert String to Number (or undefined)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                number or undefined\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        defineProbabilitySampler\n                        \n                    \n                \n            \n            \n                \n                        \n                    defineProbabilitySampler(sampleConfig: number)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:158\n                        \n                    \n\n\n            \n                \n                        define the Probability Sampler\nBy Default, it's always (or 1)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                sampleConfig\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    the sample configuration\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Sampler\n\n                        \n                            \n                                Sampler\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        initInstrumentation\n                        \n                    \n                \n            \n            \n                \n                        \n                    initInstrumentation()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:70\n                        \n                    \n\n\n            \n                \n                        Init instrumentation on init\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        insertConsoleSpanExporter\n                        \n                    \n                \n            \n            \n                \n                        \n                    insertConsoleSpanExporter(console: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:118\n                        \n                    \n\n\n            \n                \n                        Insert in tracer the console span if config is true\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                console\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    config to insert console span\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     SpanProcessor\n\n                        \n                            \n                                SpanProcessor\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        insertOrNotSpanExporter\n                        \n                    \n                \n            \n            \n                \n                        \n                    insertOrNotSpanExporter(production: boolean, exporter: IExporter, console: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:103\n                        \n                    \n\n\n            \n                \n                        Verify to insert or not a Span Exporter\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                production\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    production mode\n\n                                            \n                                        \n                                        \n                                                exporter\n                                            \n                                                            IExporter\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    exporter\n\n                                            \n                                        \n                                        \n                                                console\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    config to insert console span\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Array\n\n                        \n                            \n                                Array of SpanProcessor\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        insertSpanProcessorProductionMode\n                        \n                    \n                \n            \n            \n                \n                        \n                    insertSpanProcessorProductionMode(production: boolean, exporter: IExporter)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:132\n                        \n                    \n\n\n            \n                \n                        Insert BatchSpanProcessor in production mode\nSimpleSpanProcessor otherwise\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                production\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                exporter\n                                            \n                                                            IExporter\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     SpanProcessor\n\n                        \n                            \n                                SpanProcessor\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadResourceAttributes\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadResourceAttributes(commonConfig: CommonCollectorConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:87\n                        \n                    \n\n\n            \n                \n                        Generate Resource Attributes\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                commonConfig\n                                            \n                                                            CommonCollectorConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    common configuration\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Resource\n\n                        \n                            \n                                Resource\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        contextManager\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ZoneContextManager()\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:43\n                        \n                    \n\n            \n                \n                    contextManager\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tracerProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WebTracerProvider\n\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:38\n                        \n                    \n\n            \n                \n                    tracerProvider\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { ZoneContextManager } from '@opentelemetry/context-zone-peer-dep';\nimport { ATTR_SERVICE_NAME } from '@opentelemetry/semantic-conventions';\nimport { Instrumentation, registerInstrumentations } from '@opentelemetry/instrumentation';\nimport {\n  AlwaysOffSampler,\n  AlwaysOnSampler,\n  ParentBasedSampler,\n  Sampler,\n  TraceIdRatioBasedSampler,\n  WebTracerProvider\n} from '@opentelemetry/sdk-trace-web';\nimport {\n  ConsoleSpanExporter,\n  SimpleSpanProcessor,\n  BatchSpanProcessor,\n  NoopSpanProcessor,\n  SpanProcessor\n} from '@opentelemetry/sdk-trace-base';\n// eslint-disable-next-line max-len\nimport { OTEL_CONFIG, OpenTelemetryConfig, OTEL_INSTRUMENTATION_PLUGINS, CommonCollectorConfig } from '../../configuration/opentelemetry-config';\nimport { OTEL_EXPORTER, IExporter } from '../exporter/exporter.interface';\nimport { OTEL_PROPAGATOR, IPropagator } from '../propagator/propagator.interface';\nimport { Resource, resourceFromAttributes } from '@opentelemetry/resources';\n\n/**\n * InstrumentationService.\n * Service for component to add instrumentation.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class InstrumentationService {\n\n  /**\n   * tracerProvider\n   */\n  private tracerProvider: WebTracerProvider;\n\n  /**\n   * contextManager\n   */\n  private contextManager = new ZoneContextManager();\n\n  /**\n   * Constructor\n   *\n   * @param config\n   * @param exporterService\n   * @param propagatorService\n   */\n  constructor(@Inject(OTEL_CONFIG) private config: OpenTelemetryConfig,\n    @Inject(OTEL_EXPORTER)\n    private exporterService: IExporter,\n    @Inject(OTEL_PROPAGATOR)\n    private propagatorService: IPropagator,\n    @Inject(OTEL_INSTRUMENTATION_PLUGINS)\n    private instrumentation: Instrumentation[]) {\n    this.tracerProvider = new WebTracerProvider({\n      sampler: this.defineProbabilitySampler(this.convertStringToNumber(this.config.commonConfig.probabilitySampler)),\n      resource: this.loadResourceAttributes(this.config.commonConfig),\n      spanProcessors: this.insertOrNotSpanExporter(this.config.commonConfig.production,\n        this.exporterService, this.config.commonConfig.console),\n    });\n  }\n\n  /**\n   * Init instrumentation on init\n   */\n  public initInstrumentation() {\n    this.tracerProvider.register({\n      contextManager: this.contextManager,\n      propagator: this.propagatorService.getPropagator(),\n    });\n\n    registerInstrumentations({\n      instrumentations: this.instrumentation,\n      tracerProvider: this.tracerProvider,\n    });\n  }\n\n  /**\n   * Generate Resource Attributes\n   * @param commonConfig common configuration\n   * @returns Resource\n   */\n  private loadResourceAttributes(\n    commonConfig: CommonCollectorConfig\n  ): Resource {\n    return resourceFromAttributes({\n      [ATTR_SERVICE_NAME]: commonConfig?.serviceName,\n      ...commonConfig?.resourceAttributes,\n    });\n  }\n\n  /**\n   * Verify to insert or not a Span Exporter\n   * @param console config to insert console span\n   * @param production production mode\n   * @param exporter exporter\n   * @returns Array of SpanProcessor\n   */\n  private insertOrNotSpanExporter(production: boolean, exporter: IExporter, console: boolean): Array {\n    if (this.exporterService.getExporter() !== undefined) {\n      return Array.of(this.insertSpanProcessorProductionMode(production, exporter),\n        this.insertConsoleSpanExporter(console));\n    } else {\n      return Array.of(new NoopSpanProcessor());\n    }\n  }\n\n  /**\n   * Insert in tracer the console span if config is true\n   *\n   * @param console config to insert console span\n   * @returns SpanProcessor\n   */\n  private insertConsoleSpanExporter(console: boolean): SpanProcessor {\n    if (console) {\n      return new SimpleSpanProcessor(new ConsoleSpanExporter());\n    }\n  }\n\n  /**\n   * Insert BatchSpanProcessor in production mode\n   * SimpleSpanProcessor otherwise\n   *\n   * @param boolean production\n   * @param IExporter exporter\n   * @returns SpanProcessor\n   */\n  private insertSpanProcessorProductionMode(\n    production: boolean,\n    exporter: IExporter\n  ): SpanProcessor {\n    return production\n      ? new BatchSpanProcessor(exporter.getExporter())\n      : new SimpleSpanProcessor(exporter.getExporter());\n  }\n\n  /**\n   * convert String to Number (or undefined)\n   *\n   * @param value\n   * @returns number or undefined\n   */\n  private convertStringToNumber(value: string): number {\n    return value !== undefined ? Number(value) : undefined;\n  }\n\n  /**\n   * define the Probability Sampler\n   * By Default, it's always (or 1)\n   *\n   * @param sampleConfig the sample configuration\n   * @returns Sampler\n   */\n  private defineProbabilitySampler(sampleConfig: number): Sampler {\n    if (sampleConfig >= 1) {\n      return new ParentBasedSampler({ root: new AlwaysOnSampler() });\n    }\n    else if (sampleConfig \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JaegerHttpTracePropagatorModule.html":{"url":"modules/JaegerHttpTracePropagatorModule.html","title":"module - JaegerHttpTracePropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    JaegerHttpTracePropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { JaegerHttpTracePropagatorService } from './jaeger-http-trace-propagator.service';\nimport { OTEL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  providers: [\n    { provide: OTEL_PROPAGATOR, useClass: JaegerHttpTracePropagatorService }\n  ]\n})\nexport class JaegerHttpTracePropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JaegerHttpTracePropagatorService.html":{"url":"injectables/JaegerHttpTracePropagatorService.html","title":"injectable - JaegerHttpTracePropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JaegerHttpTracePropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts\n        \n\n\n            \n                Description\n            \n            \n                JaegerHttpTracePropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                customHeader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts:18\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPropagator\n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts:33\n                        \n                    \n\n\n            \n                \n                        Return an JaegerPropagator\n\n\n                        \n                            Returns :     TextMapPropagator\n\n                        \n                            \n                                TextMapPropagator as JaegerPropagator\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        customHeader\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts:18\n                        \n                    \n\n            \n                \n                    custom Header\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { JaegerPropagator } from '@opentelemetry/propagator-jaeger';\nimport { OTEL_CONFIG } from '../../../configuration/opentelemetry-config';\nimport { OpenTelemetryConfig } from '../../../../public-api';\n\n/**\n * JaegerHttpTracePropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JaegerHttpTracePropagatorService implements IPropagator {\n  /**\n   * custom Header\n   */\n  private customHeader: string;\n  /**\n   * Constructor\n   *\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OTEL_CONFIG) config: OpenTelemetryConfig) {\n    this.customHeader = config.jaegerPropagatorConfig?.customHeader;\n  }\n\n  /**\n   * Return an JaegerPropagator\n   *\n   * @return TextMapPropagator as JaegerPropagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new JaegerPropagator(this.customHeader);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JaegerPropagatorConfig.html":{"url":"interfaces/JaegerPropagatorConfig.html","title":"interface - JaegerPropagatorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JaegerPropagatorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Configuration for JaegerPropagatorConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            customHeader\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customHeader\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customHeader:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A custom Header for the propagator\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ClassProvider, ConstructorProvider, ExistingProvider, FactoryProvider, InjectionToken, ValueProvider } from '@angular/core';\nimport { AttributeValue, DiagLogger, DiagLogLevel } from '@opentelemetry/api';\nimport { Instrumentation } from '@opentelemetry/instrumentation';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** resourceAttributes: Extra resource attribute like service.namespace ...*/\n  resourceAttributes?: Partial>;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:4318/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Record;\n  /**\n   * An optional limit on pending requests\n   */\n  concurrencyLimit?: string;\n  /**\n   * Maximum time the OTLP exporter will wait for each batch export.\n   * The default value is 10000ms.\n   * */\n  timeoutMillis?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n\n/**\n * Configuration for IgnoreUrlsConfig\n */\nexport interface IgnoreUrlsConfig {\n  /**\n   * URLs that partially match any regex in ignoreUrls will not be traced.\n   * In addition, URLs that are _exact matches_ of strings in ignoreUrls will\n   * also not be traced.\n   */\n  urls?: Array;\n}\n\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n  /** ignoreUrls */\n  ignoreUrls?: IgnoreUrlsConfig;\n}\n\n/** OTEL_CONFIG : Config injection */\nexport const OTEL_CONFIG = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTEL_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const OTEL_CUSTOM_SPAN = new InjectionToken('otelcol.custom-span');\n\nexport const OTEL_INSTRUMENTATION_PLUGINS = new InjectionToken('otelcol.instrumentation.plugins');\n\nexport const defineConfigProvider = (\n  config: OpenTelemetryConfig | null | undefined,\n  configProvider: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider\n): ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider => {\n  if (config) {\n    configProvider = { provide: OTEL_CONFIG, useValue: config };\n  } else {\n    if (configProvider) {\n      if (configProvider.provide !== OTEL_CONFIG) {\n        throw new Error(`Configuration error. token must be : ${OTEL_CONFIG} ,  your token value is : ${configProvider.provide}`);\n      }\n    } else {\n      throw new Error(`Configuration error. you must specify a configuration in config or configProvider`);\n    }\n  }\n  return configProvider;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NoopSpanExporterModule.html":{"url":"modules/NoopSpanExporterModule.html","title":"module - NoopSpanExporterModule","body":"\n                   \n\n\n\n\n    Modules\n    NoopSpanExporterModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/noop-exporter/noop-span-exporter.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NoopSpanExporterService } from './noop-span-exporter.service';\nimport { OTEL_EXPORTER } from '../exporter.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    { provide: OTEL_EXPORTER, useClass: NoopSpanExporterService }\n  ]\n})\nexport class NoopSpanExporterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NoopSpanExporterService.html":{"url":"injectables/NoopSpanExporterService.html","title":"injectable - NoopSpanExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NoopSpanExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/noop-exporter/noop-span-exporter.service.ts\n        \n\n\n            \n                Description\n            \n            \n                NoopSpanExporterService\nA No-op span exporter\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getExporter\n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/noop-exporter/noop-span-exporter.service.ts:18\n                        \n                    \n\n\n            \n                \n                        Return undefined\n\n\n                        \n                            Returns :     SpanExporter\n\n                        \n                            \n                                SpanExporter\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IExporter } from '../exporter.interface';\nimport { SpanExporter } from '@opentelemetry/sdk-trace-base';\n\n/**\n * NoopSpanExporterService\n * A No-op span exporter\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class NoopSpanExporterService implements IExporter {\n  /**\n   * Return undefined\n   *\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter {\n    return undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NoopTextMapPropagatorModule.html":{"url":"modules/NoopTextMapPropagatorModule.html","title":"module - NoopTextMapPropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    NoopTextMapPropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NoopTextMapPropagatorService } from './noop-text-map-propagator.service';\nimport { OTEL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  providers: [\n    { provide: OTEL_PROPAGATOR, useClass: NoopTextMapPropagatorService }\n  ]\n})\nexport class NoopTextMapPropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NoopTextMapPropagatorService.html":{"url":"injectables/NoopTextMapPropagatorService.html","title":"injectable - NoopTextMapPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NoopTextMapPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.service.ts\n        \n\n\n            \n                Description\n            \n            \n                NoopHttpTextPropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPropagator\n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.service.ts:16\n                        \n                    \n\n\n            \n                \n                        Return null\n\n\n                        \n                            Returns :     TextMapPropagator\n\n                        \n                            \n                                TextMapPropagator as null\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\n/**\n * NoopHttpTextPropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class NoopTextMapPropagatorService implements IPropagator {\n  /**\n   * Return null\n   *\n   * @return TextMapPropagator as null\n   */\n  getPropagator(): TextMapPropagator {\n    return null;\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OpenTelemetryConfig.html":{"url":"interfaces/OpenTelemetryConfig.html","title":"interface - OpenTelemetryConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OpenTelemetryConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n\n            \n                Description\n            \n            \n                OpenTelemetryConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            b3PropagatorConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            batchSpanProcessorConfig\n                                        \n                                \n                                \n                                        \n                                            commonConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ignoreUrls\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            jaegerPropagatorConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            otelcolConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            zipkinConfig\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        b3PropagatorConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        b3PropagatorConfig:         B3PropagatorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         B3PropagatorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    b3PropagatorConfig\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        batchSpanProcessorConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        batchSpanProcessorConfig:         BatchSpanProcessorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BatchSpanProcessorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    batchSpanProcessorConfig\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commonConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        commonConfig:         CommonCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CommonCollectorConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    commonConfig\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ignoreUrls\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ignoreUrls:         IgnoreUrlsConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IgnoreUrlsConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    ignoreUrls\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jaegerPropagatorConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jaegerPropagatorConfig:         JaegerPropagatorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         JaegerPropagatorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    jaegerPropagatorConfig\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        otelcolConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        otelcolConfig:         OtelCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OtelCollectorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    otelcolConfig\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zipkinConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zipkinConfig:         ZipkinCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ZipkinCollectorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    zipkinConfig\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ClassProvider, ConstructorProvider, ExistingProvider, FactoryProvider, InjectionToken, ValueProvider } from '@angular/core';\nimport { AttributeValue, DiagLogger, DiagLogLevel } from '@opentelemetry/api';\nimport { Instrumentation } from '@opentelemetry/instrumentation';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** resourceAttributes: Extra resource attribute like service.namespace ...*/\n  resourceAttributes?: Partial>;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:4318/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Record;\n  /**\n   * An optional limit on pending requests\n   */\n  concurrencyLimit?: string;\n  /**\n   * Maximum time the OTLP exporter will wait for each batch export.\n   * The default value is 10000ms.\n   * */\n  timeoutMillis?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n\n/**\n * Configuration for IgnoreUrlsConfig\n */\nexport interface IgnoreUrlsConfig {\n  /**\n   * URLs that partially match any regex in ignoreUrls will not be traced.\n   * In addition, URLs that are _exact matches_ of strings in ignoreUrls will\n   * also not be traced.\n   */\n  urls?: Array;\n}\n\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n  /** ignoreUrls */\n  ignoreUrls?: IgnoreUrlsConfig;\n}\n\n/** OTEL_CONFIG : Config injection */\nexport const OTEL_CONFIG = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTEL_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const OTEL_CUSTOM_SPAN = new InjectionToken('otelcol.custom-span');\n\nexport const OTEL_INSTRUMENTATION_PLUGINS = new InjectionToken('otelcol.instrumentation.plugins');\n\nexport const defineConfigProvider = (\n  config: OpenTelemetryConfig | null | undefined,\n  configProvider: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider\n): ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider => {\n  if (config) {\n    configProvider = { provide: OTEL_CONFIG, useValue: config };\n  } else {\n    if (configProvider) {\n      if (configProvider.provide !== OTEL_CONFIG) {\n        throw new Error(`Configuration error. token must be : ${OTEL_CONFIG} ,  your token value is : ${configProvider.provide}`);\n      }\n    } else {\n      throw new Error(`Configuration error. you must specify a configuration in config or configProvider`);\n    }\n  }\n  return configProvider;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/OpenTelemetryHttpInterceptor.html":{"url":"interceptors/OpenTelemetryHttpInterceptor.html","title":"interceptor - OpenTelemetryHttpInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  OpenTelemetryHttpInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                OpenTelemetryInterceptor class\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contextManager\n                            \n                            \n                                logBody\n                            \n                            \n                                tracer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                convertStringToNumber\n                            \n                            \n                                    Private\n                                defineProbabilitySampler\n                            \n                            \n                                    Private\n                                getURL\n                            \n                            \n                                    Private\n                                initSpan\n                            \n                            \n                                    Private\n                                injectContextAndHeader\n                            \n                            \n                                    Private\n                                insertConsoleSpanExporter\n                            \n                            \n                                    Private\n                                insertOrNotSpanExporter\n                            \n                            \n                                    Private\n                                insertSpanProcessorProductionMode\n                            \n                            \n                                intercept\n                            \n                            \n                                    Private\n                                loadResourceAttributes\n                            \n                            \n                                    Private\n                                setCustomSpan\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig, exporterService: IExporter, propagatorService: IPropagator, logger: DiagLogger, customSpan: CustomSpan, platformLocation: PlatformLocation)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:76\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                configuration\n\n                                                        \n                                                \n                                                \n                                                        exporterService\n                                                  \n                                                        \n                                                                        IExporter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service exporter injected\n\n                                                        \n                                                \n                                                \n                                                        propagatorService\n                                                  \n                                                        \n                                                                        IPropagator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                propagator injected\n\n                                                        \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    DiagLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                define logger\n\n                                                        \n                                                \n                                                \n                                                        customSpan\n                                                  \n                                                        \n                                                                        CustomSpan\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                a customSpan interface to add attributes\n\n                                                        \n                                                \n                                                \n                                                        platformLocation\n                                                  \n                                                        \n                                                                    PlatformLocation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                encapsulates all calls to DOM APIs\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        convertStringToNumber\n                        \n                    \n                \n            \n            \n                \n                        \n                    convertStringToNumber(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:306\n                        \n                    \n\n\n            \n                \n                        convert String to Number (or undefined)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                number or undefined\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        defineProbabilitySampler\n                        \n                    \n                \n            \n            \n                \n                        \n                    defineProbabilitySampler(sampleConfig: number)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:289\n                        \n                    \n\n\n            \n                \n                        define the Probability Sampler\nBy Default, it's always (or 1)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                sampleConfig\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    the sample configuration\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Sampler\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getURL\n                        \n                    \n                \n            \n            \n                \n                        \n                    getURL()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:176\n                        \n                    \n\n\n            \n                \n                        Get current scheme, hostname and port\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initSpan\n                        \n                    \n                \n            \n            \n                \n                        \n                    initSpan(request: HttpRequest<>)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:196\n                        \n                    \n\n\n            \n                \n                        Initialise a span for a request intercepted\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        HttpRequest<>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    request\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Span\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        injectContextAndHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    injectContextAndHeader(request: HttpRequest<>)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:229\n                        \n                    \n\n\n            \n                \n                        Add header propagator in request and conserve original header\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        HttpRequest<>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    request\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        insertConsoleSpanExporter\n                        \n                    \n                \n            \n            \n                \n                        \n                    insertConsoleSpanExporter()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:261\n                        \n                    \n\n\n            \n                \n                        Insert in tracer the console span if config is true\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        insertOrNotSpanExporter\n                        \n                    \n                \n            \n            \n                \n                        \n                    insertOrNotSpanExporter()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:249\n                        \n                    \n\n\n            \n                \n                        Verify to insert or not a Span Exporter\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        insertSpanProcessorProductionMode\n                        \n                    \n                \n            \n            \n                \n                        \n                    insertSpanProcessorProductionMode()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:271\n                        \n                    \n\n\n            \n                \n                        Insert BatchSpanProcessor in production mode\nSimpleSpanProcessor otherwise\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:121\n                        \n                    \n\n\n            \n                \n                        Overide method\nInterceptor from HttpInterceptor Angular\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        HttpRequest<>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    the current request\n\n                                            \n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    next\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadResourceAttributes\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadResourceAttributes(commonConfig: CommonCollectorConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:183\n                        \n                    \n\n\n            \n                \n                        Generate Resource Attributes\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                commonConfig\n                                            \n                                                            CommonCollectorConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Resource\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setCustomSpan\n                        \n                    \n                \n            \n            \n                \n                        \n                    setCustomSpan(span: Span, request: HttpRequest<>, response: HttpResponse<> | HttpErrorResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:318\n                        \n                    \n\n\n            \n                \n                        Set custom attributes in span with a CustomSpan\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                span\n                                            \n                                                        Span\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        HttpRequest<>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        HttpResponse<> | HttpErrorResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Span\n\n                        \n                            \n                                Span\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contextManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StackContextManager\n\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:72\n                        \n                    \n\n            \n                \n                    context manager\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logBody\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:76\n                        \n                    \n\n            \n                \n                    Log or not body\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tracer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WebTracerProvider\n\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:68\n                        \n                    \n\n            \n                \n                    tracer\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, Optional } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpResponse,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { PlatformLocation } from '@angular/common';\nimport { Observable } from 'rxjs';\nimport * as api from '@opentelemetry/api';\nimport { Span, SpanStatusCode, DiagLogger, SpanKind } from '@opentelemetry/api';\nimport { WebTracerProvider, StackContextManager } from '@opentelemetry/sdk-trace-web';\nimport {\n  SimpleSpanProcessor,\n  ConsoleSpanExporter,\n  BatchSpanProcessor,\n  NoopSpanProcessor,\n  AlwaysOnSampler,\n  AlwaysOffSampler,\n  TraceIdRatioBasedSampler,\n  ParentBasedSampler,\n  Sampler,\n  BufferConfig\n} from '@opentelemetry/sdk-trace-base';\nimport {\n  isUrlIgnored\n} from '@opentelemetry/core';\nimport {\n  ATTR_USER_AGENT_ORIGINAL,\n  ATTR_URL_PATH,\n  ATTR_URL_QUERY,\n  ATTR_HTTP_RESPONSE_STATUS_CODE,\n  ATTR_ERROR_TYPE,\n  ATTR_SERVICE_NAME,\n  ATTR_HTTP_REQUEST_METHOD,\n  ATTR_URL_FULL,\n  ATTR_URL_SCHEME,\n  ATTR_SERVER_ADDRESS,\n  ATTR_SERVER_PORT,\n  // ATTR_HTTP_REQUEST_HEADER,\n  //SEMATTRS_ERROR_TYPE\n} from '@opentelemetry/semantic-conventions';\nimport { Resource, resourceFromAttributes } from '@opentelemetry/resources';\nimport { tap, finalize } from 'rxjs/operators';\nimport {\n  CommonCollectorConfig,\n  OpenTelemetryConfig,\n  OTEL_CONFIG,\n} from '../configuration/opentelemetry-config';\nimport infoLibrary from '../../version.json';\nimport { OTEL_EXPORTER, IExporter } from '../services/exporter/exporter.interface';\nimport { OTEL_PROPAGATOR, IPropagator } from '../services/propagator/propagator.interface';\nimport { OTEL_LOGGER, OTEL_CUSTOM_SPAN } from '../configuration/opentelemetry-config';\nimport { CustomSpan } from './custom-span.interface';\n\n/**\n * OpenTelemetryInterceptor class\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OpenTelemetryHttpInterceptor implements HttpInterceptor {\n  /**\n   * tracer\n   */\n  tracer: WebTracerProvider;\n  /**\n   * context manager\n   */\n  contextManager: StackContextManager;\n  /**\n   * Log or not body\n   */\n  logBody = false;\n\n   /**\n   * constructor\n   *\n   * @param config configuration\n   * @param exporterService service exporter injected\n   * @param propagatorService propagator injected\n   * @param logger define logger\n   * @param customSpan a customSpan interface to add attributes\n   * @param platformLocation encapsulates all calls to DOM APIs\n   */\n   constructor(\n    @Inject(OTEL_CONFIG) private config: OpenTelemetryConfig,\n    @Inject(OTEL_EXPORTER)\n    private exporterService: IExporter,\n    @Inject(OTEL_PROPAGATOR)\n    private propagatorService: IPropagator,\n    @Optional() @Inject(OTEL_LOGGER)\n    private logger: DiagLogger,\n    @Optional() @Inject(OTEL_CUSTOM_SPAN)\n    private customSpan: CustomSpan,\n    private platformLocation: PlatformLocation\n  ) {\n    this.tracer = new WebTracerProvider({\n      sampler: this.defineProbabilitySampler(this.convertStringToNumber(config.commonConfig.probabilitySampler)),\n      resource: this.loadResourceAttributes(this.config.commonConfig),\n      spanProcessors: this.insertOrNotSpanExporter()\n    });\n    this.contextManager = new StackContextManager();\n    this.tracer.register({\n      propagator: this.propagatorService.getPropagator(),\n      contextManager: this.contextManager\n    });\n    this.logBody = config.commonConfig.logBody;\n    api.diag.setLogger(logger, config.commonConfig.logLevel);\n  }\n\n    /**\n   * Overide method\n   * Interceptor from HttpInterceptor Angular\n   *\n   * @param request the current request\n   * @param next next\n   */\n    intercept(\n      request: HttpRequest,\n      next: HttpHandler\n    ): Observable> {\n      if (isUrlIgnored(request.url, this.config.ignoreUrls?.urls)) {\n        return next.handle(request);\n      }\n      this.contextManager.disable(); //FIX - reinit contextManager for each http call\n      this.contextManager.enable();\n      const span: Span = this.initSpan(request);\n      const tracedReq = this.injectContextAndHeader(request);\n      return next.handle(tracedReq).pipe(\n        tap(\n          (event: HttpResponse) => {\n            span.setAttributes(\n              {\n                [ATTR_HTTP_RESPONSE_STATUS_CODE]: event.status,\n              }\n            );\n            if (this.logBody && event.body != null) {\n              span.addEvent('response', { body: JSON.stringify(event.body) });\n            }\n            span.setStatus({\n              code: SpanStatusCode.UNSET\n            });\n            this.setCustomSpan(span, request, event);\n          },\n          (event: HttpErrorResponse) => {\n            span.setAttributes(\n              {\n                [ATTR_HTTP_RESPONSE_STATUS_CODE]: event.status,\n                [ATTR_ERROR_TYPE] : event.name,\n              }\n            );\n            span.recordException({\n              name: event.name,\n              message: event.message,\n              stack: event.error\n            });\n            span.setStatus({\n              code: SpanStatusCode.ERROR\n            });\n            this.setCustomSpan(span, request, event);\n          }\n        ),\n        finalize(() => {\n          span.end();\n          this.contextManager.disable();\n        })\n      );\n    }\n\n  /**\n   * Get current scheme, hostname and port\n   */\n  private getURL() {\n    return this.platformLocation.href;\n  }\n\n  /**\n   * Generate Resource Attributes\n   */\n  private loadResourceAttributes(\n    commonConfig: CommonCollectorConfig\n  ): Resource {\n    return resourceFromAttributes({\n      [ATTR_SERVICE_NAME]: commonConfig?.serviceName,\n      ...commonConfig?.resourceAttributes,\n    });\n  }\n  /**\n   * Initialise a span for a request intercepted\n   *\n   * @param request request\n   */\n  private initSpan(request: HttpRequest): Span {\n    const urlRequest = (request.urlWithParams.startsWith('http')) ? new URL(request.urlWithParams) : new URL(this.getURL());\n    const span = this.tracer\n      .getTracer(infoLibrary.name, infoLibrary.version)\n      .startSpan(\n        `${request.method.toUpperCase()}`,\n        {\n          attributes: {\n            [ATTR_HTTP_REQUEST_METHOD]: request.method,\n            [ATTR_SERVER_ADDRESS]: urlRequest.host,\n            [ATTR_SERVER_PORT]: urlRequest.port,\n            [ATTR_URL_FULL]: request.urlWithParams,\n            [ATTR_URL_SCHEME]: urlRequest.protocol.replace(':', ''),\n            [ATTR_URL_QUERY]: urlRequest.search,\n            [ATTR_USER_AGENT_ORIGINAL]: window.navigator.userAgent\n          },\n          kind: SpanKind.CLIENT,\n        },\n        this.contextManager.active()\n      );\n    /*eslint no-underscore-dangle: [\"error\", { \"allow\": [\"_currentContext\"] }]*/\n    this.contextManager._currentContext = api.trace.setSpan(\n      this.contextManager.active(),\n      span\n    );\n    return span;\n  }\n\n  /**\n   * Add header propagator in request and conserve original header\n   *\n   * @param request request\n   */\n  private injectContextAndHeader(\n    request: HttpRequest\n  ) {\n    const carrier = {};\n    api.propagation.inject(\n      this.contextManager.active(),\n      carrier,\n      api.defaultTextMapSetter\n    );\n    request.headers.keys().map(key => {\n      carrier[key] = request.headers.get(key);\n    });\n    return request.clone({\n      setHeaders: carrier,\n    });\n  }\n\n  /**\n   * Verify to insert or not a Span Exporter\n   */\n  private insertOrNotSpanExporter() {\n\n    if (this.exporterService.getExporter() !== undefined) {\n      return Array.of(this.insertSpanProcessorProductionMode(), this.insertConsoleSpanExporter());\n    } else {\n      return Array.of(new NoopSpanProcessor());\n    }\n  }\n\n  /**\n   * Insert in tracer the console span if config is true\n   */\n  private insertConsoleSpanExporter() {\n    if (this.config.commonConfig.console) {\n      return new SimpleSpanProcessor(new ConsoleSpanExporter());\n    }\n  }\n\n  /**\n   * Insert BatchSpanProcessor in production mode\n   * SimpleSpanProcessor otherwise\n   */\n  private insertSpanProcessorProductionMode() {\n    const bufferConfig: BufferConfig = {\n      maxExportBatchSize: this.convertStringToNumber(this.config.batchSpanProcessorConfig?.maxExportBatchSize),\n      scheduledDelayMillis: this.convertStringToNumber(this.config.batchSpanProcessorConfig?.scheduledDelayMillis),\n      exportTimeoutMillis: this.convertStringToNumber(this.config.batchSpanProcessorConfig?.exportTimeoutMillis),\n      maxQueueSize: this.convertStringToNumber(this.config.batchSpanProcessorConfig?.maxQueueSize)\n    };\n    return this.config.commonConfig.production\n        ? new BatchSpanProcessor(this.exporterService.getExporter(), bufferConfig)\n        : new SimpleSpanProcessor(this.exporterService.getExporter());\n  }\n\n  /**\n   * define the Probability Sampler\n   * By Default, it's always (or 1)\n   *\n   * @param sampleConfig the sample configuration\n   */\n  private defineProbabilitySampler(sampleConfig: number): Sampler {\n    if (sampleConfig >= 1) {\n      return new ParentBasedSampler({ root: new AlwaysOnSampler() });\n    }\n    else if (sampleConfig , response: HttpResponse | HttpErrorResponse): Span {\n    return this.customSpan != null ? this.customSpan.add(span, request, response) : span;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OpenTelemetryInterceptorModule.html":{"url":"modules/OpenTelemetryInterceptorModule.html","title":"module - OpenTelemetryInterceptorModule","body":"\n                   \n\n\n\n\n    Modules\n    OpenTelemetryInterceptorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/opentelemetry-interceptor.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(config: OpenTelemetryConfig | null | undefined, configProvider?: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/opentelemetry-interceptor/src/lib/opentelemetry-interceptor.module.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                config\n                                            \n                                                            OpenTelemetryConfig | null | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                configProvider\n                                            \n                                                        ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ModuleWithProviders\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  NgModule,\n  ModuleWithProviders,\n  Optional,\n  SkipSelf,\n  ValueProvider,\n  ClassProvider,\n  ConstructorProvider,\n  ExistingProvider,\n  FactoryProvider,\n} from '@angular/core';\nimport {\n  defineConfigProvider,\n  OpenTelemetryConfig,\n} from './configuration/opentelemetry-config';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { OpenTelemetryHttpInterceptor } from './interceptor/opentelemetry-http.interceptor';\n\n\n@NgModule({\n  declarations: [],\n  imports: [HttpClientModule],\n  exports: [],\n})\nexport class OpenTelemetryInterceptorModule {\n  constructor(\n    @Optional() @SkipSelf() parentModule?: OpenTelemetryInterceptorModule\n  ) {\n    if (parentModule) {\n      throw new Error(\n        'OpentelemetryInterceptorModule is already loaded. Import it in the AppModule only'\n      );\n    }\n  }\n\n  public static forRoot(\n    config: OpenTelemetryConfig | null | undefined,\n    configProvider?: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider\n    ): ModuleWithProviders {\n\n      //Interceptor\n      const interceptorProvider = {\n        provide: HTTP_INTERCEPTORS,\n        useClass: OpenTelemetryHttpInterceptor,\n        multi: true,\n      };\n\n      configProvider = defineConfigProvider(config,configProvider);\n\n    return {\n      ngModule: OpenTelemetryInterceptorModule,\n      providers: [\n        configProvider,\n        interceptorProvider,\n      ],\n    };\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OtelColExporterModule.html":{"url":"modules/OtelColExporterModule.html","title":"module - OtelColExporterModule","body":"\n                   \n\n\n\n\n    Modules\n    OtelColExporterModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { OtelcolExporterService } from './otelcol-exporter.service';\nimport { OTEL_EXPORTER } from '../exporter.interface';\n\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  providers: [\n    { provide: OTEL_EXPORTER, useClass: OtelcolExporterService },\n  ]\n})\nexport class OtelColExporterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OtelCollectorConfig.html":{"url":"interfaces/OtelCollectorConfig.html","title":"interface - OtelCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OtelCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n\n            \n                Description\n            \n            \n                OpenTelemetry Collector configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            concurrencyLimit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            headers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            timeoutMillis\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        concurrencyLimit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        concurrencyLimit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An optional limit on pending requests\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headers:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    custom headers\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeoutMillis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeoutMillis:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Maximum time the OTLP exporter will wait for each batch export.\nThe default value is 10000ms.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An url (Default value: http://localhost:4318/v1/trace)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ClassProvider, ConstructorProvider, ExistingProvider, FactoryProvider, InjectionToken, ValueProvider } from '@angular/core';\nimport { AttributeValue, DiagLogger, DiagLogLevel } from '@opentelemetry/api';\nimport { Instrumentation } from '@opentelemetry/instrumentation';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** resourceAttributes: Extra resource attribute like service.namespace ...*/\n  resourceAttributes?: Partial>;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:4318/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Record;\n  /**\n   * An optional limit on pending requests\n   */\n  concurrencyLimit?: string;\n  /**\n   * Maximum time the OTLP exporter will wait for each batch export.\n   * The default value is 10000ms.\n   * */\n  timeoutMillis?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n\n/**\n * Configuration for IgnoreUrlsConfig\n */\nexport interface IgnoreUrlsConfig {\n  /**\n   * URLs that partially match any regex in ignoreUrls will not be traced.\n   * In addition, URLs that are _exact matches_ of strings in ignoreUrls will\n   * also not be traced.\n   */\n  urls?: Array;\n}\n\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n  /** ignoreUrls */\n  ignoreUrls?: IgnoreUrlsConfig;\n}\n\n/** OTEL_CONFIG : Config injection */\nexport const OTEL_CONFIG = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTEL_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const OTEL_CUSTOM_SPAN = new InjectionToken('otelcol.custom-span');\n\nexport const OTEL_INSTRUMENTATION_PLUGINS = new InjectionToken('otelcol.instrumentation.plugins');\n\nexport const defineConfigProvider = (\n  config: OpenTelemetryConfig | null | undefined,\n  configProvider: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider\n): ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider => {\n  if (config) {\n    configProvider = { provide: OTEL_CONFIG, useValue: config };\n  } else {\n    if (configProvider) {\n      if (configProvider.provide !== OTEL_CONFIG) {\n        throw new Error(`Configuration error. token must be : ${OTEL_CONFIG} ,  your token value is : ${configProvider.provide}`);\n      }\n    } else {\n      throw new Error(`Configuration error. you must specify a configuration in config or configProvider`);\n    }\n  }\n  return configProvider;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OtelWebTracerModule.html":{"url":"modules/OtelWebTracerModule.html","title":"module - OtelWebTracerModule","body":"\n                   \n\n\n\n\n    Modules\n    OtelWebTracerModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/otel-webtracer.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(config: OpenTelemetryConfig | null | undefined, configProvider?: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/opentelemetry-interceptor/src/lib/otel-webtracer.module.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                config\n                                            \n                                                            OpenTelemetryConfig | null | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                configProvider\n                                            \n                                                        ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ModuleWithProviders\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  APP_INITIALIZER,\n  ClassProvider,\n  ConstructorProvider,\n  ExistingProvider,\n  FactoryProvider,\n  ModuleWithProviders,\n  NgModule,\n  Optional,\n  SkipSelf,\n  ValueProvider,\n} from '@angular/core';\nimport {\n  defineConfigProvider,\n  OpenTelemetryConfig,\n} from './configuration/opentelemetry-config';\nimport { InstrumentationService } from './services/instrumentation/instrumentation.service';\n\nexport const instruServiceLoader = (instrumentationService: InstrumentationService) => {\n  const loader = () => instrumentationService.initInstrumentation();\n  return loader;\n};\n\n\n@NgModule()\nexport class OtelWebTracerModule {\n\n  constructor(\n    @Optional() @SkipSelf() parentModule?: OtelWebTracerModule\n  ) {\n    if (parentModule) {\n      throw new Error(\n        'OtelWebTracerModule is already loaded. Import it in the AppModule only'\n      );\n    }\n  }\n\n  public static forRoot(\n    config: OpenTelemetryConfig | null | undefined,\n    configProvider?: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider\n  ): ModuleWithProviders {\n\n    configProvider = defineConfigProvider(config, configProvider);\n\n    return {\n      ngModule: OtelWebTracerModule,\n      providers: [\n        configProvider,\n        InstrumentationService,\n        {\n          provide: APP_INITIALIZER,\n          useFactory: instruServiceLoader,\n          deps: [InstrumentationService],\n          multi: true\n        }\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OtelcolExporterService.html":{"url":"injectables/OtelcolExporterService.html","title":"injectable - OtelcolExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OtelcolExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts\n        \n\n\n            \n                Description\n            \n            \n                OtelcolExporterService class\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                otelcolConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts:21\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getExporter\n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts:45\n                        \n                    \n\n\n            \n                \n                        Return a CollectorExporter with the configuration\n\n\n                        \n                            Returns :     SpanExporter\n\n                        \n                            \n                                a CollectorExporter\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        otelcolConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OTLPExporterConfigBase\n\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts:21\n                        \n                    \n\n            \n                \n                    CollectorExporterConfigBase\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, Optional } from '@angular/core';\nimport { IExporter } from '../exporter.interface';\nimport { SpanExporter } from '@opentelemetry/sdk-trace-base';\nimport {\n  OpenTelemetryConfig,\n  OTEL_CONFIG\n} from '../../../configuration/opentelemetry-config';\nimport { OTLPTraceExporter } from '@opentelemetry/exporter-trace-otlp-http';\nimport { OTLPExporterConfigBase } from '@opentelemetry/otlp-exporter-base';\n\n/**\n * OtelcolExporterService class\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OtelcolExporterService implements IExporter {\n  /**\n   * CollectorExporterConfigBase\n   */\n  private otelcolConfig: OTLPExporterConfigBase;\n\n  /**\n   * constructor\n   *\n   * @param config OpenTelemetryConfig\n   */\n  constructor(\n    @Inject(OTEL_CONFIG) config: OpenTelemetryConfig\n  ) {\n    this.otelcolConfig = {\n      url: config.otelcolConfig?.url,\n      headers: config.otelcolConfig?.headers,\n      // eslint-disable-next-line max-len\n      concurrencyLimit: Number(config.otelcolConfig?.concurrencyLimit ?? 0) \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/W3CTraceContextPropagatorModule.html":{"url":"modules/W3CTraceContextPropagatorModule.html","title":"module - W3CTraceContextPropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    W3CTraceContextPropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/w3c-trace-context-propagator/w3c-trace-context-propagator.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { W3CTraceContextPropagatorService } from './w3c-trace-context-propagator.service';\nimport { OTEL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  providers: [\n    { provide: OTEL_PROPAGATOR, useClass: W3CTraceContextPropagatorService }\n  ]\n})\nexport class W3CTraceContextPropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/W3CTraceContextPropagatorService.html":{"url":"injectables/W3CTraceContextPropagatorService.html","title":"injectable - W3CTraceContextPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  W3CTraceContextPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/w3c-trace-context-propagator/w3c-trace-context-propagator.service.ts\n        \n\n\n            \n                Description\n            \n            \n                W3CTraceContextPropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPropagator\n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/w3c-trace-context-propagator/w3c-trace-context-propagator.service.ts:18\n                        \n                    \n\n\n            \n                \n                        Return an W3CTraceContextPropagatorService\n\n\n                        \n                            Returns :     TextMapPropagator\n\n                        \n                            \n                                TextMapPropagator as W3CTraceContextPropagatorService\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { W3CTraceContextPropagator } from '@opentelemetry/core';\n\n/**\n * W3CTraceContextPropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class W3CTraceContextPropagatorService implements IPropagator {\n  /**\n   * Return an W3CTraceContextPropagatorService\n   *\n   * @return TextMapPropagator as W3CTraceContextPropagatorService\n   */\n  getPropagator(): TextMapPropagator {\n    return new W3CTraceContextPropagator();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ZipkinCollectorConfig.html":{"url":"interfaces/ZipkinCollectorConfig.html","title":"interface - ZipkinCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ZipkinCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Configuration for Zipkin\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            headers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headers:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    custom headers\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An url (Default value: http://localhost:9411/api/v2/spans)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ClassProvider, ConstructorProvider, ExistingProvider, FactoryProvider, InjectionToken, ValueProvider } from '@angular/core';\nimport { AttributeValue, DiagLogger, DiagLogLevel } from '@opentelemetry/api';\nimport { Instrumentation } from '@opentelemetry/instrumentation';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** resourceAttributes: Extra resource attribute like service.namespace ...*/\n  resourceAttributes?: Partial>;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:4318/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Record;\n  /**\n   * An optional limit on pending requests\n   */\n  concurrencyLimit?: string;\n  /**\n   * Maximum time the OTLP exporter will wait for each batch export.\n   * The default value is 10000ms.\n   * */\n  timeoutMillis?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n\n/**\n * Configuration for IgnoreUrlsConfig\n */\nexport interface IgnoreUrlsConfig {\n  /**\n   * URLs that partially match any regex in ignoreUrls will not be traced.\n   * In addition, URLs that are _exact matches_ of strings in ignoreUrls will\n   * also not be traced.\n   */\n  urls?: Array;\n}\n\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n  /** ignoreUrls */\n  ignoreUrls?: IgnoreUrlsConfig;\n}\n\n/** OTEL_CONFIG : Config injection */\nexport const OTEL_CONFIG = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTEL_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const OTEL_CUSTOM_SPAN = new InjectionToken('otelcol.custom-span');\n\nexport const OTEL_INSTRUMENTATION_PLUGINS = new InjectionToken('otelcol.instrumentation.plugins');\n\nexport const defineConfigProvider = (\n  config: OpenTelemetryConfig | null | undefined,\n  configProvider: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider\n): ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider => {\n  if (config) {\n    configProvider = { provide: OTEL_CONFIG, useValue: config };\n  } else {\n    if (configProvider) {\n      if (configProvider.provide !== OTEL_CONFIG) {\n        throw new Error(`Configuration error. token must be : ${OTEL_CONFIG} ,  your token value is : ${configProvider.provide}`);\n      }\n    } else {\n      throw new Error(`Configuration error. you must specify a configuration in config or configProvider`);\n    }\n  }\n  return configProvider;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ZipkinExporterModule.html":{"url":"modules/ZipkinExporterModule.html","title":"module - ZipkinExporterModule","body":"\n                   \n\n\n\n\n    Modules\n    ZipkinExporterModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { OTEL_EXPORTER } from '../exporter.interface';\nimport { ZipkinExporterService } from './zipkin-exporter.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  providers: [\n    { provide: OTEL_EXPORTER, useClass: ZipkinExporterService }\n  ]\n})\nexport class ZipkinExporterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ZipkinExporterService.html":{"url":"injectables/ZipkinExporterService.html","title":"injectable - ZipkinExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ZipkinExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.service.ts\n        \n\n\n            \n                Description\n            \n            \n                ZipkinExporterService class\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                zipkinConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.service.ts:17\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getExporter\n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.service.ts:36\n                        \n                    \n\n\n            \n                \n                        Return a ZipkinExporter configured with zipkinConfig field\n\n\n                        \n                            Returns :     SpanExporter\n\n                        \n                            \n                                SpanExporter\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        zipkinConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ExporterConfig\n\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.service.ts:17\n                        \n                    \n\n            \n                \n                    zipkinConfig\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IExporter } from '../exporter.interface';\nimport { SpanExporter } from '@opentelemetry/sdk-trace-base';\nimport { OpenTelemetryConfig, OTEL_CONFIG } from '../../../configuration/opentelemetry-config';\nimport { ZipkinExporter, ExporterConfig } from '@opentelemetry/exporter-zipkin';\n\n/**\n * ZipkinExporterService class\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ZipkinExporterService implements IExporter {\n  /**\n   * zipkinConfig\n   */\n  private zipkinConfig: ExporterConfig;\n\n  /**\n   * constructor\n   *\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OTEL_CONFIG) config: OpenTelemetryConfig) {\n    this.zipkinConfig = {\n      url: config.zipkinConfig?.url,\n      headers: config.zipkinConfig?.headers\n    };\n  }\n\n  /**\n   * Return a ZipkinExporter configured with zipkinConfig field\n   *\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter {\n    return new ZipkinExporter(this.zipkinConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n1.9.0-1 (2025-04-18)\nFeatures\n\nupdate to otel 2.0 (#219) (3b4c792)\n\n1.9.0 (2024-09-18)\n1.8.0-3 (2024-05-07)\n1.8.0-2 (2024-04-07)\nBug Fixes\n\ndependencies lib (9783c0d)\n\n1.8.0-1 (2024-04-07)\n1.8.0 (2024-03-12)\n1.7.0-1 (2024-01-20)\n1.7.0 (2023-11-08)\n1.6.0-2 (2023-10-17)\n1.6.0-1 (2023-09-17)\nBug Fixes\n\npeerdependecies (#179) (6d94094)\n\n1.6.0 (2023-09-17)\n1.4.1-5 (2023-08-15)\nBug Fixes\n\nci publish action (ac3d9ab)\nci publish action (510be78)\n\n1.4.1-5 (2023-08-15)\nBug Fixes\n\nci publish action (ac3d9ab)\nci publish action (510be78)\n\n1.4.1-5 (2023-08-15)\nBug Fixes\n\nci publish action (ac3d9ab)\nci publish action (510be78)\n\n1.4.1-4 (2023-07-20)\n1.4.1-3 (2023-06-12)\n1.4.1-2 (2023-05-23)\n1.4.1-1 (2023-05-05)\nBug Fixes\n\nhttp span name semantic (#154) (de50104)\n\n1.4.1 (2023-03-28)\n1.4.0-1 (2023-03-18)\nFeatures\n\n#156: add resource attributes configuration (#157) (64ab01a), closes #156\n\nBug Fixes\n\n#151: add ignoreUrls configuration (26a2e27), closes #151\n\n1.4.0 (2023-02-10)\n1.3.0-1 (2022-12-31)\nBug Fixes\n\nbad url in readme (640d901)\ndeprecated package (8442349)\nreadme (24f4d6f)\nremove NoopTextMapPropagator (7f3aba9)\n\n1.3.0 (2022-12-18)\n1.2.0-1 (2022-09-25)\nBug Fixes\n\npeerDependencies (5a29d29)\n\n1.2.0 (2022-09-02)\nBug Fixes\n\nupdate api (7023a31)\n\n1.1.0-2 (2022-07-19)\nFeatures\n\nadd config to ignore urls in interceptor (6763f97)\n\nBug Fixes\n\nimport isUrlIgnored (c36e295)\n\n1.1.0-1 (2022-06-22)\nBug Fixes\n\nremove useless os dependence (97579f0)\n\n1.1.0 (2022-05-27)\nFeatures\n\nremove instrumentation plugin and rename token (#106) (59ac6ca)\n\nBug Fixes\n\npackage-lock.json (e9dc64b)\n\n1.0.1 (2021-12-03)\nFeatures\n\nadd config provider for external config (7bbaf2e)\nadd example in instrumentation (e29c839)\n\n1.0.0 (2021-11-09)\n0.25.0-2 (2021-10-24)\nBug Fixes\n\nreview aws propagator integration (4fcec62)\ntest (3ae307e)\n\n0.25.0-1 (2021-10-01)\nBug Fixes\n\nissue#80: old reference package (ee08e85), closes issue#80\n\n0.25.0 (2021-09-17)\nFeatures\n\nupdate collector and add new default http port collector (4318) (5a7c375)\n\nBug Fixes\n\nadd test for instrumentation (23e35d1)\npeer dependencies version number (41c8947)\nreturn to 0.24.0 in document-load to release (1f22380)\n\n0.24.0-1 (2021-08-04)\nBug Fixes\n\nbad version on peerDependencies (c2b4209)\n\n0.24.0 (2021-08-01)\n0.23.0 (2021-07-08)\n0.22.0 (2021-06-17)\nBug Fixes\n\nreadme (a6307f2)\n\n0.21.0 (2021-06-11)\n0.20.0 (2021-06-07)\nFeatures\n\nadd concurencyLimit (40f33cc)\n\nBug Fixes\n\nspan.kind to client value and status.code to unset (#51) (b3e15af)\nissue#41: add custom dynamic span attributes (1c7c0c0), closes issue#41\n\n0.19.0 (2021-05-03)\nFeatures\n\ncomponent with instrumentation (#34) (caab7a9)\nissue#38: add batchSpanProcessorConfig (a73e382), closes issue#38\nissue#38: add batchSpanProcessorConfig (dbaec60), closes issue#38\n\nBug Fixes\n\nissue#4: link error on documentation (2965c35), closes issue#4\nissue#42: restart context for each http call (c9f8667), closes issue#42\napi breaking change (don't forget in changelog...) (18d04fd)\ncypress test error on span name (68d7aee)\ngithub action rename branch main (66ca86c)\nuse protocol and method for span name (1a56037)\n\n0.18.2 (2021-03-30)\nFeatures\n\nupdate to 0.18.2 (d8b9f3c)\n\n0.18.0-1 (2021-03-26)\n0.18.0 (2021-03-10)\nFeatures\n\nupdate to version 0.18.0 (ead3251)\n\nBug Fixes\n\nerror package-lock (c53447a)\n\n0.17.0 (2021-02-21)\nBug Fixes\n\nreadme error opentelemtery (0615f02)\n\n0.16.0 (2021-02-02)\nFeatures\n\nupdate to 0.16.0 opentelemetry-js (f0a18ea)\n\n0.15.0 (2021-01-28)\n0.14.0 (2020-12-18)\nFeatures\n\nadd log body configurable (332baf7)\nupdate angular 10.2 (efa9083)\nupdate opentelemetry-js 0.14.0 (dcde5bb)\n\n0.13.0-1 (2020-12-10)\nBug Fixes\n\nerror peerDependencies, umdModuleIds and doc (e6073bf)\n\n0.13.0 (2020-12-10)\nFeatures\n\nadd B3Propagator single or multi (c71ba73)\nadd B3Propagator single or multi (de1f141)\nupdate to 0.13.0. Add Zipkin Exporter (f206c5e)\n\nBug Fixes\n\nuseless parameter (bca88a0)\n\n0.11.0-3 (2020-09-16)\nFeatures\n\nreview injection for exporter and propagator (8faa4c9)\n\nBug Fixes\n\ndependence (b112065)\nredo update angular (#21) (6e5c19a)\n\n0.11.0-2 (2020-09-15)\nFeatures\n\nAdd otelcol configuration and Logging (#19) (042898e)\n\n0.11.0-1 (2020-09-15)\nFeatures\n\nadd user-agent to otelcol (06cb6de)\n\nBug Fixes\n\nreset to previous version (0a2ccc5)\nreview code (8b1b7b5)\nreview code again (7bab017)\nuse partial and record (4bddf3a)\nversion to use in interceptor (b6dcaf7)\n\n0.11.0 (2020-09-11)\nFeatures\n\nupdate propagator-jaeger version to 0.10.0 (1a1299b)\nupgrate to 0.11.0 otelcol (09dd1bb)\n\nBug Fixes\n\nts-jest configuration (4d9a061)\n\n0.10.2-3 (2020-09-02)\nFeatures\n\nadd error in interceptor (#16) (de09c4d)\n\nBug Fixes\n\ndoc (7f7c66a)\nmerge (ff373c0)\n\n0.10.2-2 (2020-08-20)\nBug Fixes\n\nprobability (62e0d77)\n\n0.10.2-1 (2020-08-16)\n0.10.2 (2020-08-09)\nFeatures\n\nupgrade to 0.10.2 otelcol (351ce3e)\n\nBug Fixes\n\nangular 10 ngcc trouble (4d886fb)\n\n0.10.1 (2020-07-28)\nFeatures\n\nupdate angular (bfc26ae)\nupdate opentelemtry 0.10.1 (94e0b44)\n\nBug Fixes\n\notlp collector version 0.4.0 (#9) (80d2ada)\nrelease (d2ecbb8)\n\n0.9.0 (2020-06-28)\nFeatures\n\nadd cypress test e2e (7b4c031)\nadd new release 0.9.0 (#6) (0319eee)\n\n0.8.3 (2020-06-28)\nFeatures\n\nadd cypress test e2e (7b4c031)\nadd new release 0.9.0 (#6) (0319eee)\n\n0.8.3-2 (2020-06-08)\nBug Fixes\n\nchangelog (8d45a2c)\nproblem with context and trace parent id (#4) (f195a50)\n\n0.8.3-1 (2020-06-05)\nFeatures\n\nadd jaeger propagator (fad044a)\nadd JaegerPropagator to composite (8e268a9)\n\nBug Fixes\n\ncontext traceId problem (#3) (c6368c9)\n\n0.8.3 (2020-05-30)\nFeatures\n\nadd docs (bd69598)\nreview before new release version (1229a9d)\n\n0.8.2 (2020-05-30)\nFeatures\n\nadd composite (7a5b07e)\nadd composite header (83fc1f3)\nadd example ok (e5eb09e)\nadd sampling configuration (ad03334)\nangular downgrade in progress (92330f9)\nen cours (0885b40)\nok (dd7a0e5)\nok (3516488)\nok (b63afc1)\nok (b679883)\nOK it works (ec28651)\ntest (0f35b5c)\n\nBug Fixes\n\ncan be use in angular 9/node 12/Typescript 3.6.0 (563071d)\ndel doc dir (96da55f)\ndelete unused file (dda5d54)\ndelete unused file (a1746bf)\ndoc and code (4a000b9)\nno subject with JSONP and XSRF (95167b9)\nno subject with JSONP and XSRF (47aba25)\nok (371886a)\npublish (613c16d)\npublish (47c249b)\npublish (a517094)\npublish and readme (412d2fd)\nsome typo (80f7bf8)\nsome typo (735b05d)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            B3PropagatorConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            BatchSpanProcessorConfig\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            CommonCollectorConfig\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            IgnoreUrlsConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            JaegerPropagatorConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            OpenTelemetryConfig\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            OtelCollectorConfig\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            ZipkinCollectorConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            variable\n            defineConfigProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            variable\n            OTEL_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            variable\n            OTEL_CUSTOM_SPAN\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            variable\n            OTEL_INSTRUMENTATION_PLUGINS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            variable\n            OTEL_LOGGER\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/interceptor/custom-span.interface.ts\n            \n            interface\n            CustomSpan\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts\n            \n            interceptor\n            OpenTelemetryHttpInterceptor\n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/otel-webtracer.module.ts\n            \n            variable\n            instruServiceLoader\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.service.ts\n            \n            injectable\n            ConsoleSpanExporterService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n            \n            interface\n            IExporter\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n            \n            variable\n            OTEL_EXPORTER\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/noop-exporter/noop-span-exporter.service.ts\n            \n            injectable\n            NoopSpanExporterService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts\n            \n            injectable\n            OtelcolExporterService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.service.ts\n            \n            injectable\n            ZipkinExporterService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts\n            \n            injectable\n            InstrumentationService\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/aws-xray-propagator/aws-xray-propagator.service.ts\n            \n            injectable\n            AwsXrayPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts\n            \n            injectable\n            B3PropagatorService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts\n            \n            injectable\n            CompositePropagatorService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts\n            \n            injectable\n            JaegerHttpTracePropagatorService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.service.ts\n            \n            injectable\n            NoopTextMapPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n            \n            interface\n            IPropagator\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n            \n            variable\n            OTEL_PROPAGATOR\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/w3c-trace-context-propagator/w3c-trace-context-propagator.service.ts\n            \n            injectable\n            W3CTraceContextPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-devkit/core : ^14.2.12\n        \n            @angular/animations : ^14.3.0\n        \n            @angular/cdk : ^14.2.7\n        \n            @angular/common : ^14.3.0\n        \n            @angular/compiler : ^14.3.0\n        \n            @angular/core : ^14.3.0\n        \n            @angular/forms : ^14.3.0\n        \n            @angular/material : ^14.2.7\n        \n            @angular/platform-browser : ^14.3.0\n        \n            @angular/platform-browser-dynamic : ^14.3.0\n        \n            @angular/router : ^14.3.0\n        \n            ngx-highlight-js : ^13.0.0\n        \n            ngx-logger : 5.0.12\n        \n            rxjs : ^6.6.3\n        \n            tslib : ^2.6.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nOpenTelemetry Angular Interceptor\n@jufab/opentelemetry-angular-interceptor is an Angular Library to deploy OpenTelemetry in your Angular application\nThis library uses opentelemetry-js package\nUse Angular >= 13.0.0\nMore info : https://jufab.github.io/opentelemetry-angular-interceptor/\n\n\nTable of contents\n\nOpenTelemetry Angular Interceptor\nTable of contents\nGetting started\nContent\nInstallation\nConfiguration\nExample global Configuration\nCommon Configuration\nBatchSpanProcessor Configuration\nOpenTelemetry-collector Configuration\nJaeger Propagator Configuration\nZipkin Exporter Configuration\nB3 Propagator Configuration\nIgnore URL Configuration\nExternal Configuration\n\n\nAngular module\nCommons Module\nExporter module\nPropagator module\n\n\nInterceptor Module\nInstrumentation Module\nInterceptor Module And Instrumentation Module\nInjection token\n\n\n(Optional) Logging in OtelColExporterModule\nNGXLogger\n\n\n(Optional) Add span attributes during interception\n\n\nHow it works\nExample\nRun\nInterceptor\nInstrumentation\n\n\n[Optional] Result in OpenTelemetry-collector\n\n\nTroubleshoot\nAngular 10 Warning\nOther\n\n\n\n\n\nGetting started\nContent\nThis library offers two possibilities to use it in Angular App : \n\nInterceptor : catch every external call with the HttpClient from angular\nInstrumentation : use instrumentation from opentelemetry-js with web plugins (You need to install and configure it) like : \n@opentelemetry/instrumentation-document-load\n@opentelemetry/instrumentation-fetch\n@opentelemetry/instrumentation-xml-http-request\n...\n\n\n\nInstallation\nWith npm :\nExample :npm i @jufab/opentelemetry-angular-interceptorConfiguration\nUse the \"OpentelemetryConfig\" interface to configure the Tracer\nExample :export interface OpenTelemetryConfig {\n  commonConfig: CommonCollectorConfig;\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  otelcolConfig?: OtelCollectorConfig;\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  zipkinConfig?: ZipkinCollectorConfig;\n  b3PropagatorConfig?: B3PropagatorConfig;\n  ignoreUrls?: IgnoreUrlsConfig;\n}Example global Configuration\nFrom the interceptor-example\nExample :opentelemetryConfig: {\n    commonConfig: {\n      console: true, //(boolean) Display trace on console\n      production: false, //(boolean) Send trace with BatchSpanProcessor (true) or SimpleSpanProcessor (false)\n      logBody: true, //(boolean) true add body in a log, nothing otherwise\n      serviceName: 'interceptor-example', //Service name send in trace\n      resourceAttributes: { // extra resource attributes like service.namespace\n        [ATTR_SERVICE_VERSION]: 'version 1.0.0', // Service version\n      },\n      probabilitySampler: '0.7', //Samples a configurable percentage of traces, string value between '0' to '1'\n      logLevel:DiagLogLevel.ALL //(Enum) DiagLogLevel is an Enum from @opentelemetry/api\n    },\n    batchSpanProcessorConfig: { //Only if production = true in commonConfig\n      maxQueueSize: '2048', // The maximum queue size. After the size is reached spans are dropped.\n      maxExportBatchSize: '512', // The maximum batch size of every export. It must be smaller or equal to maxQueueSize.\n      scheduledDelayMillis: '5000', // The interval between two consecutive exports\n      exportTimeoutMillis: '30000', // How long the export can run before it is cancelled\n    },\n    otelcolConfig: {\n      url: 'http://localhost:4318/v1/traces', //URL of opentelemetry collector\n    },\n    jaegerPropagatorConfig: {\n      customHeader: 'custom-header',\n    }\n  }From the instrumentation-example\nExample :backendApp.get('/api/config', (req,res) => {\n  return res.status(200).send({\n    commonConfig: {\n      console: true, // Display trace on console\n      production: true, // Send Trace with BatchSpanProcessor (true) or SimpleSpanProcessor (false)\n      serviceName: 'instrumentation-example', // Service name send in trace\n      resourceAttributes: { // extra resource attributes like service.namespace\n        'service.namespace': 'namespace'\n      },\n      probabilitySampler: '0.75', // 75% sampling\n      logLevel: 99 //ALL Log, DiagLogLevel is an Enum from @opentelemetry/api\n    },\n    otelcolConfig: {\n      url: 'http://localhost:4318/v1/traces', // URL of opentelemetry collector\n    }\n  });\n})\nCommon Configuration\n\nconsole: (boolean) Display trace on console if true\nproduction: (boolean)Send trace via BatchSpanProcessor (Async) or SimpleSpanProcessor (Sync) : It's recommend to use BatchSpanProcessor on Production.\nserviceName: (string) Service name in your trace\nresourceAttributes: list of extra resource attributes\nprobabilitySampler: (string) Samples a configurable percentage of traces, value between 0 to 1\nlogBody: (boolean) true add body in a log, nothing otherwise\nlogLevel: (DiagLogLevel) log level\n\nBatchSpanProcessor Configuration\nThis configuration applies if production is true in commonConfig.\n\nmaxQueueSize: (string) The maximum queue size. After the size is reached spans are dropped.\nmaxExportBatchSize: (string) The maximum batch size of every export. It must be smaller or equal to maxQueueSize.\nscheduledDelayMillis: (string) The interval between two consecutive exports\nexportTimeoutMillis: (string) How long the export can run before it is cancelled\n\nOpenTelemetry-collector Configuration\n\nurl: (string) url of opentelemetry collector (default : http://localhost:4318/v1/traces)\nheaders: list of custom header (more info: https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/exporter-trace-otlp-http)\nconcurrencyLimit (string) : An optional limit on pending requests (more info : https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/exporter-trace-otlp-http)\ntimeoutMillis (string): Maximum time the OTLP exporter will wait for each batch export. The default value is 10000ms (more info : https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/exporter-trace-otlp-http)\n\nJaeger Propagator Configuration\n\ncustomHeader: (string) custom header (more info : https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-propagator-jaeger)\n\nZipkin Exporter Configuration\n\nurl: (string) url of zipkin collector (default : http://localhost:9411/api/v2/spans)\nheaders: list of custom header (more info : https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-exporter-zipkin)\n\nB3 Propagator Configuration\n\nmultiHeader : (string) Single or Multi Header for b3propagator (default: multi). Value : 'O' (single), '1' (multi) (more info: https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-propagator-b3)\n\nIgnore URL Configuration\n\nurls : (Array) URLs that partially match any regex in ignoreUrls will not be traced. In addition, URLs that are exact matches of strings in ignoreUrls will also not be traced\n\nExternal Configuration\nInstrumentation example project have an external configuration to show how you can do it.\nAngular module\nYou need 3 modules to add to your application.\n\nExporter Module : to define type and export of traces.\nPropagator Module : to define propagation in your HTTP header.\nLast Module, 2 choices :  \nOpenTelemetryInterceptorModule : to activate interceptor in all your http call.\nOtelWebTracerModule : to activate instrumentation (you need a component to activate it, see Component otel-instrumentation).\n\n\n\nCommons Module\nYou add this modules in your application module (generally app.module.ts)\nExporter module\nThere is 4 exporters:\n\nNoopSpanExporterModule : This a fake exporter\nOtelColExporterModule : OpenTelemetry exporter (more info : https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/opentelemetry-exporter-trace-otlp-http)\nConsoleSpanExporterModule : Console Exporter\nZipkinExporterModule : Zipkin Exporter (more info : https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-exporter-zipkin)\n\nPropagator module\nthere is 6 propagators (more info about propagator: https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-core)\n\nNoopHttpTextPropagatorModule : This is a fake propagator\nB3PropagatorModule : Use B3 propagator\nW3CTraceContextPropagatorModule : Use W3CTraceContext propagator\nJaegerHttpTracePropagatorModule : Use JaegerHttpPropagator (more info about this one: https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-propagator-jaeger)\nAwsXrayPropagatorModule : Use AWS X-Ray propagator\nCompositePropagatorModule : use all of the propagator\n\nInterceptor Module\nJust add OpenTelemetryInterceptorModule to insert Interceptor\nExample :import { NgModule } from '@angular/core';\n...\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { OpenTelemetryInterceptorModule, OtelColExporterModule, CompositePropagatorModule } from '@jufab/opentelemetry-angular-interceptor';\nimport { environment } from '../environments/environment';\n...\n\n@NgModule({\n  declarations: [AppComponent, ...],\n  imports: [\n    ...\n    HttpClientModule,\n    //Insert module OpenTelemetryInterceptorModule with configuration, HttpClientModule is used for interceptor\n    OpenTelemetryInterceptorModule.forRoot(environment.opentelemetryConfig),\n    //Insert OtelCol exporter module\n    OtelColExporterModule,\n    //Insert propagator module\n    CompositePropagatorModule,\n    ...\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}Instrumentation Module\nDeclare this OtelWebTracerModule to configure instrumentation.\nYou need to provide Web instrumentation on the OTEL_INSTRUMENTATION_PLUGINS token in providers section of NgModule\nExample in instrumentation-example project\nExample :...\nimport { OtelColExporterModule, CompositePropagatorModule, OtelWebTracerModule } from 'projects/opentelemetry-interceptor/src/public-api';\n...\n\n@NgModule({\n  declarations: [AppComponent, ...],\n  imports: [\n    ...\n    // OtelCol Exporter Module\n    OtelColExporterModule,\n    // Composite Propagator Module\n    CompositePropagatorModule,\n    // OtelWebTracerModule to configure instrumentation component.\n    OtelWebTracerModule.forRoot(environment.openTelemetryConfig),\n    ...\n  ],\n  providers: [\n    {provide: OTEL_INSTRUMENTATION_PLUGINS, useValue: [new XMLHttpRequestInstrumentation()]}\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\nThis module uses APP_INITIALIZER token to load instrumentation (multi:true). No component needs now\nInterceptor Module And Instrumentation Module\nDon't use them at the same time : you're going to have the same trace twice.\nInjection token\nThis library exposes injection token.\nYou can use them to override or customize. \n\nOTEL_EXPORTER : token to inject an implementation of IExporter\nOTEL_PROPAGATOR : token to inject an implementation of IPropagator\nOTEL_CONFIG : token to inject an OpenTelemetryConfig\nOTEL_INSTRUMENTATION_PLUGINS : token to inject an InstrumentationOption array\nOTEL_LOGGER : more info in (Optional) Logging in OtelColExporterModule\nOTEL_CUSTOM_SPAN : more infor in (Optional) Add span attributes during interception\n\n(Optional) Logging in OtelColExporterModule\nYou can add a logger to the OtelColExporterModule with the OTEL_LOGGER token.\nYou can use a custom logger which implements the DiagLogger in @opentelemetry/api.\nOr, you can use an existing logger which implements the same functions (error, warn, info, debug) like ngx-logger.\nNGXLogger\nYou can use ngx-logger.\nIn your appModule, insert LoggerModule and configure it\nExample :@NgModule({\n  ...\n  imports: [\n    LoggerModule.forRoot(environment.loggerConfig),\n  ]\n  ...And use OTEL_LOGGER token to inject NGXLogger\nExample :@NgModule({\n  ...\n  providers: [\n    ...\n    { provide: OTEL_LOGGER, useExisting: NGXLogger }\n    ...\n  ]Don't forget to set \"logLevel\" in Common Configuration (Level must be the same between NGXLogger and common configuration)\n\nYou can see an example in the interceptor-example.\n\n(Optional) Add span attributes during interception\nThis option is only available for Interceptor Module\nImplement a CustomSpan and the method add(span: Span, request: HttpRequest, response: HttpResponse | HttpErrorResponse): Span\n\nspan : Current span, you can set or get attributes\nrequest : Current request in interceptor\nresponse : Current response in interceptor\n\nImplement CustomSpan class like : \nExample :class CustomSpanImpl implements CustomSpan {\n  add(span: Span, request: HttpRequest, response: HttpResponse | HttpErrorResponse): Span {\n    span.setAttribute('mycustom.key', request.params + \";\" + response.status);\n    return span;\n  }\n}Inject it in you App module with OTEL_CUSTOM_SPAN :\nExample :@NgModule({\n  ...\n  providers: [\n    ...\n    { provide: OTEL_CUSTOM_SPAN, useClass: CustomSpanImpl }\n    ...\n  ]\nYou can see an example in the interceptor-example.\n\nHow it works\nThis library is based on HttpClientModule and the HTTP_INTERCEPTORS\nOpenTelemetryInterceptor implement an HttpInterceptor and the intercept method.\nThis implementation initialise a WebTracerProvider, create a Span and add header propagation in the current call.\n\nThe response body is adding by an event in span.\n\nExample\nThis project has two example Angular Application:\n\nprojects/interceptor-example\nprojects/instrumentation-example\n\nYou can see how configure and insert all modules.\nYou can althought test opentelemetry-angular-interceptor with this two applications.\nRun\nInterceptor\nTo start this Interceptor example application, run command :\nExample :npm run start:complete-interceptor-exampleand open the application at http://localhost:4200\nInstrumentation\nTo start this Instrumentation example application, run command :\nExample :npm run start:complete-instrumentation-exampleand open the application at http://localhost:4200\n[Optional] Result in OpenTelemetry-collector\nIf you want to see the result in a collector *, there's a docker-compose available in this project.\nYou can start it with this command :\nExample :docker-compose -f collector/docker-compose.yaml up -dGo to the jaeger application (http://localhost:16686) to see result.\nMore info about the collector here : https://github.com/open-telemetry/opentelemetry-collector\n\n* without an Agent or a Collector you can see an error in your browser about sending a \"trace\".\n\nTroubleshoot\nAngular 10 Warning\nExample :WARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/web'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/core'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/tracing'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/api'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/exporter-collector/build/src/platform/browser'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependenciesAdd to your angular.json\nExample :\"options\": {\n  \"allowedCommonJsDependencies\": [\n    \"@opentelemetry/api\",\n    \"@opentelemetry/exporter-collector\",\n    \"@opentelemetry/exporter-zipkin\",\n    \"@opentelemetry/tracing\",\n    \"@opentelemetry/web\",\n    \"@opentelemetry/core\",\n    \"@opentelemetry/propagator-jaeger\",\n    \"@opentelemetry/propagator-b3\",\n    \"@opentelemetry/instrumentation\",\n    \"@opentelemetry/instrumentation-xml-http-request\",\n    \"@opentelemetry/instrumentation-document-load\",\n    \"@opentelemetry/instrumentation-fetch\",\n    \"@opentelemetry/context-zone-peer-dep\"\n  ],Other\n\n\n\nError\nFix\n\n\n\n\nerror TS2694: Namespace 'NodeJS' has no exported member 'Timeout'.\nNeed dependence @type/node >= 12.0.2\n\n\nerror TS1086: An accessor cannot be declared in an ambient context.\nNeed dependence typescript >= 3.6.0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nExample :                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and\n(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and\n(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and\n(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.\nYou may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\n\n\n   END OF TERMS AND CONDITIONS\n   APPENDIX: How to apply the Apache License to your work.\nExample :  To apply the Apache License to your work, attach the following\n  boilerplate notice, with the fields enclosed by brackets \"[]\"\n  replaced with your own identifying information. (Don't include\n  the brackets!)  The text should be enclosed in the appropriate\n  comment syntax for the file format. We also recommend that a\n  file or class name and description of purpose be included on the\n  same \"printed page\" as the copyright notice for easier\n  identification within third-party archives.   Copyright [yyyy] [name of copyright owner]\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\nExample :   http://www.apache.org/licenses/LICENSE-2.0   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AwsXrayPropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        B3PropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompositePropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConsoleSpanExporterModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JaegerHttpTracePropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NoopSpanExporterModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NoopTextMapPropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OpenTelemetryInterceptorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OtelColExporterModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OtelWebTracerModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        W3CTraceContextPropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ZipkinExporterModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        12 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.9.0-1\n        \n            Homepage : https://github.com/jufab/opentelemetry-angular-interceptor\n        \n            Author : Julien Fabre\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTask for opentelemetry-angular-interceptor\nTodo in project...\nTodo\n\n Add more configuration for OpenTelemetry-collector : See here  \n Jaeger  \n Add Jaeger exporter (when it's available)  \n Add more configuration for Jaeger : here\n\n\n Prepare baggage here\n\nIn Progress\nDone ✓\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            defineConfigProvider   (projects/.../opentelemetry-config.ts)\n                        \n                        \n                            instruServiceLoader   (projects/.../otel-webtracer.module.ts)\n                        \n                        \n                            OTEL_CONFIG   (projects/.../opentelemetry-config.ts)\n                        \n                        \n                            OTEL_CUSTOM_SPAN   (projects/.../opentelemetry-config.ts)\n                        \n                        \n                            OTEL_EXPORTER   (projects/.../exporter.interface.ts)\n                        \n                        \n                            OTEL_INSTRUMENTATION_PLUGINS   (projects/.../opentelemetry-config.ts)\n                        \n                        \n                            OTEL_LOGGER   (projects/.../opentelemetry-config.ts)\n                        \n                        \n                            OTEL_PROPAGATOR   (projects/.../propagator.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defineConfigProvider\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  config: OpenTelemetryConfig | null | undefined,\n  configProvider: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider\n): ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider => {\n  if (config) {\n    configProvider = { provide: OTEL_CONFIG, useValue: config };\n  } else {\n    if (configProvider) {\n      if (configProvider.provide !== OTEL_CONFIG) {\n        throw new Error(`Configuration error. token must be : ${OTEL_CONFIG} ,  your token value is : ${configProvider.provide}`);\n      }\n    } else {\n      throw new Error(`Configuration error. you must specify a configuration in config or configProvider`);\n    }\n  }\n  return configProvider;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OTEL_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('opentelemetry.config')\n                    \n                \n\n            \n                \n                    OTEL_CONFIG : Config injection\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OTEL_CUSTOM_SPAN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('otelcol.custom-span')\n                    \n                \n\n            \n                \n                    custom span\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OTEL_INSTRUMENTATION_PLUGINS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('otelcol.instrumentation.plugins')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OTEL_LOGGER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('otelcol.logger')\n                    \n                \n\n            \n                \n                    Logger : injection for a logger compatible\n\n                \n            \n\n        \n    \n\n    projects/opentelemetry-interceptor/src/lib/otel-webtracer.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        instruServiceLoader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (instrumentationService: InstrumentationService) => {\n  const loader = () => instrumentationService.initInstrumentation();\n  return loader;\n}\n                    \n                \n\n\n        \n    \n\n    projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OTEL_EXPORTER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('otelcol.exporter')\n                    \n                \n\n            \n                \n                    injection for a Exporter\n\n                \n            \n\n        \n    \n\n    projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OTEL_PROPAGATOR\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('otelcol.propagator')\n                    \n                \n\n            \n                \n                    injection for a propagator\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
