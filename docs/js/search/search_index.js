var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/modules/B3PropagatorModule.html",[0,1.216,1,1.886]],["body/modules/B3PropagatorModule.html",[1,3.04,2,1.457,3,0.387,4,0.387,5,0.285,6,0.335,7,3.057,8,2.449,9,2.449,10,0.473,11,0.032,12,2.128,13,0.555,14,2.522,15,1.864,16,3.04,17,2.719,18,2.522,19,2.128,20,1.714,21,1.58,22,1.58,23,1.714,24,1.58,25,1.714,26,1.864,27,0.387,28,0.497,29,0.02,30,0.025,31,0.02]],["title/injectables/B3PropagatorService.html",[16,1.886,32,0.749]],["body/injectables/B3PropagatorService.html",[3,0.355,4,0.355,5,0.262,6,0.394,7,3.596,8,2.881,10,0.459,11,0.032,13,0.51,16,3.352,27,0.355,28,0.456,29,0.018,30,0.023,31,0.018,32,1.143,33,1.711,34,1.866,35,0.892,36,0.751,37,1.461,38,2.781,39,1.052,40,3.222,41,1.7,42,6.074,43,1.14,44,2.875,45,2.016,46,2.042,47,1.574,48,2.249,49,1.711,50,1.711,51,1.45,52,0.751]],["title/interfaces/CommonCollectorConfig.html",[53,0.882,54,1.565]],["body/interfaces/CommonCollectorConfig.html",[3,0.259,4,0.259,5,0.191,6,0.224,10,0.224,11,0.032,13,0.372,27,0.491,29,0.013,30,0.019,31,0.013,35,0.651,36,0.548,52,0.548,53,1.378,54,2.245,55,1.248,56,1.489,57,1.489,58,2.114,59,1.899,60,1.931,61,2.084,62,2.817,63,2.934,64,2.934,65,2.934,66,3.181,67,1.899,68,1.493,69,3.181,70,1.931,71,2.584,72,2.584,73,1.385,74,1.931,75,1.82,76,1.489,77,1.248,78,1.931,79,2.114,80,1.148,81,1.489,82,1.64,83,2.327,84,2.114,85,1.64,86,2.58,87,1.361,88,1.148,89,1.489,90,1.385,91,2.327,92,2.114,93,1.501,94,1.148,95,1.361,96,1.64,97,1.64]],["title/modules/CompositePropagatorModule.html",[0,1.216,98,2.094]],["body/modules/CompositePropagatorModule.html",[1,2.228,2,1.326,3,0.352,4,0.352,5,0.259,6,0.305,8,2.228,9,2.228,10,0.492,11,0.032,12,2.004,13,0.505,14,2.376,15,1.695,17,2.473,18,2.376,19,2.004,20,2.338,21,1.437,22,1.437,23,1.559,24,1.437,25,1.559,26,1.695,27,0.352,28,0.452,29,0.018,30,0.023,31,0.018,68,1.694,98,3.179,99,2.78,100,2.78,101,3.179,102,3.192,103,5.422,104,2.228,105,2.004,106,2.228,107,2.228,108,1.695,109,2.228]],["title/injectables/CompositePropagatorService.html",[32,0.749,101,2.094]],["body/injectables/CompositePropagatorService.html",[3,0.284,4,0.284,5,0.209,6,0.389,8,1.796,10,0.466,11,0.032,13,0.407,16,3.325,17,1.994,18,2.358,20,1.989,27,0.284,28,0.364,29,0.015,30,0.02,31,0.015,32,0.985,33,1.367,34,1.491,35,0.713,36,0.6,37,1.258,38,2.543,39,1.161,41,1.554,43,0.911,44,2.668,45,1.736,46,1.632,47,1.257,48,1.796,49,1.367,50,1.367,51,1.159,52,0.6,61,1.159,67,1.159,68,1.554,73,1.069,99,3.547,100,3.547,101,3.402,105,1.736,106,1.796,108,1.367,109,1.796,110,3.065,111,3.078,112,3.408,113,3.408,114,2.242,115,1.796,116,3.078,117,5.697,118,1.994,119,3.078,120,3.155,121,3.078,122,3.078,123,2.574,124,3.078,125,3.078,126,3.078]],["title/modules/ConsoleSpanExporterModule.html",[0,1.216,127,2.094]],["body/modules/ConsoleSpanExporterModule.html",[2,1.457,3,0.387,4,0.387,5,0.285,6,0.335,10,0.473,11,0.032,12,2.128,13,0.555,14,2.522,15,1.864,22,1.58,23,1.714,24,1.58,25,1.714,26,1.864,27,0.387,28,0.497,29,0.02,30,0.025,31,0.02,62,2.032,127,3.375,128,3.057,129,3.003,130,3.509,131,3.375,132,3.794,133,2.761]],["title/injectables/ConsoleSpanExporterService.html",[32,0.749,131,2.094]],["body/injectables/ConsoleSpanExporterService.html",[3,0.354,4,0.354,5,0.261,6,0.393,10,0.434,11,0.031,13,0.508,27,0.354,28,0.454,29,0.018,30,0.023,31,0.018,32,1.141,33,1.706,35,0.89,36,0.749,37,1.458,39,1.049,41,1.698,43,1.137,49,1.706,50,1.706,51,1.446,52,0.749,80,2.012,128,3.588,129,3.041,131,3.717,134,2.488,135,2.875,136,3.717,137,3.84,138,4.797,139,3.462,140,2.611,141,2.798,142,2.036]],["title/classes/HttpTextPropagatorService.html",[19,1.32,28,0.382]],["body/classes/HttpTextPropagatorService.html",[3,0.375,4,0.375,5,0.277,6,0.408,10,0.408,11,0.031,19,2.394,21,1.924,27,0.375,28,0.482,29,0.019,30,0.024,31,0.019,34,1.971,35,0.943,36,0.794,37,1.513,38,2.838,39,1.111,41,1.205,43,1.205,44,2.706,45,2.282,46,2.158,47,1.663,51,1.924,95,2.475,143,2.965,144,3.312,145,4.07,146,3.723,147,3.723,148,2.965]],["title/modules/HttpTraceContextPropagatorModule.html",[0,1.216,104,1.886]],["body/modules/HttpTraceContextPropagatorModule.html",[2,1.428,3,0.379,4,0.379,5,0.279,6,0.328,9,2.4,10,0.47,11,0.032,12,2.101,13,0.544,14,2.491,15,1.826,18,2.491,19,2.101,20,2.101,21,1.548,22,1.548,23,1.68,24,1.548,25,1.68,26,1.826,27,0.379,28,0.487,29,0.02,30,0.024,31,0.02,68,1.661,104,3.002,105,2.293,106,2.4,112,3.002,144,2.664]],["title/injectables/HttpTraceContextPropagatorService.html",[32,0.749,112,1.886]],["body/injectables/HttpTraceContextPropagatorService.html",[3,0.346,4,0.346,5,0.255,6,0.388,10,0.454,11,0.031,13,0.497,27,0.346,28,0.445,29,0.018,30,0.023,31,0.018,32,1.125,33,1.669,34,1.82,35,0.871,36,0.733,37,1.438,38,2.755,39,1.026,40,3.143,41,1.684,43,1.112,44,2.853,45,1.984,46,1.992,47,1.535,48,2.193,49,1.669,50,1.669,51,1.415,52,0.733,68,1.684,105,2.324,106,2.835,112,3.321,144,3.147,149,4.396]],["title/interfaces/IExporter.html",[53,0.882,140,1.713]],["body/interfaces/IExporter.html",[3,0.382,4,0.382,5,0.281,6,0.412,10,0.331,11,0.031,27,0.382,29,0.02,30,0.025,31,0.02,35,0.959,36,0.807,37,1.529,39,1.13,41,1.225,43,1.225,53,1.537,55,1.838,80,2.11,135,3.441,136,3.82,139,3.663,140,2.738,142,2.194,150,3.461,151,3.762,152,4.139,153,3.762,154,5.164]],["title/interfaces/IPropagator.html",[45,1.32,53,0.882]],["body/interfaces/IPropagator.html",[3,0.387,4,0.387,5,0.285,6,0.416,10,0.335,11,0.031,27,0.387,29,0.02,30,0.025,31,0.02,35,0.972,36,0.818,37,1.542,38,2.869,39,1.146,41,1.242,43,1.242,44,2.95,45,2.128,47,1.714,53,1.547,55,1.864,88,2.42,151,3.794,153,3.794,155,3.509,156,4.196,157,4.356]],["title/modules/JaegerHttpTracePropagatorModule.html",[0,1.216,107,1.886]],["body/modules/JaegerHttpTracePropagatorModule.html",[2,1.428,3,0.379,4,0.379,5,0.279,6,0.328,9,2.4,10,0.47,11,0.032,12,2.101,13,0.544,14,2.491,15,1.826,18,2.491,19,2.101,20,2.403,21,1.548,22,1.548,23,1.68,24,1.548,25,1.68,26,1.826,27,0.379,28,0.487,29,0.02,30,0.024,31,0.02,68,1.661,107,3.002,108,1.826,109,2.4,113,3.002,158,2.995]],["title/injectables/JaegerHttpTracePropagatorService.html",[32,0.749,113,1.886]],["body/injectables/JaegerHttpTracePropagatorService.html",[3,0.279,4,0.279,5,0.206,6,0.417,10,0.464,11,0.032,13,0.401,20,2.422,27,0.279,28,0.359,29,0.014,30,0.02,31,0.014,32,0.974,33,1.347,34,1.468,35,0.974,36,0.591,37,1.245,38,2.526,39,1.319,41,1.544,43,0.897,44,2.654,45,1.719,46,1.607,47,1.719,49,1.347,50,1.347,51,1.141,52,0.591,60,2.037,61,1.141,67,1.584,68,1.755,69,2.23,73,1.053,89,2.561,90,1.97,93,1.141,94,2.131,108,1.347,109,3.045,110,2.819,113,3.045,114,3.064,115,1.77,118,1.965,120,3.13,149,3.8,158,3.8,159,2.209,160,3.032,161,3.032,162,2.209,163,2.536,164,1.965,165,2.536,166,2.536,167,2.209,168,2.536,169,3.032,170,3.032,171,3.032]],["title/interfaces/JaegerPropagatorConfig.html",[53,0.882,86,1.565]],["body/interfaces/JaegerPropagatorConfig.html",[3,0.284,4,0.284,5,0.21,6,0.246,10,0.246,11,0.032,13,0.408,27,0.508,29,0.015,30,0.02,31,0.015,35,0.715,36,0.602,52,0.602,53,1.435,54,2.062,55,1.371,56,1.636,57,1.636,58,1.636,59,1.979,60,2.062,61,1.603,62,2.361,63,2.257,64,2.257,65,2.257,66,2.786,67,1.162,68,1.26,69,3.157,70,1.494,71,1.999,72,1.999,73,1.072,74,1.494,75,1.999,76,1.636,77,1.371,78,2.062,79,2.257,80,1.261,81,1.636,82,1.801,83,2.845,84,2.257,85,1.801,86,2.83,87,2.062,88,1.739,89,2.786,90,1.479,91,2.485,92,2.257,93,1.603,94,1.261,95,1.494,96,1.801,97,1.801]],["title/modules/NoopHttpTextPropagatorModule.html",[0,1.216,172,2.094]],["body/modules/NoopHttpTextPropagatorModule.html",[2,1.428,3,0.379,4,0.379,5,0.279,6,0.328,9,2.4,10,0.47,11,0.032,12,2.101,13,0.544,14,2.491,15,1.826,18,2.491,19,2.101,20,2.403,21,2.214,22,1.548,23,1.68,24,1.548,25,1.68,26,1.826,27,0.379,28,0.487,29,0.02,30,0.024,31,0.02,172,3.332,173,2.995,174,2.995,175,3.332,176,4.111]],["title/injectables/NoopHttpTextPropagatorService.html",[32,0.749,175,2.094]],["body/injectables/NoopHttpTextPropagatorService.html",[3,0.351,4,0.351,5,0.259,6,0.391,10,0.432,11,0.031,13,0.503,20,2.335,21,2.152,27,0.351,28,0.45,29,0.018,30,0.023,31,0.018,32,1.134,33,1.69,34,1.843,35,0.881,36,0.742,37,1.449,38,2.768,39,1.039,41,1.692,43,1.126,44,2.864,45,2,46,2.017,47,1.554,49,1.69,50,1.69,51,1.432,52,0.742,114,2.772,163,5.063,173,3.567,174,3.567,175,3.704]],["title/interfaces/OpenTelemetryConfig.html",[53,0.882,90,1.122]],["body/interfaces/OpenTelemetryConfig.html",[3,0.274,4,0.274,5,0.202,6,0.237,10,0.237,11,0.032,13,0.393,27,0.502,29,0.014,30,0.02,31,0.014,35,0.689,36,0.58,52,0.58,53,1.412,54,2.505,55,1.321,56,1.576,57,1.576,58,1.576,59,1.8,60,2.01,61,1.947,62,2.315,63,2.2,64,2.2,65,2.2,66,2.742,67,1.8,68,1.228,69,2.988,70,1.44,71,1.926,72,1.926,73,1.033,74,1.44,75,1.926,76,1.576,77,1.321,78,2.505,79,2.2,80,1.215,81,1.576,82,1.735,83,2.422,84,2.2,85,1.735,86,2.971,87,1.44,88,1.215,89,1.576,90,1.797,91,3.29,92,2.988,93,1.562,94,1.215,95,1.44,96,1.735,97,1.735]],["title/interceptors/OpenTelemetryHttpInterceptor.html",[177,1.886,178,2.094]],["body/interceptors/OpenTelemetryHttpInterceptor.html",[3,0.122,4,0.122,5,0.09,6,0.386,10,0.406,11,0.032,13,0.175,18,0.641,19,1.842,21,0.498,27,0.122,28,0.339,29,0.006,30,0.011,31,0.006,32,0.514,35,1.044,36,0.258,37,0.657,39,1.28,41,0.993,43,1.197,47,0.907,48,0.773,49,0.588,50,0.588,51,0.498,52,0.789,59,1.263,60,1.075,61,1.618,62,2.081,63,0.702,64,2.144,66,2.144,67,1.764,73,1.492,74,1.075,80,0.907,85,0.773,87,1.625,88,1.527,90,1.165,93,0.498,94,1.842,96,2.181,105,0.907,110,1.958,115,2.508,118,0.858,120,3.61,129,3.058,132,0.964,133,2.39,135,1.958,138,1.856,139,2.631,142,0.702,148,0.964,151,1.617,159,0.964,164,0.858,166,1.107,167,3.708,177,1.673,178,1.438,179,1.324,180,4.048,181,1.107,182,1.856,183,2.866,184,3.593,185,2.22,186,2.22,187,2.866,188,2.22,189,2.866,190,2.397,191,2.22,192,2.22,193,2.22,194,2.866,195,1.324,196,2.22,197,3.382,198,1.617,199,2.22,200,1.857,201,3.737,202,2.22,203,2.22,204,4.84,205,1.324,206,1.856,207,5.678,208,2.22,209,1.324,210,1.324,211,1.296,212,2.22,213,1.856,214,2.22,215,1.324,216,3.382,217,1.617,218,2.22,219,1.324,220,1.324,221,2.397,222,3.355,223,2.397,224,1.856,225,1.324,226,4.044,227,3.355,228,1.324,229,2.22,230,1.856,231,2.806,232,1.438,233,1.856,234,2.866,235,3.355,236,2.22,237,2.806,238,1.324,239,2.22,240,2.22,241,2.866,242,0.964,243,1.107,244,0.964,245,2.22,246,1.324,247,2.22,248,1.324,249,2.22,250,2.22,251,1.324,252,1.324,253,1.324,254,1.324,255,1.324,256,1.324,257,2.22,258,1.324,259,1.324,260,1.324,261,1.324,262,1.324,263,1.324,264,1.324,265,1.324,266,1.324,267,1.324,268,1.324,269,1.324,270,2.444,271,2.22,272,2.22,273,2.22,274,1.324,275,1.617,276,1.324,277,1.324,278,1.324,279,1.324,280,1.324,281,1.324,282,1.324,283,1.324,284,1.324,285,1.324,286,1.324,287,1.324,288,1.324,289,2.866,290,1.324,291,2.866,292,1.324,293,1.324,294,1.324,295,1.324,296,1.324,297,1.324,298,1.324,299,2.22,300,1.324,301,1.324,302,1.324,303,1.324]],["title/modules/OpenTelemetryInterceptorModule.html",[0,1.216,304,2.094]],["body/modules/OpenTelemetryInterceptorModule.html",[2,1.202,3,0.319,4,0.319,5,0.235,6,0.367,10,0.458,11,0.032,12,2.112,13,0.458,22,1.303,23,1.414,24,1.303,25,1.88,26,1.537,27,0.319,28,0.41,29,0.016,30,0.022,31,0.016,37,1.024,39,0.945,41,1.024,43,1.024,52,0.675,61,1.946,67,1.303,73,1.202,90,1.914,93,1.732,94,2.112,110,2.02,115,2.02,164,2.242,165,2.894,178,2.982,217,2.521,242,2.521,304,3.717,305,4.602,306,3.46,307,4.602,308,3.46,309,4.602,310,3.46,311,5.17,312,4.602,313,3.848,314,3.848,315,3.46,316,3.46,317,2.894,318,4.602,319,3.46,320,2.894,321,3.46,322,3.46,323,2.894,324,3.46,325,3.46]],["title/modules/OtelColExporterModule.html",[0,1.216,326,2.094]],["body/modules/OtelColExporterModule.html",[2,1.467,3,0.389,4,0.389,5,0.287,6,0.337,10,0.474,11,0.032,12,2.137,13,0.559,14,2.533,15,1.877,22,1.59,23,1.726,24,1.59,25,1.726,26,1.877,27,0.389,28,0.5,29,0.02,30,0.025,31,0.02,129,2.24,130,3.533,132,3.811,133,2.773,326,3.389,327,3.078,328,3.389,329,3.078]],["title/interfaces/OtelCollectorConfig.html",[53,0.882,78,1.565]],["body/interfaces/OtelCollectorConfig.html",[3,0.274,4,0.274,5,0.202,6,0.237,10,0.237,11,0.032,13,0.393,27,0.502,29,0.014,30,0.02,31,0.014,35,0.689,36,0.58,52,0.58,53,1.412,54,2.01,55,1.321,56,1.576,57,1.576,58,1.576,59,1.947,60,2.01,61,1.947,62,2.315,63,2.2,64,2.2,65,2.2,66,2.742,67,1.947,68,1.228,69,3.128,70,1.44,71,1.926,72,1.926,73,1.033,74,1.44,75,1.926,76,2.2,77,1.843,78,2.315,79,2.988,80,1.695,81,2.2,82,2.422,83,2.79,84,2.988,85,1.735,86,2.635,87,1.44,88,1.215,89,1.576,90,1.441,91,2.422,92,2.2,93,1.562,94,1.215,95,1.44,96,1.735,97,1.735,330,4.149]],["title/injectables/OtelcolExporterService.html",[32,0.749,328,2.094]],["body/injectables/OtelcolExporterService.html",[3,0.287,4,0.287,5,0.211,6,0.421,10,0.456,11,0.032,13,0.411,27,0.287,28,0.579,29,0.015,30,0.02,31,0.015,32,0.991,33,1.381,35,0.991,36,0.606,37,1.267,39,1.336,41,1.561,43,0.92,49,1.381,50,1.381,51,1.17,52,0.606,59,1.611,60,2.073,61,1.17,65,1.648,67,1.611,73,1.08,79,1.648,84,1.648,90,1.985,92,2.595,93,1.17,94,2.154,110,2.857,115,1.815,118,2.015,120,3.171,134,2.015,136,3.417,139,2.857,140,2.269,141,2.265,142,1.648,159,2.265,164,2.015,167,2.265,168,2.6,327,3.841,328,3.417,331,4.28,332,3.109,333,5.273,334,4.894,335,4.28,336,3.109,337,3.118,338,2.6,339,3.109,340,3.109,341,3.109,342,3.109,343,3.109,344,3.109]],["title/classes/SpanExporterService.html",[28,0.382,133,1.713]],["body/classes/SpanExporterService.html",[3,0.385,4,0.385,5,0.284,6,0.415,10,0.415,11,0.031,27,0.385,28,0.495,29,0.02,30,0.025,31,0.02,36,0.815,37,1.538,39,1.142,41,1.237,43,1.237,51,1.957,95,2.517,133,2.755,134,2.709,136,3.834,139,3.301,140,2.998,141,3.046,142,2.217,143,3.046,146,3.786,147,3.786,148,3.046,345,4.347,346,4.181]],["title/changelog.html",[347,1.579,348,1.579,349,2.263]],["body/changelog.html",[5,0.305,11,0.018,29,0.013,30,0.018,31,0.013,52,0.876,59,1,68,0.786,70,1.287,77,1.18,87,1.287,88,1.085,102,3.758,105,1.565,108,1.18,200,2.483,211,3.503,232,3.187,329,1.936,349,3.204,350,2.657,351,2.657,352,1.936,353,2.657,354,1.722,355,2.657,356,2.912,357,2.657,358,2.657,359,3.758,360,5.838,361,4.493,362,2.657,363,2.657,364,5.599,365,2.657,366,2.657,367,5.214,368,5.214,369,2.222,370,2.657,371,2.657,372,2.657,373,3.831,374,2.657,375,4.493,376,3.831,377,2.657,378,2.657,379,2.657,380,2.657,381,2.657,382,2.222,383,2.657,384,4.918,385,2.657,386,3.273,387,4.918,388,3.831,389,3.758,390,3.831,391,3.831,392,3.204,393,3.831,394,4.918,395,1.936,396,2.657,397,3.831,398,2.657,399,2.657,400,2.657,401,2.657,402,4.493,403,2.657,404,2.657,405,2.657,406,2.657,407,2.657,408,2.657,409,3.831,410,2.657,411,2.657,412,2.657,413,2.657,414,2.657,415,2.657,416,2.657,417,2.657,418,1.722,419,5.599,420,2.657,421,2.657,422,2.657,423,2.657,424,2.222,425,2.657,426,2.657,427,2.657,428,2.657,429,2.657,430,2.657,431,2.657,432,2.657,433,1.936,434,2.657,435,2.657,436,2.657,437,2.657,438,2.222,439,2.657,440,2.657,441,3.831,442,2.657,443,2.657,444,3.831,445,3.831,446,2.657,447,2.657,448,2.222,449,2.657,450,3.204,451,3.831,452,3.831,453,2.657,454,2.657,455,2.657,456,4.918,457,2.657,458,2.657,459,2.657,460,2.222,461,2.657,462,3.831,463,2.657,464,2.657]],["title/coverage.html",[465,3.675]],["body/coverage.html",[5,0.208,6,0.511,7,2.231,8,1.787,11,0.031,16,1.787,19,1.251,20,2.14,21,1.828,28,0.501,29,0.015,30,0.02,31,0.015,32,1.351,34,2.755,45,1.251,52,0.597,53,1.553,54,1.483,56,2.916,57,2.916,67,1.153,68,1.551,78,1.483,86,1.483,90,1.064,93,1.153,99,2.231,100,2.231,101,1.984,105,1.73,106,1.787,109,1.787,112,1.787,113,1.787,128,2.231,129,1.623,131,1.984,133,1.623,134,3.146,140,1.623,144,2.744,150,2.561,155,2.561,158,2.231,173,2.231,174,2.231,175,1.984,177,1.787,178,1.984,180,2.561,181,2.561,327,2.231,328,1.984,345,2.561,465,2.561,466,2.561,467,3.062,468,3.062,469,6.341,470,3.062,471,5.943,472,4.235,473,4.235,474,3.062,475,3.062,476,3.062,477,2.561,478,3.062,479,3.062,480,3.062,481,3.062,482,2.561]],["title/dependencies.html",[483,2.263,484,2.515]],["body/dependencies.html",[11,0.032,13,0.533,15,1.79,29,0.019,30,0.024,31,0.019,77,1.79,108,1.79,162,2.936,243,3.37,244,2.936,275,2.936,337,2.936,359,4.651,386,2.936,484,2.611,485,4.03,486,6.311,487,4.03,488,5.079,489,4.03,490,4.03,491,4.03,492,5.079,493,4.248,494,4.03,495,4.03,496,4.03,497,4.03,498,4.03,499,4.03,500,4.03,501,4.03,502,3.37,503,3.37,504,4.03,505,4.03,506,4.03,507,4.03]],["title/index.html",[36,0.528,347,1.579,348,1.579]],["body/index.html",[0,1.954,1,0.823,3,0.496,10,0.309,11,0.03,12,0.955,13,0.186,17,0.913,22,0.531,23,0.576,24,0.531,27,0.216,28,0.167,29,0.018,30,0.011,31,0.007,47,0.955,48,1.365,52,0.275,53,0.639,54,0.682,58,1.24,59,1.912,61,0.88,62,1.874,63,1.24,64,1.589,65,1.24,66,1.589,68,1.308,69,2.051,70,2.141,73,0.812,74,1.133,76,2.893,77,2.389,78,0.682,79,1.85,80,0.576,81,1.24,82,1.365,83,1.749,84,0.747,86,1.452,87,1.69,88,2.121,89,1.24,90,1.041,91,1.365,92,1.24,98,1.942,104,0.823,105,0.576,107,0.823,108,1.854,123,1.179,127,0.913,129,1.24,135,2.58,142,1.24,146,1.027,149,1.027,157,1.179,162,1.704,172,0.913,177,2.7,182,1.179,184,1.179,190,1.179,198,1.027,200,1.515,206,1.179,211,1.365,216,3.236,217,2.184,221,2.507,223,1.956,230,1.179,231,1.179,232,3.727,233,1.179,237,1.179,242,1.027,244,2.184,270,1.027,275,1.027,304,1.942,313,1.179,314,2.918,320,2.918,323,1.179,326,1.942,329,1.027,337,2.184,338,1.179,347,1.365,348,1.365,352,1.704,354,3.111,356,1.515,369,1.956,389,1.179,395,1.027,418,3.207,433,2.184,438,1.179,460,1.179,482,1.956,483,1.179,484,3.111,493,1.179,502,2.507,503,1.179,508,2.997,509,2.997,510,1.409,511,4.421,512,1.409,513,1.409,514,3.918,515,1.409,516,1.409,517,1.956,518,2.338,519,2.338,520,3.489,521,2.338,522,2.338,523,4.421,524,2.997,525,1.409,526,1.409,527,2.338,528,3.489,529,1.956,530,2.338,531,2.338,532,3.697,533,3.697,534,3.489,535,1.409,536,1.409,537,2.338,538,2.338,539,2.338,540,2.338,541,2.338,542,2.338,543,1.409,544,1.409,545,1.409,546,1.409,547,1.179,548,1.179,549,2.338,550,1.409,551,1.409,552,1.409,553,1.409,554,1.409,555,1.409,556,1.409,557,1.179,558,2.997,559,1.409,560,1.409,561,1.409,562,1.409,563,1.179,564,1.179,565,1.409,566,1.409,567,1.409,568,1.409,569,1.409,570,1.409,571,2.338,572,1.409,573,2.338,574,2.338,575,1.409,576,1.409,577,1.409,578,1.409,579,1.409,580,1.409,581,2.338,582,2.338,583,0.913,584,1.409,585,1.409,586,1.409,587,1.409,588,1.409,589,1.409,590,1.179,591,1.179,592,1.409,593,1.409,594,3.869,595,3.869,596,3.869,597,4.949,598,3.869,599,3.236,600,3.869,601,3.869,602,3.869,603,1.409,604,1.409,605,1.409,606,1.409,607,1.409,608,1.409,609,1.179,610,1.409,611,1.409,612,1.409,613,1.409,614,1.409,615,1.409,616,2.338,617,2.338,618,1.409,619,1.409,620,1.409,621,1.409,622,1.409,623,1.409,624,1.409]],["title/license.html",[347,1.579,348,1.579,625,2.263]],["body/license.html",[4,0.437,5,0.279,10,0.086,11,0.012,21,1.104,25,0.441,28,0.128,29,0.009,30,0.009,31,0.005,35,0.25,39,0.295,55,0.479,58,0.572,59,0.406,70,2.164,73,0.855,74,0.523,147,1.358,153,0.786,200,0.699,211,1.088,213,1.56,224,3.032,270,0.786,354,0.699,356,1.596,382,0.902,418,0.699,433,3.901,448,2.06,450,1.56,466,2.06,477,0.902,514,0.786,517,0.902,529,1.56,547,0.902,557,0.902,564,0.902,583,0.699,591,2.77,599,1.56,625,4.939,626,2.933,627,2.463,628,1.079,629,1.079,630,1.079,631,4.302,632,4.86,633,2.933,634,3.312,635,1.079,636,5.057,637,4.469,638,1.079,639,1.079,640,1.079,641,4.469,642,4.86,643,3.625,644,4.469,645,1.865,646,1.079,647,3.312,648,1.079,649,1.079,650,1.079,651,2.933,652,1.079,653,4.302,654,2.933,655,1.865,656,1.079,657,2.463,658,1.865,659,1.079,660,1.079,661,5.29,662,2.933,663,1.865,664,1.079,665,1.865,666,1.079,667,1.079,668,1.079,669,1.079,670,1.079,671,1.079,672,2.463,673,1.079,674,2.463,675,1.865,676,4.86,677,1.079,678,1.079,679,3.625,680,4.302,681,2.933,682,1.865,683,2.463,684,3.625,685,1.079,686,1.079,687,1.079,688,1.079,689,1.079,690,1.865,691,1.079,692,1.079,693,1.079,694,4.96,695,2.463,696,1.865,697,1.079,698,4.302,699,1.865,700,1.079,701,3.312,702,1.865,703,1.079,704,5.29,705,1.079,706,1.079,707,1.079,708,1.079,709,1.079,710,1.079,711,1.865,712,2.463,713,1.079,714,1.079,715,1.079,716,1.079,717,1.079,718,2.933,719,3.312,720,1.079,721,1.865,722,2.933,723,1.865,724,1.079,725,3.312,726,1.865,727,1.079,728,1.079,729,2.463,730,1.079,731,1.079,732,1.079,733,1.079,734,1.865,735,0.902,736,1.079,737,1.079,738,2.463,739,1.079,740,1.079,741,2.463,742,1.079,743,1.079,744,1.079,745,2.933,746,4.469,747,1.079,748,1.079,749,1.865,750,4.11,751,2.463,752,2.933,753,1.865,754,1.865,755,1.865,756,1.865,757,2.463,758,1.865,759,2.463,760,1.865,761,1.865,762,1.865,763,1.865,764,0.902,765,1.865,766,1.079,767,1.079,768,3.312,769,3.887,770,2.463,771,1.865,772,1.079,773,1.079,774,1.865,775,1.865,776,1.079,777,1.079,778,2.463,779,1.865,780,1.079,781,1.079,782,1.079,783,2.463,784,1.079,785,1.079,786,1.079,787,1.865,788,1.865,789,1.079,790,1.079,791,1.079,792,1.079,793,1.079,794,1.079,795,1.079,796,1.865,797,1.079,798,1.079,799,1.079,800,1.079,801,1.079,802,1.079,803,1.079,804,1.079,805,2.463,806,1.079,807,2.463,808,1.079,809,1.079,810,1.079,811,1.079,812,4.11,813,1.079,814,1.079,815,1.079,816,1.079,817,1.079,818,2.933,819,1.865,820,2.933,821,1.079,822,1.079,823,1.079,824,1.079,825,1.079,826,2.463,827,1.079,828,1.079,829,1.865,830,1.865,831,1.079,832,1.079,833,1.079,834,1.865,835,1.079,836,1.079,837,3.312,838,1.079,839,1.079,840,1.079,841,1.079,842,1.079,843,1.079,844,1.079,845,2.463,846,2.933,847,1.079,848,1.079,849,1.079,850,1.079,851,1.079,852,1.079,853,1.079,854,1.079,855,1.079,856,1.079,857,1.079,858,1.865,859,1.079,860,1.079,861,1.865,862,1.079,863,1.079,864,2.933,865,1.079,866,1.079,867,1.079,868,1.079,869,1.079,870,1.079,871,1.079,872,2.933,873,2.463,874,2.463,875,2.463,876,1.865,877,1.865,878,2.463,879,1.865,880,1.865,881,1.865,882,1.865,883,1.079,884,1.079,885,1.079,886,1.079,887,1.079,888,1.079,889,1.079,890,1.079,891,1.079,892,1.865,893,1.079,894,1.079,895,1.079,896,1.079,897,3.312,898,1.079,899,1.079,900,1.079,901,1.079,902,1.079,903,1.079,904,1.079,905,1.079,906,3.312,907,1.079,908,1.079,909,1.079,910,1.079,911,1.079,912,0.902,913,1.079,914,1.079,915,1.079,916,1.079,917,1.079,918,1.079,919,1.079,920,1.079,921,1.079,922,1.079,923,1.079,924,1.079,925,2.463,926,1.079,927,1.079,928,1.079,929,1.079,930,1.079,931,1.865,932,1.079,933,1.079,934,1.079,935,1.079,936,1.079,937,1.079,938,1.079,939,1.079,940,1.079,941,1.079,942,1.079,943,1.079,944,1.079,945,1.079,946,1.079,947,1.865,948,1.079,949,1.079,950,1.079,951,1.865,952,1.865,953,1.079,954,1.079,955,1.079,956,1.079,957,1.079,958,1.079,959,1.079,960,1.079,961,1.079,962,1.079,963,1.079,964,1.079,965,1.079,966,1.079,967,1.079,968,1.079,969,1.079,970,1.079,971,1.079,972,1.079,973,1.079,974,1.079,975,1.079]],["title/modules.html",[2,1.526]],["body/modules.html",[1,2.639,2,1.57,11,0.026,29,0.021,30,0.026,31,0.021,98,2.929,104,2.639,107,2.639,127,2.929,172,2.929,304,2.929,326,2.929,583,4.178,976,6.448,977,6.448]],["title/overview.html",[978,3.675]],["body/overview.html",[0,1.788,2,1.649,11,0.027,22,1.788,24,1.788,29,0.023,30,0.027,31,0.023,33,2.109,55,2.109,143,3.46,317,3.972,392,3.972,395,3.46,484,3.077,563,3.972,912,3.972,978,3.972,979,4.749,980,5.614,981,4.749,982,4.749,983,4.749]],["title/todo.html",[347,1.579,348,1.579,984,2.263]],["body/todo.html",[11,0.03,29,0.019,30,0.024,31,0.019,52,0.773,59,2.185,76,2.665,77,2.233,88,1.62,105,1.62,108,2.578,135,2.934,177,2.314,197,3.316,198,3.662,211,3.672,232,2.569,352,2.888,354,2.569,356,3.257,386,2.888,418,2.569,424,3.316,514,4.021,532,3.316,533,3.316,548,3.316,583,3.257,590,5.009,609,3.316,694,3.316,735,3.316,764,3.316,984,4.616,985,3.965,986,3.965,987,5.52,988,3.965,989,3.965,990,3.965,991,3.965]],["title/miscellaneous/variables.html",[992,2.263,993,3.246]],["body/miscellaneous/variables.html",[6,0.381,11,0.029,29,0.023,30,0.027,31,0.023,36,0.93,52,0.93,56,2.527,57,2.983,80,1.948,81,2.527,93,2.254,94,1.948,95,2.309,97,2.783,992,3.987,993,3.987,994,4.767]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"classes/HttpTextPropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":542,"title":{},"body":{"index.html":{}}}],["0.0.1",{"_index":281,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["0.10.1",{"_index":373,"title":{},"body":{"changelog.html":{}}}],["0.10.2",{"_index":359,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["0.4.0",{"_index":381,"title":{},"body":{"changelog.html":{}}}],["0.7",{"_index":536,"title":{},"body":{"index.html":{}}}],["0.8.2",{"_index":415,"title":{},"body":{"changelog.html":{}}}],["0.8.3",{"_index":394,"title":{},"body":{"changelog.html":{}}}],["0.9.0",{"_index":386,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"todo.html":{}}}],["0319eee",{"_index":393,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":402,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":387,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":374,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":361,"title":{},"body":{"changelog.html":{}}}],["0885b40",{"_index":428,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":363,"title":{},"body":{"changelog.html":{}}}],["0f35b5c",{"_index":435,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":200,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["1.19.0",{"_index":497,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":475,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":478,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":369,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["10.0.5",{"_index":486,"title":{},"body":{"dependencies.html":{}}}],["10.1.1",{"_index":488,"title":{},"body":{"dependencies.html":{}}}],["10/10",{"_index":476,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":469,"title":{},"body":{"coverage.html":{}}}],["12.0.2",{"_index":619,"title":{},"body":{"index.html":{}}}],["12/typescript",{"_index":437,"title":{},"body":{"changelog.html":{}}}],["1229a9d",{"_index":414,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":362,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":395,"title":{},"body":{"changelog.html":{},"index.html":{},"overview.html":{}}}],["2.0",{"_index":627,"title":{},"body":{"license.html":{}}}],["2.0.0",{"_index":506,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":471,"title":{},"body":{"coverage.html":{}}}],["2004",{"_index":629,"title":{},"body":{"license.html":{}}}],["2020",{"_index":360,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":375,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":407,"title":{},"body":{"changelog.html":{}}}],["3.6.0",{"_index":438,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["3/3",{"_index":473,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":480,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":409,"title":{},"body":{"changelog.html":{}}}],["3516488",{"_index":430,"title":{},"body":{"changelog.html":{}}}],["351ce3e",{"_index":366,"title":{},"body":{"changelog.html":{}}}],["371886a",{"_index":455,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":400,"title":{},"body":{"changelog.html":{}}}],["4/4",{"_index":472,"title":{},"body":{"coverage.html":{}}}],["412d2fd",{"_index":461,"title":{},"body":{"changelog.html":{}}}],["47aba25",{"_index":454,"title":{},"body":{"changelog.html":{}}}],["47c249b",{"_index":458,"title":{},"body":{"changelog.html":{}}}],["4a000b9",{"_index":449,"title":{},"body":{"changelog.html":{}}}],["4d886fb",{"_index":372,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":553,"title":{},"body":{"index.html":{}}}],["5.2.0",{"_index":499,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":470,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":477,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["563071d",{"_index":439,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":392,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["6.6.0",{"_index":504,"title":{},"body":{"dependencies.html":{}}}],["613c16d",{"_index":457,"title":{},"body":{"changelog.html":{}}}],["7",{"_index":983,"title":{},"body":{"overview.html":{}}}],["735b05d",{"_index":464,"title":{},"body":{"changelog.html":{}}}],["75",{"_index":479,"title":{},"body":{"coverage.html":{}}}],["7a5b07e",{"_index":416,"title":{},"body":{"changelog.html":{}}}],["7b4c031",{"_index":391,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":982,"title":{},"body":{"overview.html":{}}}],["80d2ada",{"_index":383,"title":{},"body":{"changelog.html":{}}}],["80f7bf8",{"_index":463,"title":{},"body":{"changelog.html":{}}}],["83fc1f3",{"_index":417,"title":{},"body":{"changelog.html":{}}}],["8d45a2c",{"_index":396,"title":{},"body":{"changelog.html":{}}}],["8e268a9",{"_index":405,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":382,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["9.0.0",{"_index":503,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["9/node",{"_index":436,"title":{},"body":{"changelog.html":{}}}],["92330f9",{"_index":425,"title":{},"body":{"changelog.html":{}}}],["94e0b44",{"_index":379,"title":{},"body":{"changelog.html":{}}}],["95167b9",{"_index":453,"title":{},"body":{"changelog.html":{}}}],["96da55f",{"_index":443,"title":{},"body":{"changelog.html":{}}}],["a1746bf",{"_index":447,"title":{},"body":{"changelog.html":{}}}],["a517094",{"_index":459,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":850,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":928,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":925,"title":{},"body":{"license.html":{}}}],["accessor",{"_index":621,"title":{},"body":{"index.html":{}}}],["act",{"_index":935,"title":{},"body":{"license.html":{}}}],["acting",{"_index":649,"title":{},"body":{"license.html":{}}}],["acts",{"_index":904,"title":{},"body":{"license.html":{}}}],["ad03334",{"_index":422,"title":{},"body":{"changelog.html":{}}}],["add",{"_index":211,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["addendum",{"_index":836,"title":{},"body":{"license.html":{}}}],["adding",{"_index":570,"title":{},"body":{"index.html":{}}}],["additional",{"_index":837,"title":{},"body":{"license.html":{}}}],["additions",{"_index":720,"title":{},"body":{"license.html":{}}}],["advised",{"_index":923,"title":{},"body":{"license.html":{}}}],["against",{"_index":788,"title":{},"body":{"license.html":{}}}],["agent",{"_index":592,"title":{},"body":{"index.html":{}}}],["agree",{"_index":938,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":875,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":855,"title":{},"body":{"license.html":{}}}],["alleging",{"_index":793,"title":{},"body":{"license.html":{}}}],["allowedcommonjsdependencies",{"_index":606,"title":{},"body":{"index.html":{}}}],["alone",{"_index":784,"title":{},"body":{"license.html":{}}}],["along",{"_index":827,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":835,"title":{},"body":{"license.html":{}}}],["already",{"_index":321,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["althought",{"_index":572,"title":{},"body":{"index.html":{}}}],["always",{"_index":199,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["alwaysoffsampler",{"_index":246,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["alwaysonsampler",{"_index":245,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["ambient",{"_index":623,"title":{},"body":{"index.html":{}}}],["amd",{"_index":598,"title":{},"body":{"index.html":{}}}],["and(b",{"_index":808,"title":{},"body":{"license.html":{}}}],["and(c",{"_index":815,"title":{},"body":{"license.html":{}}}],["and(d",{"_index":821,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":932,"title":{},"body":{"license.html":{}}}],["angular",{"_index":232,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["angular.json",{"_index":604,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":485,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":487,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":15,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"modules/OtelColExporterModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":242,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["angular/compiler",{"_index":489,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":13,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"dependencies.html":{},"index.html":{}}}],["angular/forms",{"_index":490,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":491,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":492,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":495,"title":{},"body":{"dependencies.html":{}}}],["annotations",{"_index":708,"title":{},"body":{"license.html":{}}}],["apache",{"_index":626,"title":{},"body":{"license.html":{}}}],["api",{"_index":166,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api#tracing",{"_index":535,"title":{},"body":{"index.html":{}}}],["api.defaultsetter",{"_index":293,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api.propagation.inject",{"_index":292,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["app",{"_index":528,"title":{},"body":{"index.html":{}}}],["app.component",{"_index":559,"title":{},"body":{"index.html":{}}}],["app.module.ts",{"_index":551,"title":{},"body":{"index.html":{}}}],["app/collector/docker",{"_index":585,"title":{},"body":{"index.html":{}}}],["appand",{"_index":576,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":558,"title":{},"body":{"index.html":{}}}],["appear",{"_index":832,"title":{},"body":{"license.html":{}}}],["appendix",{"_index":702,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":873,"title":{},"body":{"license.html":{}}}],["application",{"_index":511,"title":{},"body":{"index.html":{}}}],["applies",{"_index":777,"title":{},"body":{"license.html":{}}}],["apply",{"_index":947,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":323,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["appropriate",{"_index":957,"title":{},"body":{"license.html":{}}}],["appropriateness",{"_index":890,"title":{},"body":{"license.html":{}}}],["archives",{"_index":966,"title":{},"body":{"license.html":{}}}],["arising",{"_index":911,"title":{},"body":{"license.html":{}}}],["asserted",{"_index":944,"title":{},"body":{"license.html":{}}}],["associated",{"_index":895,"title":{},"body":{"license.html":{}}}],["assume",{"_index":893,"title":{},"body":{"license.html":{}}}],["async",{"_index":545,"title":{},"body":{"index.html":{}}}],["attach",{"_index":948,"title":{},"body":{"license.html":{}}}],["attached",{"_index":700,"title":{},"body":{"license.html":{}}}],["attributes",{"_index":284,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["attribution",{"_index":818,"title":{},"body":{"license.html":{}}}],["authorized",{"_index":645,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":695,"title":{},"body":{"license.html":{}}}],["available",{"_index":583,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{},"todo.html":{}}}],["b3",{"_index":17,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"index.html":{}}}],["b3propagator",{"_index":42,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b3propagatormodule",{"_index":1,"title":{"modules/B3PropagatorModule.html":{}},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["b3propagatorservice",{"_index":16,"title":{"injectables/B3PropagatorService.html":{}},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["b63afc1",{"_index":431,"title":{},"body":{"changelog.html":{}}}],["b679883",{"_index":432,"title":{},"body":{"changelog.html":{}}}],["bailouts",{"_index":601,"title":{},"body":{"index.html":{}}}],["base",{"_index":608,"title":{},"body":{"index.html":{}}}],["based",{"_index":564,"title":{},"body":{"index.html":{},"license.html":{}}}],["basis",{"_index":877,"title":{},"body":{"license.html":{}}}],["batchspanexporter(async",{"_index":71,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{}}}],["batchspanprocessor",{"_index":221,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["batchspanprocessor(spanexporter",{"_index":301,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["bd69598",{"_index":411,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":413,"title":{},"body":{"changelog.html":{}}}],["behalf",{"_index":725,"title":{},"body":{"license.html":{}}}],["below",{"_index":703,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":671,"title":{},"body":{"license.html":{}}}],["between",{"_index":541,"title":{},"body":{"index.html":{}}}],["bfc26ae",{"_index":377,"title":{},"body":{"changelog.html":{}}}],["bind",{"_index":717,"title":{},"body":{"license.html":{}}}],["body",{"_index":275,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"dependencies.html":{},"index.html":{}}}],["boilerplate",{"_index":949,"title":{},"body":{"license.html":{}}}],["boolean",{"_index":66,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["boolean)send",{"_index":543,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":563,"title":{},"body":{"index.html":{},"overview.html":{}}}],["brackets",{"_index":952,"title":{},"body":{"license.html":{}}}],["breaking",{"_index":512,"title":{},"body":{"index.html":{}}}],["browse",{"_index":977,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":493,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["bug",{"_index":367,"title":{},"body":{"changelog.html":{}}}],["c6368c9",{"_index":408,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":568,"title":{},"body":{"index.html":{}}}],["carrier",{"_index":291,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["carrier[key",{"_index":295,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["carry",{"_index":810,"title":{},"body":{"license.html":{}}}],["cause",{"_index":599,"title":{},"body":{"index.html":{},"license.html":{}}}],["change",{"_index":513,"title":{},"body":{"index.html":{}}}],["changed",{"_index":814,"title":{},"body":{"license.html":{}}}],["changelog",{"_index":349,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":351,"title":{},"body":{"changelog.html":{}}}],["character",{"_index":910,"title":{},"body":{"license.html":{}}}],["charge",{"_index":759,"title":{},"body":{"license.html":{}}}],["choose",{"_index":926,"title":{},"body":{"license.html":{}}}],["claim",{"_index":790,"title":{},"body":{"license.html":{}}}],["claims",{"_index":779,"title":{},"body":{"license.html":{}}}],["class",{"_index":28,"title":{"classes/HttpTextPropagatorService.html":{},"classes/SpanExporterService.html":{}},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"classes/HttpTextPropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["classes",{"_index":143,"title":{},"body":{"classes/HttpTextPropagatorService.html":{},"classes/SpanExporterService.html":{},"overview.html":{}}}],["code",{"_index":448,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["collector",{"_index":77,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{}}}],["collector/build/src/platform/browser",{"_index":338,"title":{},"body":{"injectables/OtelcolExporterService.html":{},"index.html":{}}}],["collector/build/src/platform/browser/types",{"_index":339,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collector/issues/1385",{"_index":990,"title":{},"body":{"todo.html":{}}}],["collectorexporter",{"_index":333,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectorexporterconfig",{"_index":335,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectorexporterconfigbrowser",{"_index":334,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectortraceexporter",{"_index":336,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectortraceexporter(this.otelcolconfig",{"_index":344,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["combination",{"_index":785,"title":{},"body":{"license.html":{}}}],["command",{"_index":574,"title":{},"body":{"index.html":{}}}],["comment",{"_index":958,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":920,"title":{},"body":{"license.html":{}}}],["commit",{"_index":357,"title":{},"body":{"changelog.html":{}}}],["common",{"_index":58,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{},"license.html":{}}}],["commoncollectorconfig",{"_index":54,"title":{"interfaces/CommonCollectorConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["commonconfig",{"_index":91,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["commonjs",{"_index":597,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":14,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"modules/OtelColExporterModule.html":{}}}],["communication",{"_index":729,"title":{},"body":{"license.html":{}}}],["compiled",{"_index":689,"title":{},"body":{"license.html":{}}}],["compliance",{"_index":969,"title":{},"body":{"license.html":{}}}],["complies",{"_index":843,"title":{},"body":{"license.html":{}}}],["compose",{"_index":582,"title":{},"body":{"index.html":{}}}],["compose.yaml",{"_index":586,"title":{},"body":{"index.html":{}}}],["composite",{"_index":102,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"changelog.html":{}}}],["compositepropagator",{"_index":117,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["compositepropagatormodule",{"_index":98,"title":{"modules/CompositePropagatorModule.html":{}},"body":{"modules/CompositePropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["compositepropagatorservice",{"_index":101,"title":{"injectables/CompositePropagatorService.html":{}},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["computer",{"_index":917,"title":{},"body":{"license.html":{}}}],["concurrently",{"_index":498,"title":{},"body":{"dependencies.html":{}}}],["conditions",{"_index":632,"title":{},"body":{"license.html":{}}}],["config",{"_index":94,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"miscellaneous/variables.html":{}}}],["config.commonconfig.servicename",{"_index":341,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.jaegerpropagatorconfig?.customheader",{"_index":170,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["config.otelcolconfig?.headers",{"_index":343,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.otelcolconfig?.url",{"_index":342,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.ts",{"_index":57,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configurable",{"_index":538,"title":{},"body":{"index.html":{}}}],["configuration",{"_index":59,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["configuration/opentelemetry",{"_index":164,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{}}}],["configure",{"_index":527,"title":{},"body":{"index.html":{}}}],["consequential",{"_index":909,"title":{},"body":{"license.html":{}}}],["conserve",{"_index":212,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["consistent",{"_index":934,"title":{},"body":{"license.html":{}}}],["console",{"_index":62,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"modules/ConsoleSpanExporterModule.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["consolespanexporter",{"_index":138,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["consolespanexportermodule",{"_index":127,"title":{"modules/ConsoleSpanExporterModule.html":{}},"body":{"modules/ConsoleSpanExporterModule.html":{},"index.html":{},"modules.html":{}}}],["consolespanexporterservice",{"_index":131,"title":{"injectables/ConsoleSpanExporterService.html":{}},"body":{"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"coverage.html":{}}}],["conspicuously",{"_index":742,"title":{},"body":{"license.html":{}}}],["const",{"_index":96,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{}}}],["constitutes",{"_index":794,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":110,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{}}}],["constructor(@inject(opentelemetryinjectconfig",{"_index":168,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/OtelcolExporterService.html":{}}}],["constructor(b3propagatorservice",{"_index":111,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["constructor(config",{"_index":159,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{}}}],["construed",{"_index":838,"title":{},"body":{"license.html":{}}}],["contained",{"_index":824,"title":{},"body":{"license.html":{}}}],["content",{"_index":870,"title":{},"body":{"license.html":{}}}],["contents",{"_index":517,"title":{},"body":{"index.html":{},"license.html":{}}}],["context",{"_index":105,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{}}}],["contextmanager",{"_index":183,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["contract",{"_index":663,"title":{},"body":{"license.html":{}}}],["contrib/tree/master/propagators/opentelemetry",{"_index":549,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":719,"title":{},"body":{"license.html":{}}}],["contribution(s",{"_index":783,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":845,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":746,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":795,"title":{},"body":{"license.html":{}}}],["control",{"_index":651,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":652,"title":{},"body":{"license.html":{}}}],["conversions",{"_index":691,"title":{},"body":{"license.html":{}}}],["copies",{"_index":802,"title":{},"body":{"license.html":{}}}],["copy",{"_index":807,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":642,"title":{},"body":{"license.html":{}}}],["core",{"_index":554,"title":{},"body":{"index.html":{}}}],["correlation",{"_index":988,"title":{},"body":{"todo.html":{}}}],["counterclaim",{"_index":791,"title":{},"body":{"license.html":{}}}],["cours",{"_index":427,"title":{},"body":{"changelog.html":{}}}],["coverage",{"_index":465,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":566,"title":{},"body":{"index.html":{}}}],["cross",{"_index":789,"title":{},"body":{"license.html":{}}}],["current",{"_index":233,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["custom",{"_index":83,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["customary",{"_index":866,"title":{},"body":{"license.html":{}}}],["customheader",{"_index":89,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["cypress",{"_index":388,"title":{},"body":{"changelog.html":{}}}],["d2ecbb8",{"_index":385,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":906,"title":{},"body":{"license.html":{}}}],["date",{"_index":799,"title":{},"body":{"license.html":{}}}],["dd7a0e5",{"_index":429,"title":{},"body":{"changelog.html":{}}}],["dda5d54",{"_index":446,"title":{},"body":{"changelog.html":{}}}],["declarations",{"_index":22,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"index.html":{},"overview.html":{}}}],["declared",{"_index":622,"title":{},"body":{"index.html":{}}}],["default",{"_index":80,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defend",{"_index":940,"title":{},"body":{"license.html":{}}}],["define",{"_index":151,"title":{},"body":{"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["defined",{"_index":39,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"classes/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"license.html":{}}}],["defineprobabilitysampler",{"_index":185,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["defineprobabilitysampler(sampleconfig",{"_index":193,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["definition",{"_index":147,"title":{},"body":{"classes/HttpTextPropagatorService.html":{},"classes/SpanExporterService.html":{},"license.html":{}}}],["definitions",{"_index":635,"title":{},"body":{"license.html":{}}}],["del",{"_index":440,"title":{},"body":{"changelog.html":{}}}],["delete",{"_index":444,"title":{},"body":{"changelog.html":{}}}],["deliberate",{"_index":901,"title":{},"body":{"license.html":{}}}],["dependence",{"_index":617,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":484,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{},"overview.html":{}}}],["dependenciesadd",{"_index":603,"title":{},"body":{"index.html":{}}}],["depends",{"_index":596,"title":{},"body":{"index.html":{}}}],["deploy",{"_index":510,"title":{},"body":{"index.html":{}}}],["derivative",{"_index":704,"title":{},"body":{"license.html":{}}}],["derived",{"_index":705,"title":{},"body":{"license.html":{}}}],["describing",{"_index":867,"title":{},"body":{"license.html":{}}}],["description",{"_index":35,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"classes/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"license.html":{}}}],["designated",{"_index":744,"title":{},"body":{"license.html":{}}}],["determining",{"_index":889,"title":{},"body":{"license.html":{}}}],["dgo",{"_index":588,"title":{},"body":{"index.html":{}}}],["different",{"_index":842,"title":{},"body":{"license.html":{}}}],["dir",{"_index":442,"title":{},"body":{"changelog.html":{}}}],["direct",{"_index":657,"title":{},"body":{"license.html":{}}}],["direction",{"_index":659,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":871,"title":{},"body":{"license.html":{}}}],["discussing",{"_index":739,"title":{},"body":{"license.html":{}}}],["display",{"_index":529,"title":{},"body":{"index.html":{},"license.html":{}}}],["distribute",{"_index":768,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":826,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":634,"title":{},"body":{"license.html":{}}}],["doc",{"_index":441,"title":{},"body":{"changelog.html":{}}}],["docker",{"_index":581,"title":{},"body":{"index.html":{}}}],["docs",{"_index":410,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":640,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":466,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["documented",{"_index":353,"title":{},"body":{"changelog.html":{}}}],["doesn't",{"_index":989,"title":{},"body":{"todo.html":{}}}],["don't",{"_index":956,"title":{},"body":{"license.html":{}}}],["done",{"_index":991,"title":{},"body":{"todo.html":{}}}],["downgrade",{"_index":423,"title":{},"body":{"changelog.html":{}}}],["dynamic",{"_index":494,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":390,"title":{},"body":{"changelog.html":{}}}],["e5eb09e",{"_index":420,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":752,"title":{},"body":{"license.html":{}}}],["easier",{"_index":964,"title":{},"body":{"license.html":{}}}],["ec28651",{"_index":434,"title":{},"body":{"changelog.html":{}}}],["editorial",{"_index":706,"title":{},"body":{"license.html":{}}}],["elaborations",{"_index":709,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":726,"title":{},"body":{"license.html":{}}}],["en",{"_index":426,"title":{},"body":{"changelog.html":{}}}],["enclosed",{"_index":951,"title":{},"body":{"license.html":{}}}],["end",{"_index":946,"title":{},"body":{"license.html":{}}}],["entities",{"_index":650,"title":{},"body":{"license.html":{}}}],["entity",{"_index":644,"title":{},"body":{"license.html":{}}}],["environment",{"_index":560,"title":{},"body":{"index.html":{}}}],["environments/environment",{"_index":561,"title":{},"body":{"index.html":{}}}],["error",{"_index":320,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["even",{"_index":922,"title":{},"body":{"license.html":{}}}],["event",{"_index":270,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{},"license.html":{}}}],["event.status",{"_index":273,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["example",{"_index":418,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["except",{"_index":770,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":741,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":758,"title":{},"body":{"license.html":{}}}],["executed",{"_index":856,"title":{},"body":{"license.html":{}}}],["exercise",{"_index":896,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":673,"title":{},"body":{"license.html":{}}}],["explicitly",{"_index":847,"title":{},"body":{"license.html":{}}}],["export",{"_index":27,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"classes/HttpTextPropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"index.html":{}}}],["exported",{"_index":613,"title":{},"body":{"index.html":{}}}],["exporter",{"_index":135,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{},"todo.html":{}}}],["exporter.interface",{"_index":141,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{}}}],["exporter.module.ts",{"_index":130,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"modules/OtelColExporterModule.html":{}}}],["exporter.service",{"_index":132,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OtelColExporterModule.html":{}}}],["exporter.service.ts",{"_index":134,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"coverage.html":{}}}],["exporter.service.ts:17",{"_index":137,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{}}}],["exporter.service.ts:25",{"_index":331,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["exporter.service.ts:43",{"_index":332,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["exporter.service.ts:8",{"_index":346,"title":{},"body":{"classes/SpanExporterService.html":{}}}],["exporters",{"_index":552,"title":{},"body":{"index.html":{}}}],["exports",{"_index":317,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"overview.html":{}}}],["express",{"_index":880,"title":{},"body":{"license.html":{}}}],["f",{"_index":584,"title":{},"body":{"index.html":{}}}],["f195a50",{"_index":401,"title":{},"body":{"changelog.html":{}}}],["fad044a",{"_index":403,"title":{},"body":{"changelog.html":{}}}],["failure",{"_index":918,"title":{},"body":{"license.html":{}}}],["fake",{"_index":555,"title":{},"body":{"index.html":{}}}],["false",{"_index":530,"title":{},"body":{"index.html":{}}}],["features",{"_index":364,"title":{},"body":{"changelog.html":{}}}],["fee",{"_index":927,"title":{},"body":{"license.html":{}}}],["fields",{"_index":950,"title":{},"body":{"license.html":{}}}],["fifty",{"_index":666,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"classes/HttpTextPropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"changelog.html":{},"coverage.html":{},"license.html":{}}}],["filed",{"_index":800,"title":{},"body":{"license.html":{}}}],["files",{"_index":683,"title":{},"body":{"license.html":{}}}],["finalize",{"_index":250,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["fitness",{"_index":885,"title":{},"body":{"license.html":{}}}],["fix",{"_index":609,"title":{},"body":{"index.html":{},"todo.html":{}}}],["fixes",{"_index":368,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":805,"title":{},"body":{"license.html":{}}}],["form",{"_index":676,"title":{},"body":{"license.html":{}}}],["format",{"_index":960,"title":{},"body":{"license.html":{}}}],["forroot",{"_index":308,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["forroot(config",{"_index":309,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["free",{"_index":761,"title":{},"body":{"license.html":{}}}],["generally",{"_index":550,"title":{},"body":{"index.html":{}}}],["generated",{"_index":690,"title":{},"body":{"license.html":{}}}],["getexporter",{"_index":136,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{}}}],["getpropagator",{"_index":38,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"classes/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{}}}],["getting",{"_index":347,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["gettracer('angular",{"_index":280,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["github",{"_index":986,"title":{},"body":{"todo.html":{}}}],["give",{"_index":153,"title":{},"body":{"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"license.html":{}}}],["global",{"_index":519,"title":{},"body":{"index.html":{}}}],["goodwill",{"_index":915,"title":{},"body":{"license.html":{}}}],["governing",{"_index":974,"title":{},"body":{"license.html":{}}}],["grant",{"_index":751,"title":{},"body":{"license.html":{}}}],["granted",{"_index":675,"title":{},"body":{"license.html":{}}}],["granting",{"_index":646,"title":{},"body":{"license.html":{}}}],["grants",{"_index":754,"title":{},"body":{"license.html":{}}}],["graph",{"_index":976,"title":{},"body":{"modules.html":{}}}],["grossly",{"_index":902,"title":{},"body":{"license.html":{}}}],["guidelines",{"_index":358,"title":{},"body":{"changelog.html":{}}}],["harmless",{"_index":942,"title":{},"body":{"license.html":{}}}],["header",{"_index":87,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["headers",{"_index":84,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"index.html":{}}}],["here",{"_index":590,"title":{},"body":{"index.html":{},"todo.html":{}}}],["hereby",{"_index":753,"title":{},"body":{"license.html":{}}}],["herein",{"_index":852,"title":{},"body":{"license.html":{}}}],["highlight",{"_index":501,"title":{},"body":{"dependencies.html":{}}}],["hold",{"_index":941,"title":{},"body":{"license.html":{}}}],["http",{"_index":20,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"coverage.html":{}}}],["http.interceptor",{"_index":316,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["http.interceptor.ts",{"_index":181,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{}}}],["http.interceptor.ts:115",{"_index":205,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:140",{"_index":210,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:162",{"_index":215,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:176",{"_index":220,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:192",{"_index":195,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:45",{"_index":238,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:49",{"_index":191,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:83",{"_index":228,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.method",{"_index":285,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.url",{"_index":287,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http://localhost:16686",{"_index":589,"title":{},"body":{"index.html":{}}}],["http://localhost:4200",{"_index":578,"title":{},"body":{"index.html":{}}}],["http://localhost:55681/v1/trace",{"_index":82,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["http://www.apache.org/licenses",{"_index":630,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":971,"title":{},"body":{"license.html":{}}}],["http_interceptors",{"_index":313,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["httpclientmodule",{"_index":314,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["httperrorresponse",{"_index":241,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httpevent",{"_index":239,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httphandler",{"_index":227,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httpinterceptor",{"_index":231,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["httprequest",{"_index":204,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httpresponse",{"_index":240,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["https://angular.io/guide/build#configuring",{"_index":602,"title":{},"body":{"index.html":{}}}],["https://github.com/open",{"_index":532,"title":{},"body":{"index.html":{},"todo.html":{}}}],["https://jufab.github.io/opentelemetry",{"_index":516,"title":{},"body":{"index.html":{}}}],["httptextpropagator",{"_index":44,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"classes/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{}}}],["httptextpropagatorservice",{"_index":19,"title":{"classes/HttpTextPropagatorService.html":{}},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"classes/HttpTextPropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{}}}],["httptracecontext",{"_index":149,"title":{},"body":{"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"index.html":{}}}],["httptracecontextpropagatormodule",{"_index":104,"title":{"modules/HttpTraceContextPropagatorModule.html":{}},"body":{"modules/CompositePropagatorModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["httptracecontextpropagatorservice",{"_index":112,"title":{"injectables/HttpTraceContextPropagatorService.html":{}},"body":{"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"coverage.html":{}}}],["id",{"_index":399,"title":{},"body":{"changelog.html":{}}}],["identification",{"_index":965,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":467,"title":{},"body":{"coverage.html":{}}}],["identifying",{"_index":954,"title":{},"body":{"license.html":{}}}],["iexporter",{"_index":140,"title":{"interfaces/IExporter.html":{}},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"coverage.html":{}}}],["ii",{"_index":664,"title":{},"body":{"license.html":{}}}],["iii",{"_index":670,"title":{},"body":{"license.html":{}}}],["implement",{"_index":565,"title":{},"body":{"index.html":{}}}],["implementation",{"_index":157,"title":{},"body":{"interfaces/IPropagator.html":{},"index.html":{}}}],["implements",{"_index":51,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"classes/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{}}}],["implied",{"_index":881,"title":{},"body":{"license.html":{}}}],["import",{"_index":10,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"classes/HttpTextPropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"index.html":{},"license.html":{}}}],["imports",{"_index":23,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"index.html":{}}}],["improving",{"_index":740,"title":{},"body":{"license.html":{}}}],["inability",{"_index":913,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":908,"title":{},"body":{"license.html":{}}}],["include",{"_index":712,"title":{},"body":{"license.html":{}}}],["included",{"_index":699,"title":{},"body":{"license.html":{}}}],["includes",{"_index":822,"title":{},"body":{"license.html":{}}}],["including",{"_index":680,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":723,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":749,"title":{},"body":{"license.html":{}}}],["incurred",{"_index":943,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":939,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":930,"title":{},"body":{"license.html":{}}}],["index",{"_index":36,"title":{"index.html":{}},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"classes/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"miscellaneous/variables.html":{}}}],["indicated",{"_index":697,"title":{},"body":{"license.html":{}}}],["indirect",{"_index":658,"title":{},"body":{"license.html":{}}}],["individual",{"_index":672,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"classes/HttpTextPropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"index.html":{}}}],["information",{"_index":955,"title":{},"body":{"license.html":{}}}],["informational",{"_index":833,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":782,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":796,"title":{},"body":{"license.html":{}}}],["initialise",{"_index":206,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["initspan",{"_index":186,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["initspan(request",{"_index":203,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject",{"_index":118,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{}}}],["inject(b3propagatorservice",{"_index":119,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(httptextpropagatorservice",{"_index":256,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject(httptracecontextpropagatorservice",{"_index":121,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(jaegerhttptracepropagatorservice",{"_index":122,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(opentelemetryinjectconfig",{"_index":254,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject(spanexporterservice",{"_index":255,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injectable",{"_index":32,"title":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"injectables/OtelcolExporterService.html":{}},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{}}}],["injectables",{"_index":33,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"injectables/OtelcolExporterService.html":{},"overview.html":{}}}],["injectcontextandheader",{"_index":187,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injectcontextandheader(span",{"_index":209,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injected",{"_index":192,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injection",{"_index":95,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"classes/HttpTextPropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"classes/SpanExporterService.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":75,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{}}}],["injectiontoken('opentelemetry.config",{"_index":97,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["inmplementation",{"_index":154,"title":{},"body":{"interfaces/IExporter.html":{}}}],["insert",{"_index":216,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["insertconsolespanexporter",{"_index":188,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertconsolespanexporter(console",{"_index":214,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertspanprocessorproductionmode",{"_index":189,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertspanprocessorproductionmode(production",{"_index":219,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["install",{"_index":525,"title":{},"body":{"index.html":{}}}],["installation",{"_index":518,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":271,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["institute",{"_index":786,"title":{},"body":{"license.html":{}}}],["intentionally",{"_index":721,"title":{},"body":{"license.html":{}}}],["intercept",{"_index":190,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["intercept(request",{"_index":225,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["intercepted",{"_index":208,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["interceptor",{"_index":177,"title":{"interceptors/OpenTelemetryHttpInterceptor.html":{}},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{},"index.html":{},"todo.html":{}}}],["interceptor.js",{"_index":595,"title":{},"body":{"index.html":{}}}],["interceptor.module.ts",{"_index":306,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor.module.ts:30",{"_index":310,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/opentelemetry",{"_index":315,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/src/lib/configuration/opentelemetry",{"_index":56,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptor/src/lib/interceptor/opentelemetry",{"_index":180,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{}}}],["interceptor/src/lib/opentelemetry",{"_index":305,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/src/lib/services/exporter/console/console",{"_index":128,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/exporter.interface.ts",{"_index":150,"title":{},"body":{"interfaces/IExporter.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/exporter.interface.ts:11",{"_index":152,"title":{},"body":{"interfaces/IExporter.html":{}}}],["interceptor/src/lib/services/exporter/otelcol/otelcol",{"_index":327,"title":{},"body":{"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/span",{"_index":345,"title":{},"body":{"classes/SpanExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/b3",{"_index":7,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/composite",{"_index":99,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/http",{"_index":144,"title":{},"body":{"classes/HttpTextPropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/jaeger",{"_index":158,"title":{},"body":{"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/noop",{"_index":173,"title":{},"body":{"modules/NoopHttpTextPropagatorModule.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/propagator.interface.ts",{"_index":155,"title":{},"body":{"interfaces/IPropagator.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/propagator.interface.ts:11",{"_index":156,"title":{},"body":{"interfaces/IPropagator.html":{}}}],["interceptors",{"_index":179,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["interface",{"_index":53,"title":{"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":55,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"license.html":{},"overview.html":{}}}],["ipropagator",{"_index":45,"title":{"interfaces/IPropagator.html":{}},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"classes/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"coverage.html":{}}}],["irrevocable",{"_index":762,"title":{},"body":{"license.html":{}}}],["issue",{"_index":735,"title":{},"body":{"license.html":{},"todo.html":{}}}],["it's",{"_index":198,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{},"todo.html":{}}}],["jaeger",{"_index":108,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{}}}],["jaegerconfiguration",{"_index":526,"title":{},"body":{"index.html":{}}}],["jaegerhttppropagator",{"_index":556,"title":{},"body":{"index.html":{}}}],["jaegerhttptracepropagator",{"_index":161,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["jaegerhttptracepropagator(this.customheader",{"_index":171,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["jaegerhttptracepropagatormodule",{"_index":107,"title":{"modules/JaegerHttpTracePropagatorModule.html":{}},"body":{"modules/CompositePropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["jaegerhttptracepropagatorservice",{"_index":113,"title":{"injectables/JaegerHttpTracePropagatorService.html":{}},"body":{"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["jaegerpropagator",{"_index":404,"title":{},"body":{"changelog.html":{}}}],["jaegerpropagatorconfig",{"_index":86,"title":{"interfaces/JaegerPropagatorConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["january",{"_index":628,"title":{},"body":{"license.html":{}}}],["js",{"_index":502,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["js/tree/master/packages/opentelemetry",{"_index":534,"title":{},"body":{"index.html":{}}}],["json.stringify(event.body",{"_index":276,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["json.stringify(event.error",{"_index":278,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["jsonp",{"_index":451,"title":{},"body":{"changelog.html":{}}}],["jufab/opentelemetry",{"_index":508,"title":{},"body":{"index.html":{}}}],["key",{"_index":85,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{}}}],["kind",{"_index":879,"title":{},"body":{"license.html":{}}}],["language",{"_index":973,"title":{},"body":{"license.html":{}}}],["law",{"_index":874,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":792,"title":{},"body":{"license.html":{}}}],["legal",{"_index":647,"title":{},"body":{"license.html":{}}}],["legend",{"_index":979,"title":{},"body":{"overview.html":{}}}],["liability",{"_index":897,"title":{},"body":{"license.html":{}}}],["liable",{"_index":905,"title":{},"body":{"license.html":{}}}],["library",{"_index":509,"title":{},"body":{"index.html":{}}}],["licensable",{"_index":780,"title":{},"body":{"license.html":{}}}],["license",{"_index":625,"title":{"license.html":{}},"body":{"license.html":{}}}],["license.you",{"_index":840,"title":{},"body":{"license.html":{}}}],["licensed",{"_index":968,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":797,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":641,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":882,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":975,"title":{},"body":{"license.html":{}}}],["limited",{"_index":681,"title":{},"body":{"license.html":{}}}],["link",{"_index":716,"title":{},"body":{"license.html":{}}}],["list",{"_index":548,"title":{},"body":{"index.html":{},"todo.html":{}}}],["lists",{"_index":733,"title":{},"body":{"license.html":{}}}],["literal",{"_index":330,"title":{},"body":{"interfaces/OtelCollectorConfig.html":{}}}],["litigation",{"_index":787,"title":{},"body":{"license.html":{}}}],["loaded",{"_index":322,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["loss",{"_index":914,"title":{},"body":{"license.html":{}}}],["losses",{"_index":921,"title":{},"body":{"license.html":{}}}],["made",{"_index":696,"title":{},"body":{"license.html":{}}}],["mailing",{"_index":732,"title":{},"body":{"license.html":{}}}],["make",{"_index":773,"title":{},"body":{"license.html":{}}}],["making",{"_index":678,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":919,"title":{},"body":{"license.html":{}}}],["managed",{"_index":737,"title":{},"body":{"license.html":{}}}],["management",{"_index":660,"title":{},"body":{"license.html":{}}}],["manager",{"_index":236,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["marked",{"_index":743,"title":{},"body":{"license.html":{}}}],["marks",{"_index":862,"title":{},"body":{"license.html":{}}}],["matching",{"_index":30,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"classes/HttpTextPropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["mean",{"_index":637,"title":{},"body":{"license.html":{}}}],["means",{"_index":655,"title":{},"body":{"license.html":{}}}],["mechanical",{"_index":686,"title":{},"body":{"license.html":{}}}],["media",{"_index":692,"title":{},"body":{"license.html":{}}}],["medium",{"_index":803,"title":{},"body":{"license.html":{}}}],["meet",{"_index":804,"title":{},"body":{"license.html":{}}}],["member",{"_index":614,"title":{},"body":{"index.html":{}}}],["merchantability",{"_index":884,"title":{},"body":{"license.html":{}}}],["merely",{"_index":715,"title":{},"body":{"license.html":{}}}],["method",{"_index":230,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["methods",{"_index":37,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"classes/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{}}}],["miscellaneous",{"_index":992,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":222,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["modifications",{"_index":679,"title":{},"body":{"license.html":{}}}],["modified",{"_index":809,"title":{},"body":{"license.html":{}}}],["modify",{"_index":834,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":839,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{}},"body":{"index.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":311,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["more",{"_index":514,"title":{},"body":{"index.html":{},"license.html":{},"todo.html":{}}}],["multi",{"_index":325,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["name",{"_index":73,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"index.html":{},"license.html":{}}}],["names",{"_index":861,"title":{},"body":{"license.html":{}}}],["namespace",{"_index":611,"title":{},"body":{"index.html":{}}}],["necessarily",{"_index":781,"title":{},"body":{"license.html":{}}}],["need",{"_index":616,"title":{},"body":{"index.html":{}}}],["negligence",{"_index":900,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":903,"title":{},"body":{"license.html":{}}}],["new",{"_index":52,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":226,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["next.handle(tracedreq).pipe",{"_index":269,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["ngcc",{"_index":370,"title":{},"body":{"changelog.html":{}}}],["ngmodule",{"_index":12,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"index.html":{}}}],["ngx",{"_index":500,"title":{},"body":{"dependencies.html":{}}}],["nodejs",{"_index":612,"title":{},"body":{"index.html":{}}}],["non",{"_index":757,"title":{},"body":{"license.html":{}}}],["noop",{"_index":176,"title":{},"body":{"modules/NoopHttpTextPropagatorModule.html":{}}}],["noophttptextpropagator",{"_index":163,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{}}}],["noophttptextpropagatormodule",{"_index":172,"title":{"modules/NoopHttpTextPropagatorModule.html":{}},"body":{"modules/NoopHttpTextPropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["noophttptextpropagatorservice",{"_index":175,"title":{"injectables/NoopHttpTextPropagatorService.html":{}},"body":{"modules/NoopHttpTextPropagatorModule.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"coverage.html":{}}}],["normally",{"_index":831,"title":{},"body":{"license.html":{}}}],["notable",{"_index":350,"title":{},"body":{"changelog.html":{}}}],["nothing",{"_index":851,"title":{},"body":{"license.html":{}}}],["notice",{"_index":698,"title":{},"body":{"license.html":{}}}],["notices",{"_index":812,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":849,"title":{},"body":{"license.html":{}}}],["npm",{"_index":524,"title":{},"body":{"index.html":{}}}],["number",{"_index":194,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["object",{"_index":684,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":931,"title":{},"body":{"license.html":{}}}],["observable",{"_index":234,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["obtain",{"_index":970,"title":{},"body":{"license.html":{}}}],["offer",{"_index":774,"title":{},"body":{"license.html":{}}}],["ok",{"_index":419,"title":{},"body":{"changelog.html":{}}}],["one",{"_index":557,"title":{},"body":{"index.html":{},"license.html":{}}}],["open",{"_index":577,"title":{},"body":{"index.html":{}}}],["opentelemetry",{"_index":76,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{},"todo.html":{}}}],["opentelemetry/api",{"_index":47,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"classes/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["opentelemetry/context",{"_index":607,"title":{},"body":{"index.html":{}}}],["opentelemetry/core",{"_index":48,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["opentelemetry/exporter",{"_index":337,"title":{},"body":{"injectables/OtelcolExporterService.html":{},"dependencies.html":{},"index.html":{}}}],["opentelemetry/propagator",{"_index":162,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"dependencies.html":{},"index.html":{}}}],["opentelemetry/tracing",{"_index":142,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"index.html":{}}}],["opentelemetry/web",{"_index":244,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"dependencies.html":{},"index.html":{}}}],["opentelemetryconfig",{"_index":90,"title":{"interfaces/OpenTelemetryConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{},"index.html":{}}}],["opentelemetryhttpinterceptor",{"_index":178,"title":{"interceptors/OpenTelemetryHttpInterceptor.html":{}},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"coverage.html":{}}}],["opentelemetryinjectconfig",{"_index":93,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["opentelemetryinterceptor",{"_index":182,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["opentelemetryinterceptormodule",{"_index":304,"title":{"modules/OpenTelemetryInterceptorModule.html":{}},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{},"modules.html":{}}}],["opentelemetryinterceptormodule.forroot(environment.opentelemetryconfig",{"_index":562,"title":{},"body":{"index.html":{}}}],["opentelemtery",{"_index":521,"title":{},"body":{"index.html":{}}}],["opentelemtry",{"_index":378,"title":{},"body":{"changelog.html":{}}}],["optimization",{"_index":600,"title":{},"body":{"index.html":{}}}],["optional",{"_index":61,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"index.html":{}}}],["options",{"_index":605,"title":{},"body":{"index.html":{}}}],["origin",{"_index":868,"title":{},"body":{"license.html":{}}}],["original",{"_index":213,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"license.html":{}}}],["otelcol",{"_index":329,"title":{},"body":{"modules/OtelColExporterModule.html":{},"changelog.html":{},"index.html":{}}}],["otelcolconfig",{"_index":92,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"index.html":{}}}],["otelcolexportermodule",{"_index":326,"title":{"modules/OtelColExporterModule.html":{}},"body":{"modules/OtelColExporterModule.html":{},"index.html":{},"modules.html":{}}}],["otelcolexporterservice",{"_index":328,"title":{"injectables/OtelcolExporterService.html":{}},"body":{"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{}}}],["otelcollectorconfig",{"_index":78,"title":{"interfaces/OtelCollectorConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["otherwise",{"_index":224,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"license.html":{}}}],["otlp",{"_index":380,"title":{},"body":{"changelog.html":{}}}],["out",{"_index":912,"title":{},"body":{"license.html":{},"overview.html":{}}}],["outstanding",{"_index":668,"title":{},"body":{"license.html":{}}}],["overide",{"_index":229,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["overview",{"_index":978,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":643,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":665,"title":{},"body":{"license.html":{}}}],["package",{"_index":483,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["page",{"_index":963,"title":{},"body":{"license.html":{}}}],["param",{"_index":167,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{}}}],["parameters",{"_index":115,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{}}}],["parent",{"_index":398,"title":{},"body":{"changelog.html":{}}}],["parentmodule",{"_index":318,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["parentorelsesampler",{"_index":248,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["parentorelsesampler(new",{"_index":303,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["parser",{"_index":496,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":820,"title":{},"body":{"license.html":{}}}],["particular",{"_index":886,"title":{},"body":{"license.html":{}}}],["party",{"_index":830,"title":{},"body":{"license.html":{}}}],["patent",{"_index":769,"title":{},"body":{"license.html":{}}}],["percent",{"_index":667,"title":{},"body":{"license.html":{}}}],["percentage",{"_index":539,"title":{},"body":{"index.html":{}}}],["perform",{"_index":766,"title":{},"body":{"license.html":{}}}],["permission",{"_index":859,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":674,"title":{},"body":{"license.html":{}}}],["perpetual",{"_index":755,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":819,"title":{},"body":{"license.html":{}}}],["places",{"_index":825,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":924,"title":{},"body":{"license.html":{}}}],["power",{"_index":656,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":677,"title":{},"body":{"license.html":{}}}],["prepare",{"_index":764,"title":{},"body":{"license.html":{},"todo.html":{}}}],["printed",{"_index":962,"title":{},"body":{"license.html":{}}}],["private",{"_index":120,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{}}}],["probability",{"_index":196,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["probabilitysampler",{"_index":63,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["problem",{"_index":397,"title":{},"body":{"changelog.html":{}}}],["product",{"_index":863,"title":{},"body":{"license.html":{}}}],["production",{"_index":64,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["progress",{"_index":424,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["project",{"_index":352,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{}}}],["projects/.../opentelemetry",{"_index":994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/example",{"_index":571,"title":{},"body":{"index.html":{}}}],["projects/opentelemetry",{"_index":6,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"classes/HttpTextPropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["prominent",{"_index":811,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":567,"title":{},"body":{"index.html":{}}}],["propagator",{"_index":88,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["propagator.interface",{"_index":46,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"classes/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{}}}],["propagator.module",{"_index":103,"title":{},"body":{"modules/CompositePropagatorModule.html":{}}}],["propagator.module.ts",{"_index":9,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopHttpTextPropagatorModule.html":{}}}],["propagator.service",{"_index":18,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["propagator.service.ts",{"_index":34,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"classes/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"coverage.html":{}}}],["propagator.service.ts:11",{"_index":145,"title":{},"body":{"classes/HttpTextPropagatorService.html":{}}}],["propagator.service.ts:16",{"_index":114,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{}}}],["propagator.service.ts:17",{"_index":40,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{}}}],["propagator.service.ts:29",{"_index":160,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["propagator.service.ts:33",{"_index":116,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["propagator/b3",{"_index":8,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["propagator/composite",{"_index":100,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["propagator/http",{"_index":106,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"coverage.html":{}}}],["propagator/jaeger",{"_index":109,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["propagator/noop",{"_index":174,"title":{},"body":{"modules/NoopHttpTextPropagatorModule.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"coverage.html":{}}}],["propagators",{"_index":123,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"index.html":{}}}],["properties",{"_index":60,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{}}}],["provide",{"_index":25,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"license.html":{}}}],["provided",{"_index":701,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":49,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{}}}],["providers",{"_index":24,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"index.html":{},"overview.html":{}}}],["provides",{"_index":876,"title":{},"body":{"license.html":{}}}],["public",{"_index":165,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"modules/OpenTelemetryInterceptorModule.html":{}}}],["publicly",{"_index":765,"title":{},"body":{"license.html":{}}}],["publish",{"_index":456,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":738,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":654,"title":{},"body":{"license.html":{}}}],["readable",{"_index":823,"title":{},"body":{"license.html":{}}}],["readme",{"_index":460,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["reason",{"_index":945,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":865,"title":{},"body":{"license.html":{}}}],["received",{"_index":747,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":806,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":547,"title":{},"body":{"index.html":{},"license.html":{}}}],["redistributing",{"_index":892,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":801,"title":{},"body":{"license.html":{}}}],["regarding",{"_index":857,"title":{},"body":{"license.html":{}}}],["release",{"_index":384,"title":{},"body":{"changelog.html":{}}}],["remain",{"_index":713,"title":{},"body":{"license.html":{}}}],["replaced",{"_index":953,"title":{},"body":{"license.html":{}}}],["represent",{"_index":710,"title":{},"body":{"license.html":{}}}],["representatives",{"_index":731,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":763,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":869,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":633,"title":{},"body":{"license.html":{}}}],["request",{"_index":207,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.clone",{"_index":297,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.headers.get(key",{"_index":296,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.headers.keys",{"_index":294,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.method",{"_index":286,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.url",{"_index":283,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.urlwithparams",{"_index":288,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["required",{"_index":864,"title":{},"body":{"license.html":{}}}],["reset",{"_index":981,"title":{},"body":{"overview.html":{}}}],["response",{"_index":569,"title":{},"body":{"index.html":{}}}],["responsibility",{"_index":937,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":888,"title":{},"body":{"license.html":{}}}],["result",{"_index":29,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"classes/HttpTextPropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["resulting",{"_index":685,"title":{},"body":{"license.html":{}}}],["results",{"_index":31,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"classes/HttpTextPropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":816,"title":{},"body":{"license.html":{}}}],["return",{"_index":41,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"classes/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{}}}],["returns",{"_index":43,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"classes/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{}}}],["review",{"_index":412,"title":{},"body":{"changelog.html":{}}}],["revisions",{"_index":707,"title":{},"body":{"license.html":{}}}],["rights",{"_index":933,"title":{},"body":{"license.html":{}}}],["risks",{"_index":894,"title":{},"body":{"license.html":{}}}],["root",{"_index":50,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{}}}],["royalty",{"_index":760,"title":{},"body":{"license.html":{}}}],["run",{"_index":520,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":243,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":251,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["same",{"_index":961,"title":{},"body":{"license.html":{}}}],["sample",{"_index":202,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["sampleconfig",{"_index":201,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["sampler",{"_index":197,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"todo.html":{}}}],["samples",{"_index":537,"title":{},"body":{"index.html":{}}}],["sampling",{"_index":421,"title":{},"body":{"changelog.html":{}}}],["section",{"_index":772,"title":{},"body":{"license.html":{}}}],["sections",{"_index":638,"title":{},"body":{"license.html":{}}}],["see",{"_index":354,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["sell",{"_index":775,"title":{},"body":{"license.html":{}}}],["send",{"_index":531,"title":{},"body":{"index.html":{}}}],["sending",{"_index":593,"title":{},"body":{"index.html":{}}}],["sent",{"_index":730,"title":{},"body":{"license.html":{}}}],["separable",{"_index":714,"title":{},"body":{"license.html":{}}}],["separate",{"_index":854,"title":{},"body":{"license.html":{}}}],["service",{"_index":74,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{},"license.html":{}}}],["servicename",{"_index":65,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"index.html":{}}}],["services/exporter/span",{"_index":252,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["services/propagator/http",{"_index":253,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["setactivespan",{"_index":247,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["setheaders",{"_index":298,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["shall",{"_index":636,"title":{},"body":{"license.html":{}}}],["shares",{"_index":669,"title":{},"body":{"license.html":{}}}],["simplespanexporter(sync",{"_index":72,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{}}}],["simplespanprocessor",{"_index":223,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["simplespanprocessor(new",{"_index":300,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["simplespanprocessor(spanexporter",{"_index":302,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["skipself",{"_index":312,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["software",{"_index":682,"title":{},"body":{"license.html":{}}}],["sole",{"_index":936,"title":{},"body":{"license.html":{}}}],["solely",{"_index":887,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"classes/HttpTextPropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"license.html":{}}}],["span",{"_index":129,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OtelColExporterModule.html":{},"coverage.html":{},"index.html":{}}}],["span.addevent('error",{"_index":277,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.addevent('response",{"_index":274,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.end",{"_index":279,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.setattribute('http.status_code",{"_index":272,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["spanexporter",{"_index":139,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{}}}],["spanexporterservice",{"_index":133,"title":{"classes/SpanExporterService.html":{}},"body":{"modules/ConsoleSpanExporterModule.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OtelColExporterModule.html":{},"classes/SpanExporterService.html":{},"coverage.html":{}}}],["special",{"_index":907,"title":{},"body":{"license.html":{}}}],["specific",{"_index":972,"title":{},"body":{"license.html":{}}}],["stackcontextmanager",{"_index":235,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["standard",{"_index":355,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":573,"title":{},"body":{"index.html":{}}}],["start:complete",{"_index":575,"title":{},"body":{"index.html":{}}}],["started",{"_index":348,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["startspan",{"_index":282,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["state",{"_index":848,"title":{},"body":{"license.html":{}}}],["stated",{"_index":771,"title":{},"body":{"license.html":{}}}],["statement",{"_index":841,"title":{},"body":{"license.html":{}}}],["statements",{"_index":468,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":307,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["stating",{"_index":813,"title":{},"body":{"license.html":{}}}],["stoppage",{"_index":916,"title":{},"body":{"license.html":{}}}],["string",{"_index":69,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["subject",{"_index":450,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["sublicense",{"_index":767,"title":{},"body":{"license.html":{}}}],["submission",{"_index":844,"title":{},"body":{"license.html":{}}}],["submit",{"_index":724,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":722,"title":{},"body":{"license.html":{}}}],["subsequently",{"_index":748,"title":{},"body":{"license.html":{}}}],["such",{"_index":661,"title":{},"body":{"license.html":{}}}],["supersede",{"_index":853,"title":{},"body":{"license.html":{}}}],["support",{"_index":929,"title":{},"body":{"license.html":{}}}],["sync",{"_index":546,"title":{},"body":{"index.html":{}}}],["syntax",{"_index":959,"title":{},"body":{"license.html":{}}}],["systems",{"_index":734,"title":{},"body":{"license.html":{}}}],["table",{"_index":482,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":481,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":249,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["task",{"_index":985,"title":{},"body":{"todo.html":{}}}],["telemetry/opentelemetry",{"_index":533,"title":{},"body":{"index.html":{},"todo.html":{}}}],["terminate",{"_index":798,"title":{},"body":{"license.html":{}}}],["terms",{"_index":631,"title":{},"body":{"license.html":{}}}],["test",{"_index":389,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["text",{"_index":21,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"classes/HttpTextPropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{},"license.html":{}}}],["theory",{"_index":898,"title":{},"body":{"license.html":{}}}],["there's",{"_index":580,"title":{},"body":{"index.html":{}}}],["thereof",{"_index":718,"title":{},"body":{"license.html":{}}}],["third",{"_index":829,"title":{},"body":{"license.html":{}}}],["this.b3propagatorservice.getpropagator",{"_index":124,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.config.commonconfig.production",{"_index":260,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager",{"_index":265,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager._currentcontext",{"_index":290,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager.active",{"_index":289,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.customheader",{"_index":169,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["this.defineprobabilitysampler(number(config.commonconfig.probabilitysampler",{"_index":258,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.httptextpropagatorservice.getpropagator",{"_index":264,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.httptracecontextpropagatorservice.getpropagator",{"_index":125,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.initspan(request",{"_index":266,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.injectcontextandheader(span",{"_index":268,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.insertconsolespanexporter(this.config.commonconfig.console",{"_index":262,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.insertspanprocessorproductionmode",{"_index":259,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.jaegerhttptracepropagatorservice.getpropagator",{"_index":126,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.otelcolconfig",{"_index":340,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["this.spanexporterservice.getexporter",{"_index":261,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer",{"_index":257,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer.addspanprocessor",{"_index":299,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer.register",{"_index":263,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["those",{"_index":778,"title":{},"body":{"license.html":{}}}],["through",{"_index":639,"title":{},"body":{"license.html":{}}}],["throw",{"_index":319,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["timeout",{"_index":615,"title":{},"body":{"index.html":{}}}],["title",{"_index":883,"title":{},"body":{"license.html":{}}}],["todo",{"_index":984,"title":{"todo.html":{}},"body":{"todo.html":{}}}],["tort",{"_index":899,"title":{},"body":{"license.html":{}}}],["trace",{"_index":68,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["tracedreq",{"_index":267,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["traceid",{"_index":406,"title":{},"body":{"changelog.html":{}}}],["tracer",{"_index":184,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["traces",{"_index":540,"title":{},"body":{"index.html":{}}}],["tracking",{"_index":736,"title":{},"body":{"license.html":{}}}],["trade",{"_index":860,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":817,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":858,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":776,"title":{},"body":{"license.html":{}}}],["transformation",{"_index":687,"title":{},"body":{"license.html":{}}}],["translation",{"_index":688,"title":{},"body":{"license.html":{}}}],["trouble",{"_index":371,"title":{},"body":{"changelog.html":{}}}],["troubleshoot",{"_index":522,"title":{},"body":{"index.html":{}}}],["true",{"_index":217,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["ts1086",{"_index":620,"title":{},"body":{"index.html":{}}}],["ts2694",{"_index":610,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":505,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":67,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{}}}],["type/node",{"_index":618,"title":{},"body":{"index.html":{}}}],["types",{"_index":693,"title":{},"body":{"license.html":{}}}],["typescript",{"_index":624,"title":{},"body":{"index.html":{}}}],["typo",{"_index":462,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":148,"title":{},"body":{"classes/HttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"classes/SpanExporterService.html":{}}}],["under",{"_index":653,"title":{},"body":{"license.html":{}}}],["union",{"_index":648,"title":{},"body":{"license.html":{}}}],["unless",{"_index":846,"title":{},"body":{"license.html":{}}}],["unused",{"_index":445,"title":{},"body":{"changelog.html":{}}}],["up",{"_index":587,"title":{},"body":{"index.html":{}}}],["update",{"_index":376,"title":{},"body":{"changelog.html":{}}}],["upgrade",{"_index":365,"title":{},"body":{"changelog.html":{}}}],["url",{"_index":79,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"index.html":{}}}],["use",{"_index":70,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["useclass",{"_index":26,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{}}}],["used",{"_index":146,"title":{},"body":{"classes/HttpTextPropagatorService.html":{},"classes/SpanExporterService.html":{},"index.html":{}}}],["uses",{"_index":515,"title":{},"body":{"index.html":{}}}],["usevalue",{"_index":324,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["using",{"_index":891,"title":{},"body":{"license.html":{}}}],["value",{"_index":81,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":474,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":993,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verbal",{"_index":727,"title":{},"body":{"license.html":{}}}],["version",{"_index":356,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["via",{"_index":544,"title":{},"body":{"index.html":{}}}],["void",{"_index":218,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["want",{"_index":579,"title":{},"body":{"index.html":{}}}],["warning",{"_index":523,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":878,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":872,"title":{},"body":{"license.html":{}}}],["webtracerprovider",{"_index":237,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["wherever",{"_index":828,"title":{},"body":{"license.html":{}}}],["whether",{"_index":662,"title":{},"body":{"license.html":{}}}],["whole",{"_index":711,"title":{},"body":{"license.html":{}}}],["within",{"_index":750,"title":{},"body":{"license.html":{}}}],["without",{"_index":591,"title":{},"body":{"index.html":{},"license.html":{}}}],["work",{"_index":694,"title":{},"body":{"license.html":{},"todo.html":{}}}],["works",{"_index":433,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["worldwide",{"_index":756,"title":{},"body":{"license.html":{}}}],["writing",{"_index":745,"title":{},"body":{"license.html":{}}}],["written",{"_index":728,"title":{},"body":{"license.html":{}}}],["xsrf",{"_index":452,"title":{},"body":{"changelog.html":{}}}],["xxx/fesm2015/jufab",{"_index":594,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":967,"title":{},"body":{"license.html":{}}}],["zipkin",{"_index":987,"title":{},"body":{"todo.html":{}}}],["zone.js",{"_index":507,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":980,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/B3PropagatorModule.html":{"url":"modules/B3PropagatorModule.html","title":"module - B3PropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    B3PropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { B3PropagatorService } from './b3-propagator.service';\nimport { HttpTextPropagatorService } from '../http-text-propagator.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    { provide: HttpTextPropagatorService, useClass: B3PropagatorService }\n  ]\n})\nexport class B3PropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/B3PropagatorService.html":{"url":"injectables/B3PropagatorService.html","title":"injectable - B3PropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  B3PropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                B3PropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts:17\n                \n            \n\n\n            \n                \n                    Return an B3Propagator\n\n\n                    \n                    \n                    \n                        Returns :     HttpTextPropagator\n\n                    \n                    \n                        HttpTextPropagator as B3Propagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { HttpTextPropagator } from '@opentelemetry/api';\nimport { B3Propagator } from '@opentelemetry/core';\n\n/**\n * B3PropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class B3PropagatorService implements IPropagator {\n  /**\n   * Return an B3Propagator\n   * @return HttpTextPropagator as B3Propagator\n   */\n  getPropagator(): HttpTextPropagator {\n    return new B3Propagator();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommonCollectorConfig.html":{"url":"interfaces/CommonCollectorConfig.html","title":"interface - CommonCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CommonCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                Common configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        console\n                                \n                                \n                                            Optional\n                                        probabilitySampler\n                                \n                                \n                                            Optional\n                                        production\n                                \n                                \n                                        serviceName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        console\n                                    \n                                \n                                \n                                    \n                                        console:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    console : boolean to trace in console \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        probabilitySampler\n                                    \n                                \n                                \n                                    \n                                        probabilitySampler:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    probabilitySampler \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        production\n                                    \n                                \n                                \n                                    \n                                        production:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serviceName\n                                    \n                                \n                                \n                                    \n                                        serviceName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    serviceName : Name of service in trace \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompositePropagatorModule.html":{"url":"modules/CompositePropagatorModule.html","title":"module - CompositePropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    CompositePropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpTextPropagatorService } from '../http-text-propagator.service';\nimport { CompositePropagatorService } from './composite-propagator.service';\nimport { B3PropagatorModule } from '../b3-propagator/b3-propagator.module';\nimport { HttpTraceContextPropagatorModule } from '../http-trace-context-propagator/http-trace-context-propagator.module';\nimport { JaegerHttpTracePropagatorModule } from '../jaeger-http-trace-propagator/jaeger-http-trace-propagator.module';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    { provide: HttpTextPropagatorService, useClass: CompositePropagatorService }\n  ]\n})\nexport class CompositePropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompositePropagatorService.html":{"url":"injectables/CompositePropagatorService.html","title":"injectable - CompositePropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CompositePropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                CompositePropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(b3PropagatorService: B3PropagatorService, httpTraceContextPropagatorService: HttpTraceContextPropagatorService, jaegerHttpTracePropagatorService: JaegerHttpTracePropagatorService)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts:16\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        b3PropagatorService\n                                                  \n                                                        \n                                                                        B3PropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpTraceContextPropagatorService\n                                                  \n                                                        \n                                                                        HttpTraceContextPropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jaegerHttpTracePropagatorService\n                                                  \n                                                        \n                                                                        JaegerHttpTracePropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts:33\n                \n            \n\n\n            \n                \n                    Return an CompositePropagator\n\n\n                    \n                    \n                    \n                        Returns :     HttpTextPropagator\n\n                    \n                    \n                        HttpTextPropagator as CompositePropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { HttpTextPropagator } from '@opentelemetry/api';\nimport {\n  CompositePropagator,\n} from '@opentelemetry/core';\nimport { B3PropagatorService } from '../b3-propagator/b3-propagator.service';\nimport { HttpTraceContextPropagatorService } from '../http-trace-context-propagator/http-trace-context-propagator.service';\nimport { JaegerHttpTracePropagatorService } from '../jaeger-http-trace-propagator/jaeger-http-trace-propagator.service';\n/**\n * CompositePropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CompositePropagatorService implements IPropagator {\n  /**\n   * Constructor\n   */\n  constructor(\n    @Inject(B3PropagatorService)\n    private b3PropagatorService: B3PropagatorService,\n    @Inject(HttpTraceContextPropagatorService)\n    private httpTraceContextPropagatorService: HttpTraceContextPropagatorService,\n    @Inject(JaegerHttpTracePropagatorService)\n    private jaegerHttpTracePropagatorService: JaegerHttpTracePropagatorService\n  ) {}\n\n  /**\n   * Return an CompositePropagator\n   * @return HttpTextPropagator as CompositePropagator\n   */\n  getPropagator(): HttpTextPropagator {\n    return new CompositePropagator({\n      propagators: [\n        this.b3PropagatorService.getPropagator(),\n        this.httpTraceContextPropagatorService.getPropagator(),\n        this.jaegerHttpTracePropagatorService.getPropagator(),\n      ],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConsoleSpanExporterModule.html":{"url":"modules/ConsoleSpanExporterModule.html","title":"module - ConsoleSpanExporterModule","body":"\n                   \n\n\n\n\n    Modules\n    ConsoleSpanExporterModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ConsoleSpanExporterService } from './console-span-exporter.service';\nimport { SpanExporterService } from '../span-exporter.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    { provide: SpanExporterService, useClass: ConsoleSpanExporterService }\n  ]\n})\nexport class ConsoleSpanExporterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsoleSpanExporterService.html":{"url":"injectables/ConsoleSpanExporterService.html","title":"injectable - ConsoleSpanExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConsoleSpanExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.service.ts\n        \n\n            \n                Description\n            \n            \n                ConsoleSpanExporterService\nA default span exporter\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.service.ts:17\n                \n            \n\n\n            \n                \n                    Return a ConsoleSpanExporter\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IExporter } from '../exporter.interface';\nimport { SpanExporter, ConsoleSpanExporter } from '@opentelemetry/tracing';\n\n/**\n * ConsoleSpanExporterService\n * A default span exporter\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConsoleSpanExporterService implements IExporter {\n  /**\n   * Return a ConsoleSpanExporter\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter {\n    return new ConsoleSpanExporter();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpTextPropagatorService.html":{"url":"classes/HttpTextPropagatorService.html","title":"class - HttpTextPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpTextPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/http-text-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                HttpTextPropagatorService\n\n            \n\n\n            \n                Implements\n            \n            \n                            IPropagator\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/http-text-propagator.service.ts:11\n                \n            \n\n\n            \n                \n                    Not used, just a definition for injection\n\n\n                    \n                        Returns :     HttpTextPropagator\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpTextPropagator } from '@opentelemetry/api';\nimport { IPropagator } from './propagator.interface';\n\n/**\n * HttpTextPropagatorService\n */\nexport class HttpTextPropagatorService implements IPropagator {\n  /**\n   * Not used, just a definition for injection\n   */\n  getPropagator(): HttpTextPropagator {\n    return undefined;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HttpTraceContextPropagatorModule.html":{"url":"modules/HttpTraceContextPropagatorModule.html","title":"module - HttpTraceContextPropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    HttpTraceContextPropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator/http-trace-context-propagator.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpTextPropagatorService } from '../http-text-propagator.service';\nimport { HttpTraceContextPropagatorService } from './http-trace-context-propagator.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    { provide: HttpTextPropagatorService, useClass: HttpTraceContextPropagatorService }\n  ]\n})\nexport class  HttpTraceContextPropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpTraceContextPropagatorService.html":{"url":"injectables/HttpTraceContextPropagatorService.html","title":"injectable - HttpTraceContextPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpTraceContextPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator/http-trace-context-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                HttpTraceContextPropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator/http-trace-context-propagator.service.ts:17\n                \n            \n\n\n            \n                \n                    Return an HttpTraceContext\n\n\n                    \n                    \n                    \n                        Returns :     HttpTextPropagator\n\n                    \n                    \n                        HttpTextPropagator as HttpTraceContext\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { HttpTextPropagator } from '@opentelemetry/api';\nimport { HttpTraceContext } from '@opentelemetry/core';\n\n/**\n * HttpTraceContextPropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class HttpTraceContextPropagatorService implements IPropagator {\n  /**\n   * Return an HttpTraceContext\n   * @return HttpTextPropagator as HttpTraceContext\n   */\n  getPropagator(): HttpTextPropagator {\n    return new HttpTraceContext();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IExporter.html":{"url":"interfaces/IExporter.html","title":"interface - IExporter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IExporter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n        \n\n            \n                Description\n            \n            \n                Exporter interface to define a default exporter\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getExporter\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts:11\n                \n            \n\n\n            \n                \n                    give an inmplementation of SpanExporter\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { SpanExporter } from '@opentelemetry/tracing';\n\n/**\n * Exporter interface to define a default exporter\n */\nexport interface IExporter {\n  /**\n   * give an inmplementation of SpanExporter\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPropagator.html":{"url":"interfaces/IPropagator.html","title":"interface - IPropagator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPropagator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n        \n\n            \n                Description\n            \n            \n                Interface to define propagator\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getPropagator\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts:11\n                \n            \n\n\n            \n                \n                    give an implementation of a propagator\n\n\n                    \n                    \n                    \n                        Returns :     HttpTextPropagator\n\n                    \n                    \n                        HttpTextPropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpTextPropagator } from '@opentelemetry/api';\n\n/**\n * Interface to define propagator\n */\nexport interface IPropagator {\n  /**\n   * give an implementation of a propagator\n   * @return HttpTextPropagator\n   */\n  getPropagator(): HttpTextPropagator;\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JaegerHttpTracePropagatorModule.html":{"url":"modules/JaegerHttpTracePropagatorModule.html","title":"module - JaegerHttpTracePropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    JaegerHttpTracePropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpTextPropagatorService } from '../http-text-propagator.service';\nimport { JaegerHttpTracePropagatorService } from './jaeger-http-trace-propagator.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    { provide: HttpTextPropagatorService, useClass: JaegerHttpTracePropagatorService }\n  ]\n})\nexport class JaegerHttpTracePropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JaegerHttpTracePropagatorService.html":{"url":"injectables/JaegerHttpTracePropagatorService.html","title":"injectable - JaegerHttpTracePropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JaegerHttpTracePropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                JaegerHttpTracePropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                customHeader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts:16\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts:29\n                \n            \n\n\n            \n                \n                    Return an HttpTraceContext\n\n\n                    \n                    \n                    \n                        Returns :     HttpTextPropagator\n\n                    \n                    \n                        HttpTextPropagator as HttpTraceContext\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            customHeader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { HttpTextPropagator } from '@opentelemetry/api';\nimport { JaegerHttpTracePropagator } from '@opentelemetry/propagator-jaeger';\nimport { NoopHttpTextPropagator } from '@opentelemetry/api';\nimport { OpenTelemetryInjectConfig } from '../../../configuration/opentelemetry-config';\nimport { OpenTelemetryConfig } from '../../../../public-api';\n\n/**\n * JaegerHttpTracePropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JaegerHttpTracePropagatorService implements IPropagator {\n  private customHeader: string;\n  /**\n   * Constructor\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OpenTelemetryInjectConfig) config: OpenTelemetryConfig) {\n    this.customHeader = config.jaegerPropagatorConfig?.customHeader;\n  }\n\n  /**\n   * Return an HttpTraceContext\n   * @return HttpTextPropagator as HttpTraceContext\n   */\n  getPropagator(): HttpTextPropagator {\n    return new JaegerHttpTracePropagator(this.customHeader);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JaegerPropagatorConfig.html":{"url":"interfaces/JaegerPropagatorConfig.html","title":"interface - JaegerPropagatorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JaegerPropagatorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for JaegerPropagatorConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        customHeader\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customHeader\n                                    \n                                \n                                \n                                    \n                                        customHeader:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A custom Header for the propagator\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NoopHttpTextPropagatorModule.html":{"url":"modules/NoopHttpTextPropagatorModule.html","title":"module - NoopHttpTextPropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    NoopHttpTextPropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-http-text-propagator.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpTextPropagatorService } from '../http-text-propagator.service';\nimport { NoopHttpTextPropagatorService } from './noop-http-text-propagator.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    { provide: HttpTextPropagatorService, useClass: NoopHttpTextPropagatorService }\n  ]\n})\nexport class NoopHttpTextPropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NoopHttpTextPropagatorService.html":{"url":"injectables/NoopHttpTextPropagatorService.html","title":"injectable - NoopHttpTextPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NoopHttpTextPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-http-text-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                NoopHttpTextPropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-http-text-propagator.service.ts:16\n                \n            \n\n\n            \n                \n                    Return an NoopHttpTextPropagator\n\n\n                    \n                    \n                    \n                        Returns :     HttpTextPropagator\n\n                    \n                    \n                        HttpTextPropagator as NoopHttpTextPropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { HttpTextPropagator, NoopHttpTextPropagator } from '@opentelemetry/api';\n\n/**\n * NoopHttpTextPropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class NoopHttpTextPropagatorService implements IPropagator {\n  /**\n   * Return an NoopHttpTextPropagator\n   * @return HttpTextPropagator as NoopHttpTextPropagator\n   */\n  getPropagator(): HttpTextPropagator {\n    return new NoopHttpTextPropagator();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OpenTelemetryConfig.html":{"url":"interfaces/OpenTelemetryConfig.html","title":"interface - OpenTelemetryConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OpenTelemetryConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                OpenTelemetryConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        commonConfig\n                                \n                                \n                                            Optional\n                                        jaegerPropagatorConfig\n                                \n                                \n                                            Optional\n                                        otelcolConfig\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        commonConfig\n                                    \n                                \n                                \n                                    \n                                        commonConfig:         CommonCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CommonCollectorConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    commonConfig \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jaegerPropagatorConfig\n                                    \n                                \n                                \n                                    \n                                        jaegerPropagatorConfig:         JaegerPropagatorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         JaegerPropagatorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    jaegerPropagatorConfig \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        otelcolConfig\n                                    \n                                \n                                \n                                    \n                                        otelcolConfig:         OtelCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OtelCollectorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    otelcolConfig \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/OpenTelemetryHttpInterceptor.html":{"url":"interceptors/OpenTelemetryHttpInterceptor.html","title":"interceptor - OpenTelemetryHttpInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  OpenTelemetryHttpInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                OpenTelemetryInterceptor class\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contextManager\n                            \n                            \n                                tracer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                defineProbabilitySampler\n                            \n                            \n                                    Private\n                                initSpan\n                            \n                            \n                                    Private\n                                injectContextAndHeader\n                            \n                            \n                                    Private\n                                insertConsoleSpanExporter\n                            \n                            \n                                    Private\n                                insertSpanProcessorProductionMode\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig, spanExporterService: SpanExporterService, httpTextPropagatorService: HttpTextPropagatorService)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:49\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                configuration\n\n                                                        \n                                                \n                                                \n                                                        spanExporterService\n                                                  \n                                                        \n                                                                        SpanExporterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service exporter injected\n\n                                                        \n                                                \n                                                \n                                                        httpTextPropagatorService\n                                                  \n                                                        \n                                                                        HttpTextPropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                propagator\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            defineProbabilitySampler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defineProbabilitySampler(sampleConfig: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:192\n                \n            \n\n\n            \n                \n                    define the Probability Sampler\nBy Default, it's always (or 1)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sampleConfig\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the sample configuration\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Sampler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initSpan\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initSpan(request: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:115\n                \n            \n\n\n            \n                \n                    Initialise a span for a request intercepted\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Span\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            injectContextAndHeader\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    injectContextAndHeader(span: Span, request: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:140\n                \n            \n\n\n            \n                \n                    Add header propagator in request and conserve original header\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    span\n                                    \n                                            Span\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        span\n\n                                    \n                                \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            insertConsoleSpanExporter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertConsoleSpanExporter(console: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:162\n                \n            \n\n\n            \n                \n                    Insert in tracer the console span if config is true\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    console\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        config to insert console span\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            insertSpanProcessorProductionMode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertSpanProcessorProductionMode(production: boolean, spanExporter: SpanExporter)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:176\n                \n            \n\n\n            \n                \n                    Insert BatchSpanProcessor in production mode\nSimpleSpanProcessor otherwise\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    production\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mode\n\n                                    \n                                \n                                \n                                    spanExporter\n                                    \n                                            SpanExporter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Exporter\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:83\n                \n            \n\n\n            \n                \n                    Overide method\nInterceptor from HttpInterceptor Angular\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the current request\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        next\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contextManager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     StackContextManager\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:49\n                            \n                        \n\n                \n                    \n                        context manager\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tracer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     WebTracerProvider\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:45\n                            \n                        \n\n                \n                    \n                        tracer\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpResponse,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport * as api from '@opentelemetry/api';\nimport { Sampler, Span } from '@opentelemetry/api';\nimport { WebTracerProvider, StackContextManager } from '@opentelemetry/web';\nimport {\n  SimpleSpanProcessor,\n  ConsoleSpanExporter,\n  BatchSpanProcessor,\n  SpanExporter,\n} from '@opentelemetry/tracing';\nimport {\n  AlwaysOnSampler,\n  AlwaysOffSampler,\n  setActiveSpan,\n  ProbabilitySampler,\n  ParentOrElseSampler,\n} from '@opentelemetry/core';\nimport { tap, finalize } from 'rxjs/operators';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n} from '../configuration/opentelemetry-config';\nimport { SpanExporterService } from '../services/exporter/span-exporter.service';\nimport { HttpTextPropagatorService } from '../services/propagator/http-text-propagator.service';\n\n/**\n * OpenTelemetryInterceptor class\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OpenTelemetryHttpInterceptor implements HttpInterceptor {\n  /**\n   * tracer\n   */\n  tracer: WebTracerProvider;\n  /**\n   * context manager\n   */\n  contextManager: StackContextManager;\n\n  /**\n   * constructor\n   * @param config configuration\n   * @param spanExporterService service exporter injected\n   * @param httpTextPropagatorService propagator\n   */\n  constructor(\n    @Inject(OpenTelemetryInjectConfig) private config: OpenTelemetryConfig,\n    @Inject(SpanExporterService)\n    private spanExporterService: SpanExporterService,\n    @Inject(HttpTextPropagatorService)\n    private httpTextPropagatorService: HttpTextPropagatorService\n  ) {\n    this.tracer = new WebTracerProvider({\n      sampler: this.defineProbabilitySampler(Number(config.commonConfig.probabilitySampler)),\n    });\n    this.insertSpanProcessorProductionMode(\n      this.config.commonConfig.production,\n      this.spanExporterService.getExporter()\n    );\n    this.insertConsoleSpanExporter(this.config.commonConfig.console);\n    this.tracer.register({\n      propagator: this.httpTextPropagatorService.getPropagator(),\n    });\n  }\n\n  /**\n   * Overide method\n   * Interceptor from HttpInterceptor Angular\n   * @param request the current request\n   * @param next next\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    this.contextManager = new StackContextManager();\n    const span: Span = this.initSpan(request);\n    const tracedReq = this.injectContextAndHeader(span, request);\n    return next.handle(tracedReq).pipe(\n      tap(\n        (event: HttpEvent) => {\n          if (event instanceof HttpResponse) {\n            span.setAttribute('http.status_code', event.status);\n            span.addEvent('response', { body: JSON.stringify(event.body) });\n          }\n        },\n        (event: HttpErrorResponse) => {\n          if (event instanceof HttpErrorResponse) {\n            span.setAttribute('http.status_code', event.status);\n            span.addEvent('error', { body: JSON.stringify(event.error) });\n          }\n        }\n      ),\n      finalize(() => {\n        span.end();\n      })\n    );\n  }\n\n  /**\n   * Initialise a span for a request intercepted\n   * @param request request\n   */\n  private initSpan(request: HttpRequest): Span {\n    const span = this.tracer\n      .getTracer('angular-interceptor', '0.0.1')\n      .startSpan(\n        request.url,\n        {\n          attributes: {\n            ['http.method']: request.method,\n            ['http.url']: request.urlWithParams,\n          },\n        },\n        this.contextManager.active()\n      );\n    this.contextManager._currentContext = setActiveSpan(\n      this.contextManager.active(),\n      span\n    );\n    return span;\n  }\n\n  /**\n   * Add header propagator in request and conserve original header\n   * @param span span\n   * @param request request\n   */\n  private injectContextAndHeader(\n    span: Span,\n    request: HttpRequest\n  ) {\n    const carrier = {};\n    api.propagation.inject(\n      carrier,\n      api.defaultSetter,\n      this.contextManager.active()\n    );\n    for (const key in request.headers.keys) {\n      carrier[key] = request.headers.get(key);\n    }\n    return request.clone({\n      setHeaders: carrier,\n    });\n  }\n\n  /**\n   * Insert in tracer the console span if config is true\n   * @param console config to insert console span\n   */\n  private insertConsoleSpanExporter(console: boolean) {\n    if (console) {\n      this.tracer.addSpanProcessor(\n        new SimpleSpanProcessor(new ConsoleSpanExporter())\n      );\n    }\n  }\n\n  /**\n   * Insert BatchSpanProcessor in production mode\n   * SimpleSpanProcessor otherwise\n   * @param production mode\n   * @param spanExporter Exporter\n   */\n  private insertSpanProcessorProductionMode(\n    production: boolean,\n    spanExporter: SpanExporter\n  ) {\n    this.tracer.addSpanProcessor(\n      production\n        ? new BatchSpanProcessor(spanExporter)\n        : new SimpleSpanProcessor(spanExporter)\n    );\n  }\n\n  /**\n   * define the Probability Sampler\n   * By Default, it's always (or 1)\n   * @param sampleConfig the sample configuration\n   */\n  private defineProbabilitySampler(sampleConfig: number): Sampler {\n    if (sampleConfig === undefined || sampleConfig > 1) {\n      return new ParentOrElseSampler(new AlwaysOnSampler());\n    }\n    else if (sampleConfig \n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OpenTelemetryInterceptorModule.html":{"url":"modules/OpenTelemetryInterceptorModule.html","title":"module - OpenTelemetryInterceptorModule","body":"\n                   \n\n\n\n\n    Modules\n    OpenTelemetryInterceptorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/opentelemetry-interceptor.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: OpenTelemetryConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/opentelemetry-interceptor.module.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                OpenTelemetryConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  NgModule,\n  ModuleWithProviders,\n  Optional,\n  SkipSelf,\n} from '@angular/core';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n} from './configuration/opentelemetry-config';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { OpenTelemetryHttpInterceptor } from './interceptor/opentelemetry-http.interceptor';\n\n@NgModule({\n  declarations: [],\n  imports: [HttpClientModule],\n  exports: [],\n})\nexport class OpenTelemetryInterceptorModule {\n  constructor(\n    @Optional() @SkipSelf() parentModule?: OpenTelemetryInterceptorModule\n  ) {\n    if (parentModule) {\n      throw new Error(\n        'OpentelemetryInterceptorModule is already loaded. Import it in the AppModule only'\n      );\n    }\n  }\n\n  public static forRoot(config: OpenTelemetryConfig): ModuleWithProviders {\n    return {\n      ngModule: OpenTelemetryInterceptorModule,\n      providers: [\n        { provide: OpenTelemetryInjectConfig, useValue: config },\n        {\n          provide: HTTP_INTERCEPTORS,\n          useClass: OpenTelemetryHttpInterceptor,\n          multi: true,\n        },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OtelColExporterModule.html":{"url":"modules/OtelColExporterModule.html","title":"module - OtelColExporterModule","body":"\n                   \n\n\n\n\n    Modules\n    OtelColExporterModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OtelcolExporterService } from './otelcol-exporter.service';\nimport { SpanExporterService } from '../span-exporter.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    { provide: SpanExporterService, useClass: OtelcolExporterService }\n  ]\n})\nexport class OtelColExporterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OtelCollectorConfig.html":{"url":"interfaces/OtelCollectorConfig.html","title":"interface - OtelCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OtelCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                OpenTelemetry Collector configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        headers\n                                \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    custom headers\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An url (Default value: http://localhost:55681/v1/trace)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OtelcolExporterService.html":{"url":"injectables/OtelcolExporterService.html","title":"injectable - OtelcolExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OtelcolExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts\n        \n\n            \n                Description\n            \n            \n                OtelcolExporterService class\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                otelcolConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts:25\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts:43\n                \n            \n\n\n            \n                \n                    Return a CollectorExporter with the configuration\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        a CollectorExporter\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            otelcolConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CollectorExporterConfigBrowser\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts:25\n                            \n                        \n\n                \n                    \n                        CollectorExporterConfig\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IExporter } from '../exporter.interface';\nimport { SpanExporter } from '@opentelemetry/tracing';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n} from '../../../configuration/opentelemetry-config';\nimport {\n  CollectorTraceExporter\n} from '@opentelemetry/exporter-collector/build/src/platform/browser';\nimport {\n  CollectorExporterConfigBrowser,\n} from '@opentelemetry/exporter-collector/build/src/platform/browser/types';\n\n/**\n * OtelcolExporterService class\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OtelcolExporterService implements IExporter {\n  /**\n   * CollectorExporterConfig\n   */\n  private otelcolConfig: CollectorExporterConfigBrowser;\n\n  /**\n   * constructor\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OpenTelemetryInjectConfig) config: OpenTelemetryConfig) {\n    this.otelcolConfig = {\n      serviceName: config.commonConfig.serviceName,\n      url: config.otelcolConfig?.url,\n      headers: config.otelcolConfig?.headers,\n    };\n  }\n\n  /**\n   * Return a CollectorExporter with the configuration\n   * @return a CollectorExporter\n   */\n  getExporter(): SpanExporter {\n    return new CollectorTraceExporter(this.otelcolConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SpanExporterService.html":{"url":"classes/SpanExporterService.html","title":"class - SpanExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SpanExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/span-exporter.service.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            IExporter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/span-exporter.service.ts:8\n                \n            \n\n\n            \n                \n                    Not used, just a definition for injection\n\n\n                    \n                        Returns :     SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SpanExporter } from '@opentelemetry/tracing';\nimport { IExporter } from './exporter.interface';\n\nexport class SpanExporterService implements IExporter {\n  /**\n   * Not used, just a definition for injection\n   */\n  getExporter(): SpanExporter {\n    return undefined;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n0.10.2-1 (2020-08-16)\n0.10.2 (2020-08-09)\nFeatures\n\nupgrade to 0.10.2 otelcol (351ce3e)\n\nBug Fixes\n\nangular 10 ngcc trouble (4d886fb)\n\n0.10.1 (2020-07-28)\nFeatures\n\nupdate angular (bfc26ae)\nupdate opentelemtry 0.10.1 (94e0b44)\n\nBug Fixes\n\notlp collector version 0.4.0 (#9) (80d2ada)\nrelease (d2ecbb8)\n\n0.9.0 (2020-06-28)\nFeatures\n\nadd cypress test e2e (7b4c031)\nadd new release 0.9.0 (#6) (0319eee)\n\n0.8.3 (2020-06-28)\nFeatures\n\nadd cypress test e2e (7b4c031)\nadd new release 0.9.0 (#6) (0319eee)\n\n0.8.3-2 (2020-06-08)\nBug Fixes\n\nchangelog (8d45a2c)\nproblem with context and trace parent id (#4) (f195a50)\n\n0.8.3-1 (2020-06-05)\nFeatures\n\nadd jaeger propagator (fad044a)\nadd JaegerPropagator to composite (8e268a9)\n\nBug Fixes\n\ncontext traceId problem (#3) (c6368c9) \n\n0.8.3 (2020-05-30)\nFeatures\n\nadd docs (bd69598)\nreview before new release version (1229a9d)\n\n0.8.2 (2020-05-30)\nFeatures\n\nadd composite (7a5b07e)\nadd composite header (83fc1f3)\nadd example ok (e5eb09e)\nadd sampling configuration (ad03334)\nangular downgrade in progress (92330f9)\nen cours (0885b40)\nok (dd7a0e5)\nok (3516488)\nok (b63afc1)\nok (b679883)\nOK it works (ec28651)\ntest (0f35b5c)\n\nBug Fixes\n\ncan be use in angular 9/node 12/Typescript 3.6.0 (563071d)\ndel doc dir (96da55f)\ndelete unused file (dda5d54)\ndelete unused file (a1746bf)\ndoc and code (4a000b9)\nno subject with JSONP and XSRF (95167b9)\nno subject with JSONP and XSRF (47aba25)\nok (371886a)\npublish (613c16d)\npublish (47c249b)\npublish (a517094)\npublish and readme (412d2fd)\nsome typo (80f7bf8)\nsome typo (735b05d)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            CommonCollectorConfig\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            JaegerPropagatorConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            OpenTelemetryConfig\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            OtelCollectorConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            variable\n            OpenTelemetryInjectConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts\n            \n            interceptor\n            OpenTelemetryHttpInterceptor\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.service.ts\n            \n            injectable\n            ConsoleSpanExporterService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n            \n            interface\n            IExporter\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts\n            \n            injectable\n            OtelcolExporterService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/span-exporter.service.ts\n            \n            class\n            SpanExporterService\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts\n            \n            injectable\n            B3PropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts\n            \n            injectable\n            CompositePropagatorService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/http-text-propagator.service.ts\n            \n            class\n            HttpTextPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator/http-trace-context-propagator.service.ts\n            \n            injectable\n            HttpTraceContextPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts\n            \n            injectable\n            JaegerHttpTracePropagatorService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-http-text-propagator.service.ts\n            \n            injectable\n            NoopHttpTextPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n            \n            interface\n            IPropagator\n            \n                100 %\n                (2/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^10.0.5\n        \n            @angular/cdk : ^10.1.1\n        \n            @angular/common : ^10.0.5\n        \n            @angular/compiler : ^10.0.5\n        \n            @angular/core : ^10.0.5\n        \n            @angular/forms : ^10.0.5\n        \n            @angular/material : ^10.1.1\n        \n            @angular/platform-browser : ^10.0.5\n        \n            @angular/platform-browser-dynamic : ^10.0.5\n        \n            @angular/router : ^10.0.5\n        \n            @opentelemetry/exporter-collector : ^0.10.2\n        \n            @opentelemetry/propagator-jaeger : ^0.9.0\n        \n            @opentelemetry/web : ^0.10.2\n        \n            body-parser : ^1.19.0\n        \n            concurrently : ^5.2.0\n        \n            ngx-highlight-js : ^9.0.0\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nOpenTelemetry Angular Interceptor\n@jufab/opentelemetry-angular-interceptor is an Angular Library to deploy OpenTelemetry in your Angular application\nNEW VERSION : !!breaking change!! this version use module (not configuration) more info in this readme\nThis library uses opentelemetry-js package\nOnly works for Angular >= 9.0.0\nMore info : https://jufab.github.io/opentelemetry-angular-interceptor/\n\n\nTable of contents\n\nOpenTelemetry Angular Interceptor\nTable of contents\nGetting started\nInstallation\nConfiguration\nExample global Configuration\nCommon Configuration\nOpenTelemetry-collector Configuration\nJaeger Propagator Configuration\n\n\nAngular module\nExporter module\nPropagator module\n\n\n\n\nHow it works\nExample\nRun\n[Optional] Result in OpenTelemtery-collector\n\n\nTroubleshoot\nAngular 10 Warning\nOther\n\n\n\n\n\nGetting started\nInstallation\nWith npm :\nnpm install @jufab/opentelemetry-angular-interceptor @opentelemetry/web @opentelemetry/exporter-collector @opentelemetry/propagator-jaegerConfiguration\nUse the \"OpentelemetryConfig\" interface to configure the Tracer\nexport interface OpenTelemetryConfig {\n  commonConfig: CommonCollectorConfig;\n  otelcolConfig?: OtelCollectorConfig;\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}Example global Configuration\nFrom the example-app\nopentelemetryConfig: {\n    commonConfig: {\n      console: true, //(boolean) Display trace on console\n      production: false, //(boolean) Send trace with BatchSpanProcessor (true) or SimpleSpanProcessor (false) more info : https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-api#tracing\n      serviceName: 'example-app', //Service name send in trace\n      probabilitySampler: '0.7', //Samples a configurable percentage of traces, string value between '0' to '1'\n    },\n    otelcolConfig: {\n      url: 'http://localhost:55681/v1/trace', //URL of opentelemetry collector\n    },\n    jaegerPropagatorConfig: {\n      customHeader: 'custom-header',\n    }\n  }\nCommon Configuration\n\nconsole: (boolean) Display trace on console if true\nproduction: (boolean)Send trace via BatchSpanProcessor (Async) or SimpleSpanProcessor (Sync) : It's recommend to use BatchSpanProcessor on Production.\nserviceName: (string) Service name in your trace\nprobabilitySampler: (string) Samples a configurable percentage of traces, value between 0 to 1\n\nOpenTelemetry-collector Configuration\n\nurl: (string) url of opentelemetry collector (default : http://localhost:55681/v1/trace)\nheaders: list of custom header (more info: https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-exporter-collector)\n\nJaeger Propagator Configuration\n\ncustomHeader: (string) custom header (more info : https://github.com/open-telemetry/opentelemetry-js-contrib/tree/master/propagators/opentelemetry-propagator-jaeger)\n\nAngular module\nTo insert OpenTelemetryInterceptorModule, you can add in your application module (generally app.module.ts)\nExporter module\nThere is 2 exporters:\n\nOtelColExporterModule : OpenTelemetry exporter (more info : https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-exporter-collector)\nConsoleSpanExporterModule : Console Exporter\n\nPropagator module\nthere is 5 propagators (more info about propagator: https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-core)\n\nNoopHttpTextPropagatorModule : This is a fake propagator\nB3PropagatorModule : Use B3 propagator\nHttpTraceContextPropagatorModule : Use HttpTraceContext propagator\nJaegerHttpTracePropagatorModule : Use JaegerHttpPropagator (more info about this one: https://github.com/open-telemetry/opentelemetry-js-contrib/tree/master/propagators/opentelemetry-propagator-jaeger)\nCompositePropagatorModule : use all of the propagator\n\nimport { NgModule } from '@angular/core';\n...\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { OpenTelemetryInterceptorModule, OtelColExporterModule, CompositePropagatorModule } from '@jufab/opentelemetry-angular-interceptor';\nimport { environment } from '../environments/environment';\n...\n\n@NgModule({\n  declarations: [AppComponent, ...],\n  imports: [\n    ...\n    HttpClientModule,\n    //Insert module OpenTelemetryInterceptorModule with configuration, HttpClientModule is used for interceptor\n    OpenTelemetryInterceptorModule.forRoot(environment.opentelemetryConfig),\n    //Insert OtelCol exporter module\n    OtelColExporterModule,\n    //Insert propagator module\n    CompositePropagatorModule,\n    ...\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}How it works\nThis library is based on HttpClientModule and the HTTP_INTERCEPTORS\nOpenTelemetryInterceptor implement an HttpInterceptor and the intercept method.\nThis implementation initialise a WebTracerProvider, create a Span and add header propagation in the current call.\n\nThe response body is adding by an event in span.\n\nExample\nThis project have an \"example-app\" as Angular application example.\nprojects/example-app\nYou can see how configure and insert this module.\nYou can althought test opentelemetry-angular-interceptor with this application.\nRun\nTo start this Example application, run command :\nnpm run start:complete-example-appand open the application at http://localhost:4200\n[Optional] Result in OpenTelemtery-collector\nIf you want to see the result in a collector *, there's a docker-compose available in this project.\nYou can start it with this command :\ndocker-compose -f projects/example-app/collector/docker-compose.yaml up -dGo to the jaeger application (http://localhost:16686) to see result.\nMore info about the collector here : https://github.com/open-telemetry/opentelemetry-collector\n\n* without an Agent or a Collector you can see an error in your browser about sending a \"trace\".\n\nTroubleshoot\nAngular 10 Warning\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/web'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/core'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/tracing'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/api'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/exporter-collector/build/src/platform/browser'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependenciesAdd to your angular.json\n\"options\": {\n  \"allowedCommonJsDependencies\": [\n    \"@opentelemetry/web\",\n    \"@opentelemetry/core\",\n    \"@opentelemetry/tracing\",\n    \"@opentelemetry/api\",\n    \"@opentelemetry/exporter-collector\",\n    \"@opentelemetry/context-base\",\n    \"@opentelemetry/propagator-jaeger\"\n  ],Other\n\n\n\nError\nFix\n\n\n\n\nerror TS2694: Namespace 'NodeJS' has no exported member 'Timeout'.\nNeed dependence @type/node >= 12.0.2\n\n\nerror TS1086: An accessor cannot be declared in an ambient context.\nNeed dependence typescript >= 3.6.0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.You may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\nEND OF TERMS AND CONDITIONS\nAPPENDIX: How to apply the Apache License to your work.\nTo apply the Apache License to your work, attach the following\nboilerplate notice, with the fields enclosed by brackets \"[]\"\nreplaced with your own identifying information. (Don't include\nthe brackets!)  The text should be enclosed in the appropriate\ncomment syntax for the file format. We also recommend that a\nfile or class name and description of purpose be included on the\nsame \"printed page\" as the copyright notice for easier\nidentification within third-party archives.\nCopyright [yyyy] [name of copyright owner]\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        B3PropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompositePropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConsoleSpanExporterModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HttpTraceContextPropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JaegerHttpTracePropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NoopHttpTextPropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OpenTelemetryInterceptorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OtelColExporterModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTask for opentelemetry-angular-interceptor\nTodo in project...\nTodo\n\n Add in issue Github this todo list  \n Add more configuration for OpenTelemetry-collector : See here  \n Zipkin  \n Add Zipkin exporter (when it's available)  \n Add more configuration for Zipkin : here  \n\n\n Jaeger  \n Add Jaeger exporter (when it's available)  \n Add more configuration for Jaeger : here  \n\n\n Prepare correlation-context here  \n jaeger-propagator doesn't work with version 0.9.0  \n Add new version collector in example after this fix (https://github.com/open-telemetry/opentelemetry-collector/issues/1385)  \n\nIn Progress\nDone ✓\n\n Add sampler in configuration => here  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            OpenTelemetryInjectConfig   (projects/.../opentelemetry-config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            OpenTelemetryInjectConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('opentelemetry.config')\n                        \n                    \n\n                \n                    \n                        OpenTelemetryInjectConfig : Config injection \n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
